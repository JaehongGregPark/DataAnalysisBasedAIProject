AI2_day03
거리구하기 코드 -> 붓꽃 데이터셋 모델 학습 -> 교차검증
1. 거리구하기
- 분류알고리즘(KNN 알고리즘)
metric : 모델에서 사용하는 실제 거리 측정방법
	맨하탄거리 : 두 데이터 포인트간의 차이를 모든 차원에서 절대값으로 계산하고 모두 합한 값을 거리로 사용
	유클리드거리 : 두 데이터 포인트간의 차이를 모든 차원에서 제곱한 후 모두 합한값을 제곱근으로 계산한 값을 거리로 사용
  	맨해튼거리 : 두 데이터 포인트 간의 차이를 모든 차원에서 절대값으로 계산하고
      		가장 큰 차이 값을 거리로 사용
   	미스테이로비치 거리 : 두 데이터 포인트 간의 각 차원의 차이를 p승한 값들의 합을
      		p번째 루트로 계산한 값을 거리로 사용
      		p = 1 맨하탄거리, p = 2 유클리드거리와 동일함

2. 머신러닝 워크플로우(Machine Learning Workflow)	
수집 -> 점검 및 탐색 -> 전처리및 정제 ->테스트데이터 -> 모델링및 훈련 -> 평가 -> 배포
1) 수집
	csv 파일, txt, 이미지 파일등 필요한 데이터를 수집
2) 점검및 탐색
	데이터를 점검하고 탐색하는 단계
	데이터의 구조, 노이즈 데이터, 머신러닝 적용시키기 위해 어떻게 정제할지 등을 파악하는 단계
	탐색적 데이터분석 (Exploratory Data Analysis,EDA분석)단계라고 한다

3) 전처리 및 정제
	빠르고 정확한 데이터를 전처리 하기 위해서는 다양한 라이브러리에 대한 지식이 필요함
	까다로운 경우 전처리 과정에서 머신러닝이 사용되기도 한다
4) 모델링 및 훈련
	머신러닝에 대한 코드를 작성하는 단계(모델링단계)
	전처리가 완료된 데이터를 머신러닝 알고리즘을 통해 기계에게 학습(training,훈련)
	모든 데이터를 학습시키지 않고 일부는 테스트용으로 남겨둔다(훈련데이터, 테스트 데이터 분리)
	훈련용 데이터만 학습을 시킨다
5) 모델평가
	테스트용 데이터로 성능평가
	테스트용 데이터가 실제 정답과 얼마나 가까운지를 측정
6) 배포
	기계가 성공적으로 훈련되었다면  완성된 모델이 배포되는 단계
3. 모델 학습시 사용하는 메소드
	.fit() :주어진 데이터를 사용하여 머신러닝 모델을 학습시킨다
		특성데이터와 레이블 데이터를 매개변수로 사용하며 학습된 모델을 반환한다
	.predict():학습된 모델을 사용하여 새로운 데이터의 레이블을 예측한다
		새로운 데이터의 특성을 매개변수로 전달하여 모델이 예측한 레이블을 반환한다
	accuracy_score(): 모델이 예측한 결과와 실제 정답(레이블)을 비교하여
      		분류 모델의 정확도를 계산하여 반환한다
4. 평가지표(오차행렬)
	분류 모델의 성능을 평가하는데 사용되는 표
	실제 클래스와 모델이 예측한 클래스 간의 관계를 나태낸다(주로 이진 분류 문제에서 사용)
	
오차행렬
			Predicted Negative 	Predicted Positive
Actual Negative			TN			FP
Actual Positive			FN			TP
	
TN(True Negative) 	: 실제 값이 Negative이고 모델이 Negative로 예측한 경우
FP(False Positive)	: 실제 값이 Negative이지만 모델이 Positive로 잘못예측한 경우
FN(False Negative)  	: 실제 값이 Positive이지만 모델이 Negative로 잘못 예측한 경우
TP(True Positive)   	: 실제 값이 Positive이고 모델이 Positive로 예측한 경우

1) 정확도(Accuracy) : TP + TN / TP + TN + FP + FN
   전체 데이터 중 정확하게 예측한 데이터 수

2) 재현율(Recall) : TP / TP + FN
   실제 Positive인 것 중 모델이 Positive로 예측한 비율

3) 정밀도(Precision) : TP / TP + FP
   모델이 Positive로 예측한 것 중에서 실제 Positive인 것의 비율

4) F1-Score : 2 * 정밀도 * 재현율 / 재현율 + 정밀도
   정밀도와 재현율의 조화 평균

5. 교차검증
	학습데이터셋을 학습 데이터셋과 검증 데이터셋으로 분리
	학습데이터셋(train) : 학습을 위한 데이터
	검증데이터셋(vaiidation) : 학습된 모델의 성능을 일차 평가
	평가데이터셋(test) : 모든 학습/검증 과정이 완료된 후 최종적으로 성능 평가
장점
	모든 데이터셋을 훈련에 활용할 수 있다.(정확도 향상, underfitting을 방지)
	평가에 사용되는 데이터 편중을 막을수 있다
	평가 결과에 좀 더 일반화된 모델을 만들 수 있다

단점
   	반복해야하는 횟수가 많기 때문에 모델 훈련/평가 시간이 오래 걸린다

1) K-폴드 교차검증(K-Fold Cross Validation)
	K개의 폴드 세트에 K번의 학습과 검증 평가를 반복수행
	
	K=5
	분할1 	분할2	분할3	분할4	분할5
	검증	학습	학습	학습	학습
	학습	검증	학습	학습	학습
	학습	학습	검증	학습	학습
	학습	학습	학습	검증	학습
	학습	학습	학습	학습	검증
원리
   1) 훈련세트를 k개의 폴드로 나눈다(폴드 : 한 덩어리)
   2) 첫번째 폴드를 검증 세트로 사용하고 나머지폴드(k-1)를 훈련세트로 사용한다
   3) 모델을 훈련한 후 검증세트로 평가한다
   4) 차례대로 다음 폴드를 검증세트로 사용하며 반복한다
   5) k개의 검증세트로 k번 성능 평가 한 뒤 계산된 성능의 평균을 내어 최종 성능을 계산한다

과정
   1) 데이터 준비 : 학습데이터와 테스트 데이터 나뉘어짐
   2) 데이터 분할 : 데이터를 k개의 폴드로 나눔
   3) 모델학습과 평가 : k개의 폴드 중 하나를 선택하여 테스트 세트로 사용하고
      나머지 k-1개의 폴드를 학습 세트로 사용함
   4) k번 반복 : 1~3과정을 k번 반복, 각각의 폴드가 한번씩 테스트 세트로 사용되도록 모델을 평가
   5) 성능평가 : k번의 평가를 통해 얻은 성능 지표를 평균내어 최종적인 모델의 성능을 평가