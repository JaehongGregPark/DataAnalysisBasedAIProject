{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"16-NDp8m_YKzuyI5e__12tBWDkwU05tCN","timestamp":1708147937693},{"file_id":"11qcgodCCWGlpj4TLg69P_js1O7NwuLQM","timestamp":1707042176586},{"file_id":"1ueoOW4gePfLdjTN9C-oaILM-Z4nAHHTr","timestamp":1707040923969}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#1. 데이터 시각화 참고"],"metadata":{"id":"QHwcbfbaoUHP"}},{"cell_type":"markdown","source":["## 여러개의 서브플롯 생성"],"metadata":{"id":"McZ0dEOMm2eT"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","!sudo apt-get install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf\n","#런타임 재시작\n","plt.rc('font', family='NanumBarunGothic')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tT4ulTWL1uy6","executionInfo":{"status":"ok","timestamp":1708147809273,"user_tz":-540,"elapsed":4327,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"291cbb8d-41f3-4d15-8fc1-fe25beb9bef3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","fonts-nanum is already the newest version (20200506-1).\n","0 upgraded, 0 newly installed, 0 to remove and 33 not upgraded.\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 12 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YxCXVb6z0oB4","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1707042138969,"user_tz":-540,"elapsed":7,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"21769069-8bc4-414c-d679-5e0861cb43a4"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 0 Axes>"]},"metadata":{}}],"source":["#2행 2열\n","# 서브플롯1 : 선그래프 [1, 2, 3], [4, 5, 6]\n","# 서브플롯2 : 산포그래프 [1, 2, 3], [4, 5, 6]\n","# 서브플롯3 : 막대그래프 #판다스\n","# 서브플롯4 : 원형그래프 #판다스\n","\n","#판다스 데이터 프레임 이용한 값 생성\n","#딕셔너리 형 데이터를 데이터 프레임으로 바꾼후 진행\n","# 항목 : ['a', 'b', 'c'], 값:[30, 50, 20]\n","\n","#전체 타이틀 : 2행 2열의 서브플롯\n","plt.tight_layout() #서브플롯간의 간격 조정"]},{"cell_type":"code","source":["#서브플롯1, 서브플롯2 사용될 x, y 생성\n","x = [1, 2, 3]\n","y = [4, 5, 6]\n","\n","#서브플롯3, 서브플롯4 사용될 데이터 프레임생성\n","df = pd.DataFrame({'항목':['a', 'b', 'c'], '값':[30, 50, 20]})\n","df['항목']\n","\n","#2행 2열 서브플롯\n","# figure = plt.figure()\n","# axes1 = figure.add_subplot(221)\n","# axes2 = figure.add_subplot(222)\n","# axes3 = figure.add_subplot(223)\n","# axes4 = figure.add_subplot(224)\n","# plt.suptitle(\"2행 2열 서브플롯\")\n","# plt.show()\n","\n","figure, axes = plt.subplots(2, 2) #2행 2열의 서브플롯을 만듦\n","\n","#첫번째 서브플롯(2행 2열 첫번째)\n","axes[0, 0].plot(x, y) #axes 인덱싱[0, 0] 왼쪽 위\n","axes[0, 0].set_title('서브플롯1')\n","\n","#두번째 서브플롯(2행 2열 두번째)\n","axes[0, 1].scatter(x, y) #[0, 1] 오른쪽 위\n","axes[0, 1].set(title = '서브플롯2', xlabel = '항목', ylabel='값')\n","\n","#세번째 서브플롯(2행 2열 세번째)\n","axes[1, 0].bar(df['항목'], df['값']) #[1,0] 왼쪽 아래\n","axes[1, 0].set_title(\"서브플롯3\")\n","\n","#네번째 서브플롯(2행 2열 네번째)\n","axes[1, 1].pie(df['값'], labels=df['항목'], autopct=\"%.2f%%\",\n","               wedgeprops= {'edgecolor':'black'}) #[1, 1] 오른쪽 아래\n","axes[1, 1].set_title('서브플롯4')\n","\n","figure.suptitle('2행 2열의 서브플롯', fontsize = 20)\n","\n","plt.tight_layout() #서브플롯간의 간격 조정\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":492},"id":"T2OZTrHJ2Njw","executionInfo":{"status":"ok","timestamp":1708147832666,"user_tz":-540,"elapsed":915,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"ca906b0a-6377-4cca-cd84-e0c8ef45c133"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#2. 람다, 필터, 맵 함수"],"metadata":{"id":"5jceO0srorgL"}},{"cell_type":"markdown","source":["##1. 람다함수"],"metadata":{"id":"U-dqHX-5FzQ4"}},{"cell_type":"code","source":["# def test(x, y=1):\n","#     return x+y, x-y\n","#사용자 정의함수에서 다중 반환일 경우 tuple 타입으로 반환\n","\n","f = lambda x, y : x + y\n","#함수명 = lambda 매개변수1, 매개변수2 : 반환식\n","print(f(1, 2))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"joykGGmlF0pr","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":27,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"a6a51638-ca67-4d5d-d033-f5103e34f562"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n"]}]},{"cell_type":"code","source":["#람다함수 기본값 설정\n","f = lambda x, y=10: x * y\n","print(f(10)) #인수가 1개일 때는 매개변수에 설정된 기본값이 사용하게 됨\n","print(f(10, 20))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ciZpBwzMGLre","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":26,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"6f87d132-c6d4-40c3-adfd-2c9a941f5e8f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100\n","200\n"]}]},{"cell_type":"code","source":["#사용자 정의함수 다중입력\n","def test(*x):\n","    print(x, type(x))\n","\n","test(10)\n","test(10, 20, 30, 40, 50)\n","\n","#사용자 정의함수 다중반환\n","def test(x, y):\n","    return x+y, x-y, x*y\n","\n","# 변수 = 함수명(인수)\n","# print(변수)\n","# print(함수명(인수))\n","print(test(10, 20), type(test(10, 20)))\n","a, b, c = test(10, 20)\n","print(a, b, c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uOsq1mkCGbPg","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":25,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"9f9e41ea-40b7-4585-b9aa-705a9111290b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10,) <class 'tuple'>\n","(10, 20, 30, 40, 50) <class 'tuple'>\n","(30, -10, 200) <class 'tuple'>\n","30 -10 200\n"]}]},{"cell_type":"code","source":["#람다함수의 다중 입력\n","f = lambda *x : max(x) #*(애스터리스크) 매개변수의 개수를 지정하지 않고 매개변수를 사용할수있다\n","                    #몇개의 인수가 들어올지 모를 때 사용함\n","print(f(1, 3, 5, 7), type(f(1, 3, 5, 7)))\n","\n","#람다함수의 다중반환 : 리스트에 저장하여 다중반환 구현 가능하다\n","f = [lambda x: x+1, lambda x: x+2, lambda x: x+3]\n","print(f[0](10))\n","print(f[1](10))\n","print(f[2](10))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c19z4G6GG57Q","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":24,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"98423861-8059-4ca7-ce34-931073e464a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["7 <class 'int'>\n","11\n","12\n","13\n"]}]},{"cell_type":"code","source":["#람다함수를 이용해 최대값, 최소값 구하기\n","\n","li = [[9, 1], [8, 2], [7, 3], [6, 4]]\n","print(li, type(li))\n","\n","max1 = max(li)\n","print(max1)\n","#최대값 찾는 람다함수\n","max2 = lambda x:max(x, key=lambda item:item[1])\n","print(max2(li))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-GlPjI_TIw-W","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":23,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"5ebba3d3-a011-4b36-e4bb-610677d84513"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[9, 1], [8, 2], [7, 3], [6, 4]] <class 'list'>\n","[9, 1]\n","[6, 4]\n"]}]},{"cell_type":"code","source":["# 판다스, apply, lambda\n","\n","data = {'이름':['홍길동', \"이순신\", '강감찬'],\n","        '지역':['서울', '부산', '강원'],\n","        '나이':[10, 50, 20]}\n","df = pd.DataFrame(data)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"I2PcMU0nKPua","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":22,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"9737ddea-22c6-4ab4-de18-2043e1485a6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    이름  지역  나이\n","0  홍길동  서울  10\n","1  이순신  부산  50\n","2  강감찬  강원  20"],"text/html":["\n","  <div id=\"df-1aab70b9-1014-4cc6-a98e-c2b3464483a0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>지역</th>\n","      <th>나이</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>서울</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이순신</td>\n","      <td>부산</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강감찬</td>\n","      <td>강원</td>\n","      <td>20</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1aab70b9-1014-4cc6-a98e-c2b3464483a0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1aab70b9-1014-4cc6-a98e-c2b3464483a0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1aab70b9-1014-4cc6-a98e-c2b3464483a0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d493b151-cd39-4461-b14f-7021451a8f6b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d493b151-cd39-4461-b14f-7021451a8f6b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d493b151-cd39-4461-b14f-7021451a8f6b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_28ad2c4c-a96c-468d-b8b8-4503b8cc3968\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_28ad2c4c-a96c-468d-b8b8-4503b8cc3968 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#나이열 + 10\n","df['나이+10'] =df['나이'].apply(lambda x : x+10)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"AXJVyTRLKi2O","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":22,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"3992e145-55f6-4697-9fb8-0104ae243a30"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    이름  지역  나이  나이+10\n","0  홍길동  서울  10     20\n","1  이순신  부산  50     60\n","2  강감찬  강원  20     30"],"text/html":["\n","  <div id=\"df-c5acb9a6-db6b-477d-996c-28781b3d01ab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>지역</th>\n","      <th>나이</th>\n","      <th>나이+10</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>서울</td>\n","      <td>10</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이순신</td>\n","      <td>부산</td>\n","      <td>50</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강감찬</td>\n","      <td>강원</td>\n","      <td>20</td>\n","      <td>30</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5acb9a6-db6b-477d-996c-28781b3d01ab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c5acb9a6-db6b-477d-996c-28781b3d01ab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c5acb9a6-db6b-477d-996c-28781b3d01ab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ffc04788-f9d6-4b13-8166-394c16531479\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ffc04788-f9d6-4b13-8166-394c16531479')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ffc04788-f9d6-4b13-8166-394c16531479 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bb9e1fed-2baf-4868-ba53-740b9db2735a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bb9e1fed-2baf-4868-ba53-740b9db2735a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["#apply함수와 조건부 람다함수\n","df['카테고리'] = df['나이'].apply(lambda x:'old' if x >= 30 else 'young')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"6Na2b02mK3Qw","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":20,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"862c54f7-dbbc-4da7-dc27-0f0bedac993e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    이름  지역  나이  나이+10   카테고리\n","0  홍길동  서울  10     20  young\n","1  이순신  부산  50     60    old\n","2  강감찬  강원  20     30  young"],"text/html":["\n","  <div id=\"df-73da41d9-a1f2-4d6b-8495-495ab050ed67\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>지역</th>\n","      <th>나이</th>\n","      <th>나이+10</th>\n","      <th>카테고리</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>서울</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>young</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이순신</td>\n","      <td>부산</td>\n","      <td>50</td>\n","      <td>60</td>\n","      <td>old</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강감찬</td>\n","      <td>강원</td>\n","      <td>20</td>\n","      <td>30</td>\n","      <td>young</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73da41d9-a1f2-4d6b-8495-495ab050ed67')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-73da41d9-a1f2-4d6b-8495-495ab050ed67 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-73da41d9-a1f2-4d6b-8495-495ab050ed67');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-990e192b-e309-4693-96b0-3fb5fef4e6b8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-990e192b-e309-4693-96b0-3fb5fef4e6b8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-990e192b-e309-4693-96b0-3fb5fef4e6b8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9e65a2b5-8631-4a2d-9aa1-effddb9feec8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9e65a2b5-8631-4a2d-9aa1-effddb9feec8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["##2. 필터(filter)함수"],"metadata":{"id":"mlwVATX7LTWV"}},{"cell_type":"code","source":["f = lambda x:x>0\n","\n","print(list(range(-5, 5)))\n","\n","print(list(filter(f, range(-5, 5))))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H7FnGA3vLbUm","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":19,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"33c06a61-fce2-4faa-b8be-0f040b85216e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4]\n","[1, 2, 3, 4]\n"]}]},{"cell_type":"code","source":["#사용자 정의함수\n","def test(x):\n","    if x > 0:\n","        return True\n","    else:\n","        return False\n","\n","print(list(range(-3, 8)))\n","\n","print(list(filter(test, range(-3, 8))))\n","#필터함수에서 사용되는 함수는 논리값을 반환함수로 인지\n","#반환값이 0이 아닌 모든 값은 참으로 간주함\n","# 어떤 반환형태도 0을 반환하지 않으므로 모두 다 True값이 되어서 범위를 그대로 반환함"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r9bMGEfqLw1Z","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":17,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"c60c3998-de74-4e7b-95e9-61dbb517a62e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\n","[1, 2, 3, 4, 5, 6, 7]\n"]}]},{"cell_type":"code","source":["#짝수를 필터링하는 함수\n","def even(x):\n","    return x % 2 == 0\n","\n","#필터링할 데이터(0~9 정수)\n","data = list(range(10))\n","\n","#사용자 정의함수를 이용하여 짝수만 필터링\n","filtered = list(filter(even, data))\n","print(filtered)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eTXMsGkDMlMm","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":16,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"95c37638-5b33-4e24-ff68-eabc2002b52a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 2, 4, 6, 8]\n"]}]},{"cell_type":"code","source":["#데이터 프레임의 조건을 사용하여 필터링\n","\n","#나이가 30이상인 행선택\n","filter_df = df[df['나이'] >= 30]\n","print(filter_df)\n","filter_df\n","\n","#조건함수, loc메소드\n","def age_filter(row):\n","    return row['나이'] >= 30 #나이 열의 값이 30보다 큰 값을 반환\n","\n","filter_df = df.loc[df.apply(age_filter, axis = 1)]\n","#age_filter 반환값을 각 행에 적용, axis = 1 행에 적용됨\n","print(filter_df)\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":213},"id":"G2vbtcpPNdIq","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":15,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"ee36b924-5dde-47fa-b56f-8f332014f174"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    이름  지역  나이  나이+10 카테고리\n","1  이순신  부산  50     60  old\n","    이름  지역  나이  나이+10 카테고리\n","1  이순신  부산  50     60  old\n"]},{"output_type":"execute_result","data":{"text/plain":["    이름  지역  나이  나이+10   카테고리\n","0  홍길동  서울  10     20  young\n","1  이순신  부산  50     60    old\n","2  강감찬  강원  20     30  young"],"text/html":["\n","  <div id=\"df-1fc38cde-b3ba-4560-8461-e6e9fc55397b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>지역</th>\n","      <th>나이</th>\n","      <th>나이+10</th>\n","      <th>카테고리</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>서울</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>young</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이순신</td>\n","      <td>부산</td>\n","      <td>50</td>\n","      <td>60</td>\n","      <td>old</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강감찬</td>\n","      <td>강원</td>\n","      <td>20</td>\n","      <td>30</td>\n","      <td>young</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1fc38cde-b3ba-4560-8461-e6e9fc55397b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1fc38cde-b3ba-4560-8461-e6e9fc55397b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1fc38cde-b3ba-4560-8461-e6e9fc55397b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-231ed64c-3ae0-464b-8a90-536d9ea1f779\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-231ed64c-3ae0-464b-8a90-536d9ea1f779')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-231ed64c-3ae0-464b-8a90-536d9ea1f779 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5abe1486-dd32-4a3f-b02d-bc6decd90450\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5abe1486-dd32-4a3f-b02d-bc6decd90450 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["##3. 맵(map)함수"],"metadata":{"id":"u4Y308QkOqaE"}},{"cell_type":"code","source":["#함수생성\n","f1 = lambda x : x > 0\n","f2 = lambda x : x ** 2\n","\n","#map(적용함수, 범위)\n","print(list(map(f1, range(-5, 5))))\n","print(list(map(f2, range(5))))\n","\n","#list(), set() 등의 구문을 추가하지 않으면 객체로 <map object at ..>\n","#iterator형태로 출력되므로 항상 구문 추가해야 원하는 결과를 받아 볼 수 있다"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DJPknFMlOs08","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":13,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"647668af-7f27-4739-be80-898db2250cb4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[False, False, False, False, False, False, True, True, True, True]\n","[0, 1, 4, 9, 16]\n"]}]},{"cell_type":"code","source":["#형변환\n","data = [-5.2, 1.4, 6.3]\n","f = map(int, data)\n","print(list(f))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CM1R5sANPUPt","executionInfo":{"status":"ok","timestamp":1707042141598,"user_tz":-540,"elapsed":5,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"e114dbae-b6e1-40fc-cdf7-09003b8758ef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-5, 1, 6]\n"]}]},{"cell_type":"markdown","source":["#과제\n","> [과제 제출 기한]\n","- 2024/02/11(일요일 pm 20시까지)\n","\n","> [과제 제출]\n"," - 현재 파일을 드라이브에 사본 저장 후 과제만 그대로 복붙한 코랩 파일 생성\n"," - 파일명 : AI1_day08과제_본인이름.ipynb\n"," - 메일 제목 : AI1 day08 과제 본인이름\n"," - 메일 본문 : 안녕하세요. AI1 수강중인 000입니다.\n"," 8일차 코랩링크 첨부합니다.\n"," 코랩링크 :\n"," (질문있을 경우 내용 간단히 정리 작성-코랩에 코드와 질문 상세 작성)\n"," 감사합니다.\n","\n"," > [링크 공유 방법]\n"," - 우측 상단 공유클릭 -> 일반액세스에서 제한됨을 링크가 있는 모든 사용자로 변경 -> 공유버튼 클릭(링크 자동 복사됨)\n"],"metadata":{"id":"wFIi4SWQPmoQ"}},{"cell_type":"markdown","source":["##1"],"metadata":{"id":"XLbS5ToqUwNU"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","#아래와 같은 데이터 프레임 생성\n","# \t    이름\t 성별\t나이\t키\t    몸무게\t학생여부\n","# 0\t    홍길동\t 남\t    15\t    172.5\t70.3\tFalse\n","# 1\t    강감찬\t 남\t    14\t    180.2\t82.1\tFalse\n","# 2\t    신사임당 여\t    25\t    158.7\t47.5\tFalse\n","# 3\t    이순신\t 남\t    54\t    165.5\t71.2\tTrue\n","# 4\t    유관순\t 여\t    17\t    140.6\t65.8\tTrue\n","\n","#1) 데이터프레임으로 변환 후 test.csv파일로 저장\n","\n","#2) csv 파일 읽기\n","\n","#3) 데이터 프레임 처음 3개 행, 끝에 1개 행 출력 #head(), tail()\n","\n","#4) 데이터 프레임 기본 정보와 기술 통계정보 출력\n"],"metadata":{"id":"q0T0M8UnQA0x"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##2"],"metadata":{"id":"F-AyU7nFU0Wx"}},{"cell_type":"code","source":["data = {\n","    '이름' : ['짱구', '유리', '맹구', '철수', '훈이'],\n","    '국어' : [80, 90, 70, 85, 94],\n","    '영어' : [95, 92, 75, 80, 74],\n","    '수학' : [70, 77, 90, 85, 80],\n","    '과학' : [94, 88, 78, 65, 72]\n","    }\n","#1) 데이터 프레임으로 변환 후 인덱스라벨이 1,2인행과 영어, 수학 열선택\n","\n","#2) 첫번째 행(인덱스0번)과 첫번째(인덱스0), 두번째(인덱스1) 열선택\n","\n","#3) 국어성적이 80점 또는 90점인 행 선택\n","\n","#4) 국어성적이 70점 이상이고 수학성적이 80점 이상인 행선택\n"],"metadata":{"id":"tjZvjVm2U1TI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##3"],"metadata":{"id":"Szy55VlcU4Gf"}},{"cell_type":"code","source":["data = {\n","    '이름' : ['짱구', '철수', '유리', '맹구', \"짱아\"],\n","    '성별' : ['남', '남', '여', '남', '여'],\n","    '나이' : [15, 14, 25, 10, 5],\n","    '키' : [150.1, 163.2, 100.2, 125.3, 80.3],\n","    '몸무게' : [40, 43, 34, 38, 23],\n","    '학생여부' : [True, True, False, True, False]\n","}\n","\n","#1) 짱구와 유리의 키와 몸무게 선택\n","\n","\n","#2) 성별열에서 '여'인 행만 선택\n","\n","#3) 성별열이 '남'이고 키가 150 이상인 행만 선택\n","\n","#4) 나이열에서 15살이상인 학생이 아닌 사람만 선택\n","\n","#5) 학생여부 열삭제\n","\n","#6) 맹구 행 삭제\n"],"metadata":{"id":"ygqDplTVU42n"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##4"],"metadata":{"id":"xgrBScoPU6ox"}},{"cell_type":"code","source":["data = {\n","    '이름' : ['짱구', '철수', '유리', '맹구', \"짱아\", \"짱아\"],\n","    '성별' : ['남', '남', '여', '남', '여', '여'],\n","    '나이' : [15, 14, None, 10, 5, 5],\n","    '키' : [150.1, 163.2, 100.2, None, 80.3, 80.3],\n","    '몸무게' : [40, 43, 34, 38, None, None],\n","    '학생여부' : [True, True, False, None, False, False]\n","}\n","\n","#1) 데이터 프레임 정보 확인\n","\n","\n","#2) 성별열을 기준으로 그룹화 하여 키의 평균값 구하기\n","\n","\n","#3) 나이열을 기준으로 내림차순 정렬하기\n","#참고 : .sort_values('컬럼명') 오름차순 정렬\n","#       .sort_values('컬럼명', ascending = False) 내림차순 정렬\n","\n","#4) 키열과 몸무게열의 평균값 구하기(apply)\n","\n","#5) 성별열의 값을 '남'은 1로, '여'는 2로 변환하고 정보 출력하기\n","\n","#6) 나이의 None값을 나이열의 최소값으로 채우기\n","\n","#7) 키와 몸무게의 None값을 각 열의 평균값으로 채우기\n","\n","#8) 학생여부의 None값을 나이가 5살 이상이면 True로 5살 미만이면 False로 채우기\n"],"metadata":{"id":"K7pwZMx2U7Vm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##5"],"metadata":{"id":"HNi0UykKoFhd"}},{"cell_type":"code","source":["# iphone.csv 파일\n","# 1) 데이터프레임 생성(정보확인하기)\n","\n","# 2) iPhone 14의 출시일, 메모리만 출력\n","\n","# 3) iPhone x 한 행을 출력(시리즈, 판다스 각각 출력)\n","\n","# 4) Face ID를 지원하는 iPhone 모델의 개수\n","\n","# 5) iOS 14 이상 버전을 지원하는 iPhone 모델(loc, query() 각각 출력)\n","\n","# 6) iphone 11 pro 까지의(포함) 출시일, 디스플레이 출력(새로운 데이터 프레임이용)"],"metadata":{"id":"FOkYcR16oGei"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##6"],"metadata":{"id":"OBi3Fj6loLJW"}},{"cell_type":"code","source":["# channal.csv 파일\n","# 1) 데이터프레임 생성(정보확인하기)\n","\n","# 2) 연도별 각 채널의 시청률 변화 시각화(선그래프)\n","\n","# 3) 연도별 각 채널의 시청률 평균을 계산하고 막대그래프로 시각화\n","\n","# 4) 연도별 각 채널의 시청률 변화를 확인하고 가장 큰 변화를 보인 채널 출력하기"],"metadata":{"id":"QfS1Tp_QoMXk"},"execution_count":null,"outputs":[]}]}