{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"16-NDp8m_YKzuyI5e__12tBWDkwU05tCN","timestamp":1708232178967},{"file_id":"11qcgodCCWGlpj4TLg69P_js1O7NwuLQM","timestamp":1707042176586},{"file_id":"1ueoOW4gePfLdjTN9C-oaILM-Z4nAHHTr","timestamp":1707040923969}],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#1. 데이터 시각화 참고"],"metadata":{"id":"QHwcbfbaoUHP"}},{"cell_type":"markdown","source":["## 여러개의 서브플롯 생성"],"metadata":{"id":"McZ0dEOMm2eT"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","!sudo apt-get install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf\n","#런타임 재시작\n","plt.rc('font', family='NanumBarunGothic')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tT4ulTWL1uy6","executionInfo":{"status":"ok","timestamp":1708147809273,"user_tz":-540,"elapsed":4327,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"291cbb8d-41f3-4d15-8fc1-fe25beb9bef3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","fonts-nanum is already the newest version (20200506-1).\n","0 upgraded, 0 newly installed, 0 to remove and 33 not upgraded.\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 12 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YxCXVb6z0oB4","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1707042138969,"user_tz":-540,"elapsed":7,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"21769069-8bc4-414c-d679-5e0861cb43a4"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 0 Axes>"]},"metadata":{}}],"source":["#2행 2열\n","# 서브플롯1 : 선그래프 [1, 2, 3], [4, 5, 6]\n","# 서브플롯2 : 산포그래프 [1, 2, 3], [4, 5, 6]\n","# 서브플롯3 : 막대그래프 #판다스\n","# 서브플롯4 : 원형그래프 #판다스\n","\n","#판다스 데이터 프레임 이용한 값 생성\n","#딕셔너리 형 데이터를 데이터 프레임으로 바꾼후 진행\n","# 항목 : ['a', 'b', 'c'], 값:[30, 50, 20]\n","\n","#전체 타이틀 : 2행 2열의 서브플롯\n","plt.tight_layout() #서브플롯간의 간격 조정"]},{"cell_type":"code","source":["#서브플롯1, 서브플롯2 사용될 x, y 생성\n","x = [1, 2, 3]\n","y = [4, 5, 6]\n","\n","#서브플롯3, 서브플롯4 사용될 데이터 프레임생성\n","df = pd.DataFrame({'항목':['a', 'b', 'c'], '값':[30, 50, 20]})\n","df['항목']\n","\n","#2행 2열 서브플롯\n","# figure = plt.figure()\n","# axes1 = figure.add_subplot(221)\n","# axes2 = figure.add_subplot(222)\n","# axes3 = figure.add_subplot(223)\n","# axes4 = figure.add_subplot(224)\n","# plt.suptitle(\"2행 2열 서브플롯\")\n","# plt.show()\n","\n","figure, axes = plt.subplots(2, 2) #2행 2열의 서브플롯을 만듦\n","\n","#첫번째 서브플롯(2행 2열 첫번째)\n","axes[0, 0].plot(x, y) #axes 인덱싱[0, 0] 왼쪽 위\n","axes[0, 0].set_title('서브플롯1')\n","\n","#두번째 서브플롯(2행 2열 두번째)\n","axes[0, 1].scatter(x, y) #[0, 1] 오른쪽 위\n","axes[0, 1].set(title = '서브플롯2', xlabel = '항목', ylabel='값')\n","\n","#세번째 서브플롯(2행 2열 세번째)\n","axes[1, 0].bar(df['항목'], df['값']) #[1,0] 왼쪽 아래\n","axes[1, 0].set_title(\"서브플롯3\")\n","\n","#네번째 서브플롯(2행 2열 네번째)\n","axes[1, 1].pie(df['값'], labels=df['항목'], autopct=\"%.2f%%\",\n","               wedgeprops= {'edgecolor':'black'}) #[1, 1] 오른쪽 아래\n","axes[1, 1].set_title('서브플롯4')\n","\n","figure.suptitle('2행 2열의 서브플롯', fontsize = 20)\n","\n","plt.tight_layout() #서브플롯간의 간격 조정\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":492},"id":"T2OZTrHJ2Njw","executionInfo":{"status":"ok","timestamp":1708147832666,"user_tz":-540,"elapsed":915,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"ca906b0a-6377-4cca-cd84-e0c8ef45c133"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#2. 람다, 필터, 맵 함수"],"metadata":{"id":"5jceO0srorgL"}},{"cell_type":"markdown","source":["##1. 람다함수"],"metadata":{"id":"U-dqHX-5FzQ4"}},{"cell_type":"code","source":["# def test(x, y=1):\n","#     return x+y, x-y\n","#사용자 정의함수에서 다중 반환일 경우 tuple 타입으로 반환\n","\n","f = lambda x, y : x + y\n","#함수명 = lambda 매개변수1, 매개변수2 : 반환식\n","print(f(1, 2))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"joykGGmlF0pr","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":27,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"a6a51638-ca67-4d5d-d033-f5103e34f562"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n"]}]},{"cell_type":"code","source":["#람다함수 기본값 설정\n","f = lambda x, y=10: x * y\n","print(f(10)) #인수가 1개일 때는 매개변수에 설정된 기본값이 사용하게 됨\n","print(f(10, 20))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ciZpBwzMGLre","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":26,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"6f87d132-c6d4-40c3-adfd-2c9a941f5e8f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100\n","200\n"]}]},{"cell_type":"code","source":["#사용자 정의함수 다중입력\n","def test(*x):\n","    print(x, type(x))\n","\n","test(10)\n","test(10, 20, 30, 40, 50)\n","\n","#사용자 정의함수 다중반환\n","def test(x, y):\n","    return x+y, x-y, x*y\n","\n","# 변수 = 함수명(인수)\n","# print(변수)\n","# print(함수명(인수))\n","print(test(10, 20), type(test(10, 20)))\n","a, b, c = test(10, 20)\n","print(a, b, c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uOsq1mkCGbPg","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":25,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"9f9e41ea-40b7-4585-b9aa-705a9111290b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10,) <class 'tuple'>\n","(10, 20, 30, 40, 50) <class 'tuple'>\n","(30, -10, 200) <class 'tuple'>\n","30 -10 200\n"]}]},{"cell_type":"code","source":["#람다함수의 다중 입력\n","f = lambda *x : max(x) #*(애스터리스크) 매개변수의 개수를 지정하지 않고 매개변수를 사용할수있다\n","                    #몇개의 인수가 들어올지 모를 때 사용함\n","print(f(1, 3, 5, 7), type(f(1, 3, 5, 7)))\n","\n","#람다함수의 다중반환 : 리스트에 저장하여 다중반환 구현 가능하다\n","f = [lambda x: x+1, lambda x: x+2, lambda x: x+3]\n","print(f[0](10))\n","print(f[1](10))\n","print(f[2](10))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c19z4G6GG57Q","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":24,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"98423861-8059-4ca7-ce34-931073e464a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["7 <class 'int'>\n","11\n","12\n","13\n"]}]},{"cell_type":"code","source":["#람다함수를 이용해 최대값, 최소값 구하기\n","\n","li = [[9, 1], [8, 2], [7, 3], [6, 4]]\n","print(li, type(li))\n","\n","max1 = max(li)\n","print(max1)\n","#최대값 찾는 람다함수\n","max2 = lambda x:max(x, key=lambda item:item[1])\n","print(max2(li))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-GlPjI_TIw-W","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":23,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"5ebba3d3-a011-4b36-e4bb-610677d84513"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[9, 1], [8, 2], [7, 3], [6, 4]] <class 'list'>\n","[9, 1]\n","[6, 4]\n"]}]},{"cell_type":"code","source":["# 판다스, apply, lambda\n","\n","data = {'이름':['홍길동', \"이순신\", '강감찬'],\n","        '지역':['서울', '부산', '강원'],\n","        '나이':[10, 50, 20]}\n","df = pd.DataFrame(data)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"I2PcMU0nKPua","executionInfo":{"status":"ok","timestamp":1707042141236,"user_tz":-540,"elapsed":22,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"9737ddea-22c6-4ab4-de18-2043e1485a6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    이름  지역  나이\n","0  홍길동  서울  10\n","1  이순신  부산  50\n","2  강감찬  강원  20"],"text/html":["\n","  <div id=\"df-1aab70b9-1014-4cc6-a98e-c2b3464483a0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>지역</th>\n","      <th>나이</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>서울</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이순신</td>\n","      <td>부산</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강감찬</td>\n","      <td>강원</td>\n","      <td>20</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1aab70b9-1014-4cc6-a98e-c2b3464483a0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1aab70b9-1014-4cc6-a98e-c2b3464483a0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1aab70b9-1014-4cc6-a98e-c2b3464483a0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d493b151-cd39-4461-b14f-7021451a8f6b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d493b151-cd39-4461-b14f-7021451a8f6b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d493b151-cd39-4461-b14f-7021451a8f6b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_28ad2c4c-a96c-468d-b8b8-4503b8cc3968\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_28ad2c4c-a96c-468d-b8b8-4503b8cc3968 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#나이열 + 10\n","df['나이+10'] =df['나이'].apply(lambda x : x+10)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"AXJVyTRLKi2O","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":22,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"3992e145-55f6-4697-9fb8-0104ae243a30"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    이름  지역  나이  나이+10\n","0  홍길동  서울  10     20\n","1  이순신  부산  50     60\n","2  강감찬  강원  20     30"],"text/html":["\n","  <div id=\"df-c5acb9a6-db6b-477d-996c-28781b3d01ab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>지역</th>\n","      <th>나이</th>\n","      <th>나이+10</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>서울</td>\n","      <td>10</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이순신</td>\n","      <td>부산</td>\n","      <td>50</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강감찬</td>\n","      <td>강원</td>\n","      <td>20</td>\n","      <td>30</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5acb9a6-db6b-477d-996c-28781b3d01ab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c5acb9a6-db6b-477d-996c-28781b3d01ab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c5acb9a6-db6b-477d-996c-28781b3d01ab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ffc04788-f9d6-4b13-8166-394c16531479\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ffc04788-f9d6-4b13-8166-394c16531479')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ffc04788-f9d6-4b13-8166-394c16531479 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bb9e1fed-2baf-4868-ba53-740b9db2735a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bb9e1fed-2baf-4868-ba53-740b9db2735a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["#apply함수와 조건부 람다함수\n","df['카테고리'] = df['나이'].apply(lambda x:'old' if x >= 30 else 'young')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"6Na2b02mK3Qw","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":20,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"862c54f7-dbbc-4da7-dc27-0f0bedac993e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    이름  지역  나이  나이+10   카테고리\n","0  홍길동  서울  10     20  young\n","1  이순신  부산  50     60    old\n","2  강감찬  강원  20     30  young"],"text/html":["\n","  <div id=\"df-73da41d9-a1f2-4d6b-8495-495ab050ed67\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>지역</th>\n","      <th>나이</th>\n","      <th>나이+10</th>\n","      <th>카테고리</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>서울</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>young</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이순신</td>\n","      <td>부산</td>\n","      <td>50</td>\n","      <td>60</td>\n","      <td>old</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강감찬</td>\n","      <td>강원</td>\n","      <td>20</td>\n","      <td>30</td>\n","      <td>young</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73da41d9-a1f2-4d6b-8495-495ab050ed67')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-73da41d9-a1f2-4d6b-8495-495ab050ed67 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-73da41d9-a1f2-4d6b-8495-495ab050ed67');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-990e192b-e309-4693-96b0-3fb5fef4e6b8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-990e192b-e309-4693-96b0-3fb5fef4e6b8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-990e192b-e309-4693-96b0-3fb5fef4e6b8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9e65a2b5-8631-4a2d-9aa1-effddb9feec8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9e65a2b5-8631-4a2d-9aa1-effddb9feec8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["##2. 필터(filter)함수"],"metadata":{"id":"mlwVATX7LTWV"}},{"cell_type":"code","source":["f = lambda x:x>0\n","\n","print(list(range(-5, 5)))\n","\n","print(list(filter(f, range(-5, 5))))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H7FnGA3vLbUm","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":19,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"33c06a61-fce2-4faa-b8be-0f040b85216e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4]\n","[1, 2, 3, 4]\n"]}]},{"cell_type":"code","source":["#사용자 정의함수\n","def test(x):\n","    if x > 0:\n","        return True\n","    else:\n","        return False\n","\n","print(list(range(-3, 8)))\n","\n","print(list(filter(test, range(-3, 8))))\n","#필터함수에서 사용되는 함수는 논리값을 반환함수로 인지\n","#반환값이 0이 아닌 모든 값은 참으로 간주함\n","# 어떤 반환형태도 0을 반환하지 않으므로 모두 다 True값이 되어서 범위를 그대로 반환함"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r9bMGEfqLw1Z","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":17,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"c60c3998-de74-4e7b-95e9-61dbb517a62e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\n","[1, 2, 3, 4, 5, 6, 7]\n"]}]},{"cell_type":"code","source":["#짝수를 필터링하는 함수\n","def even(x):\n","    return x % 2 == 0\n","\n","#필터링할 데이터(0~9 정수)\n","data = list(range(10))\n","\n","#사용자 정의함수를 이용하여 짝수만 필터링\n","filtered = list(filter(even, data))\n","print(filtered)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eTXMsGkDMlMm","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":16,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"95c37638-5b33-4e24-ff68-eabc2002b52a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 2, 4, 6, 8]\n"]}]},{"cell_type":"code","source":["#데이터 프레임의 조건을 사용하여 필터링\n","\n","#나이가 30이상인 행선택\n","filter_df = df[df['나이'] >= 30]\n","print(filter_df)\n","filter_df\n","\n","#조건함수, loc메소드\n","def age_filter(row):\n","    return row['나이'] >= 30 #나이 열의 값이 30보다 큰 값을 반환\n","\n","filter_df = df.loc[df.apply(age_filter, axis = 1)]\n","#age_filter 반환값을 각 행에 적용, axis = 1 행에 적용됨\n","print(filter_df)\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":213},"id":"G2vbtcpPNdIq","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":15,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"ee36b924-5dde-47fa-b56f-8f332014f174"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    이름  지역  나이  나이+10 카테고리\n","1  이순신  부산  50     60  old\n","    이름  지역  나이  나이+10 카테고리\n","1  이순신  부산  50     60  old\n"]},{"output_type":"execute_result","data":{"text/plain":["    이름  지역  나이  나이+10   카테고리\n","0  홍길동  서울  10     20  young\n","1  이순신  부산  50     60    old\n","2  강감찬  강원  20     30  young"],"text/html":["\n","  <div id=\"df-1fc38cde-b3ba-4560-8461-e6e9fc55397b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>지역</th>\n","      <th>나이</th>\n","      <th>나이+10</th>\n","      <th>카테고리</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>서울</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>young</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이순신</td>\n","      <td>부산</td>\n","      <td>50</td>\n","      <td>60</td>\n","      <td>old</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강감찬</td>\n","      <td>강원</td>\n","      <td>20</td>\n","      <td>30</td>\n","      <td>young</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1fc38cde-b3ba-4560-8461-e6e9fc55397b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1fc38cde-b3ba-4560-8461-e6e9fc55397b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1fc38cde-b3ba-4560-8461-e6e9fc55397b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-231ed64c-3ae0-464b-8a90-536d9ea1f779\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-231ed64c-3ae0-464b-8a90-536d9ea1f779')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-231ed64c-3ae0-464b-8a90-536d9ea1f779 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5abe1486-dd32-4a3f-b02d-bc6decd90450\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5abe1486-dd32-4a3f-b02d-bc6decd90450 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["##3. 맵(map)함수"],"metadata":{"id":"u4Y308QkOqaE"}},{"cell_type":"code","source":["#함수생성\n","f1 = lambda x : x > 0\n","f2 = lambda x : x ** 2\n","\n","#map(적용함수, 범위)\n","print(list(map(f1, range(-5, 5))))\n","print(list(map(f2, range(5))))\n","\n","#list(), set() 등의 구문을 추가하지 않으면 객체로 <map object at ..>\n","#iterator형태로 출력되므로 항상 구문 추가해야 원하는 결과를 받아 볼 수 있다"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DJPknFMlOs08","executionInfo":{"status":"ok","timestamp":1707042141237,"user_tz":-540,"elapsed":13,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"647668af-7f27-4739-be80-898db2250cb4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[False, False, False, False, False, False, True, True, True, True]\n","[0, 1, 4, 9, 16]\n"]}]},{"cell_type":"code","source":["#형변환\n","data = [-5.2, 1.4, 6.3]\n","f = map(int, data)\n","print(list(f))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CM1R5sANPUPt","executionInfo":{"status":"ok","timestamp":1707042141598,"user_tz":-540,"elapsed":5,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"e114dbae-b6e1-40fc-cdf7-09003b8758ef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-5, 1, 6]\n"]}]},{"cell_type":"markdown","source":["#과제\n","> [과제 제출 기한]\n","- 2024/02/11(일요일 pm 20시까지)\n","\n","> [과제 제출]\n"," - 현재 파일을 드라이브에 사본 저장 후 과제만 그대로 복붙한 코랩 파일 생성\n"," - 파일명 : AI1_day08과제_본인이름.ipynb\n"," - 메일 제목 : AI1 day08 과제 본인이름\n"," - 메일 본문 : 안녕하세요. AI1 수강중인 000입니다.\n"," 8일차 코랩링크 첨부합니다.\n"," 코랩링크 :\n"," (질문있을 경우 내용 간단히 정리 작성-코랩에 코드와 질문 상세 작성)\n"," 감사합니다.\n","\n"," > [링크 공유 방법]\n"," - 우측 상단 공유클릭 -> 일반액세스에서 제한됨을 링크가 있는 모든 사용자로 변경 -> 공유버튼 클릭(링크 자동 복사됨)\n"],"metadata":{"id":"wFIi4SWQPmoQ"}},{"cell_type":"markdown","source":["##1"],"metadata":{"id":"XLbS5ToqUwNU"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","#아래와 같은 데이터 프레임 생성\n","# \t    이름\t 성별\t나이\t키\t    몸무게\t학생여부\n","# 0\t    홍길동\t 남\t    15\t    172.5\t70.3\tFalse\n","# 1\t    강감찬\t 남\t    14\t    180.2\t82.1\tFalse\n","# 2\t    신사임당 여\t    25\t    158.7\t47.5\tFalse\n","# 3\t    이순신\t 남\t    54\t    165.5\t71.2\tTrue\n","# 4\t    유관순\t 여\t    17\t    140.6\t65.8\tTrue\n","\n","#1) 데이터프레임으로 변환 후 test.csv파일로 저장\n","\n","#2) csv 파일 읽기\n","\n","#3) 데이터 프레임 처음 3개 행, 끝에 1개 행 출력 #head(), tail()\n","\n","#4) 데이터 프레임 기본 정보와 기술 통계정보 출력\n"],"metadata":{"id":"q0T0M8UnQA0x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = {\n","    '이름': ['홍길동', '강감찬', '신사임당', '이순신', '유관순'],\n","    '성별':['남', '남', '여', '남', '여'],\n","    '나이':[15, 14, 25, 54, 17],\n","    '키':[172.5, 180.2,158.7, 165.5, 140.6],\n","    '몸무게':[70.3, 82.1, 47.5, 71.2, 65.8],\n","    '학생여부':[False, False, False, True, True]\n","}\n","\n","#데이터 프레임 생성\n","df = pd.DataFrame(data)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"kXrXR7_ijLL1","executionInfo":{"status":"ok","timestamp":1708148053740,"user_tz":-540,"elapsed":657,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"2a72a032-3ea7-40a0-b764-c3cb9b8327ed"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     이름 성별  나이      키   몸무게   학생여부\n","0   홍길동  남  15  172.5  70.3  False\n","1   강감찬  남  14  180.2  82.1  False\n","2  신사임당  여  25  158.7  47.5  False\n","3   이순신  남  54  165.5  71.2   True\n","4   유관순  여  17  140.6  65.8   True"],"text/html":["\n","  <div id=\"df-701dbf37-f41b-4f40-907c-763cc2950145\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>성별</th>\n","      <th>나이</th>\n","      <th>키</th>\n","      <th>몸무게</th>\n","      <th>학생여부</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>남</td>\n","      <td>15</td>\n","      <td>172.5</td>\n","      <td>70.3</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>강감찬</td>\n","      <td>남</td>\n","      <td>14</td>\n","      <td>180.2</td>\n","      <td>82.1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>신사임당</td>\n","      <td>여</td>\n","      <td>25</td>\n","      <td>158.7</td>\n","      <td>47.5</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>이순신</td>\n","      <td>남</td>\n","      <td>54</td>\n","      <td>165.5</td>\n","      <td>71.2</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>유관순</td>\n","      <td>여</td>\n","      <td>17</td>\n","      <td>140.6</td>\n","      <td>65.8</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-701dbf37-f41b-4f40-907c-763cc2950145')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-701dbf37-f41b-4f40-907c-763cc2950145 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-701dbf37-f41b-4f40-907c-763cc2950145');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-056f2a95-a001-41e1-8a6a-df0fee1cc058\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-056f2a95-a001-41e1-8a6a-df0fee1cc058')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-056f2a95-a001-41e1-8a6a-df0fee1cc058 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4d3577bc-168e-431c-a022-aeb453a1f556\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4d3577bc-168e-431c-a022-aeb453a1f556 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"\\uc774\\ub984\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"\\uac15\\uac10\\ucc2c\",\n          \"\\uc720\\uad00\\uc21c\",\n          \"\\uc2e0\\uc0ac\\uc784\\ub2f9\"\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\ubcc4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"\\uc5ec\",\n          \"\\ub0a8\"\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub098\\uc774\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 14,\n        \"max\": 54,\n        \"samples\": [\n          14,\n          17\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud0a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.094204185713139,\n        \"min\": 140.6,\n        \"max\": 180.2,\n        \"samples\": [\n          180.2,\n          140.6\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubab8\\ubb34\\uac8c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.624460384507529,\n        \"min\": 47.5,\n        \"max\": 82.1,\n        \"samples\": [\n          82.1,\n          65.8\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud559\\uc0dd\\uc5ec\\ubd80\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"samples\": [\n          true,\n          false\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#1) 데이터프레임으로 변환 후 test.csv파일로 저장\n","df.to_csv('test.csv', index=False)\n","# df.to_csv('test1.csv')\n","\n","#2) csv 파일 읽기\n","read_df = pd.read_csv('test.csv')\n","read_df\n","\n","#3) 데이터 프레임 처음 3개 행, 끝에 1개 행 출력 #head(), tail()\n","print(read_df.head(3))\n","print(read_df.tail(1))\n","\n","#4) 데이터 프레임 기본 정보와 기술 통계정보 출력\n","print(\"\\n기본정보 : \\n\")\n","read_df.info()\n","print(\"\\n기술통계정보 : \\n\", read_df.describe())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TfqX9ztIjxn3","executionInfo":{"status":"ok","timestamp":1708148366955,"user_tz":-540,"elapsed":288,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"49d2c556-fef1-4831-cb9f-6432a738461b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     이름 성별  나이      키   몸무게   학생여부\n","0   홍길동  남  15  172.5  70.3  False\n","1   강감찬  남  14  180.2  82.1  False\n","2  신사임당  여  25  158.7  47.5  False\n","    이름 성별  나이      키   몸무게  학생여부\n","4  유관순  여  17  140.6  65.8  True\n","\n","기본정보 : \n","\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 5 entries, 0 to 4\n","Data columns (total 6 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   이름      5 non-null      object \n"," 1   성별      5 non-null      object \n"," 2   나이      5 non-null      int64  \n"," 3   키       5 non-null      float64\n"," 4   몸무게     5 non-null      float64\n"," 5   학생여부    5 non-null      bool   \n","dtypes: bool(1), float64(2), int64(1), object(2)\n","memory usage: 333.0+ bytes\n","\n","기술통계정보 : \n","               나이           키       몸무게\n","count   5.000000    5.000000   5.00000\n","mean   25.000000  163.500000  67.38000\n","std    16.777962   15.094204  12.62446\n","min    14.000000  140.600000  47.50000\n","25%    15.000000  158.700000  65.80000\n","50%    17.000000  165.500000  70.30000\n","75%    25.000000  172.500000  71.20000\n","max    54.000000  180.200000  82.10000\n"]}]},{"cell_type":"markdown","source":["##2"],"metadata":{"id":"F-AyU7nFU0Wx"}},{"cell_type":"code","source":["data = {\n","    '이름' : ['짱구', '유리', '맹구', '철수', '훈이'],\n","    '국어' : [80, 90, 70, 85, 94],\n","    '영어' : [95, 92, 75, 80, 74],\n","    '수학' : [70, 77, 90, 85, 80],\n","    '과학' : [94, 88, 78, 65, 72]\n","    }\n","#1) 데이터 프레임으로 변환 후 인덱스라벨이 1,2인행과 영어, 수학 열선택\n","\n","#2) 첫번째 행(인덱스0번)과 첫번째(인덱스0), 두번째(인덱스1) 열선택\n","\n","#3) 국어성적이 80점 또는 90점인 행 선택\n","\n","#4) 국어성적이 70점 이상이고 수학성적이 80점 이상인 행선택\n"],"metadata":{"id":"tjZvjVm2U1TI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(data)\n","\n","#1) 데이터 프레임으로 변환 후 인덱스라벨이 1,2인행과 영어, 수학 열선택\n","# loc 사용\n","result1_1 = df.loc[[1, 2], ['영어', '수학']]\n","print(result1_1)\n","# iloc 사용\n","result1_2 = df.iloc[1:3, [2, 3]]\n","print(result1_2)\n","# loc + 컬럼 인덱스 사용\n","result1_3 = df.loc[1:2, ['영어', '수학']]\n","print(result1_3)\n","# at 사용\n","result1_4 = pd.DataFrame(data={'영어':df.at[1, '영어'], '수학':df.at[1, '수학']}, index=[1])\n","print(result1_4)\n","result1_4 = result1_4.append({'영어':df.at[2, '영어'], '수학':df.at[2, '수학']}, ignore_index=True)\n","print(result1_4)\n","# filter 사용\n","result1_5 = df.filter(items=['영어', '수학']).loc[[1, 2]]\n","print(result1_5)\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":553},"id":"kFdpJZGolAPY","executionInfo":{"status":"ok","timestamp":1708150944092,"user_tz":-540,"elapsed":376,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"103b8921-e2f0-4ebd-9f03-088a9c35aeea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   영어  수학\n","1  92  77\n","2  75  90\n","   영어  수학\n","1  92  77\n","2  75  90\n","   영어  수학\n","1  92  77\n","2  75  90\n","   영어  수학\n","1  92  77\n","   영어  수학\n","0  92  77\n","1  75  90\n","   영어  수학\n","1  92  77\n","2  75  90\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-60-76d9de7bbd17>:16: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result1_4 = result1_4.append({'영어':df.at[2, '영어'], '수학':df.at[2, '수학']}, ignore_index=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["   이름  국어  영어  수학  과학\n","0  짱구  80  95  70  94\n","1  유리  90  92  77  88\n","2  맹구  70  75  90  78\n","3  철수  85  80  85  65\n","4  훈이  94  74  80  72"],"text/html":["\n","  <div id=\"df-9b9cffd8-75c3-4b26-9ab3-508ac6644845\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>국어</th>\n","      <th>영어</th>\n","      <th>수학</th>\n","      <th>과학</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>짱구</td>\n","      <td>80</td>\n","      <td>95</td>\n","      <td>70</td>\n","      <td>94</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>유리</td>\n","      <td>90</td>\n","      <td>92</td>\n","      <td>77</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>맹구</td>\n","      <td>70</td>\n","      <td>75</td>\n","      <td>90</td>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>철수</td>\n","      <td>85</td>\n","      <td>80</td>\n","      <td>85</td>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>훈이</td>\n","      <td>94</td>\n","      <td>74</td>\n","      <td>80</td>\n","      <td>72</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9b9cffd8-75c3-4b26-9ab3-508ac6644845')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9b9cffd8-75c3-4b26-9ab3-508ac6644845 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9b9cffd8-75c3-4b26-9ab3-508ac6644845');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2da7a549-6b9e-4701-860e-7c5503c51f5c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2da7a549-6b9e-4701-860e-7c5503c51f5c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2da7a549-6b9e-4701-860e-7c5503c51f5c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_53020f47-a000-412f-af7b-9afcd6ab27ff\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_53020f47-a000-412f-af7b-9afcd6ab27ff button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"\\uc774\\ub984\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"\\uc720\\ub9ac\",\n          \"\\ud6c8\\uc774\",\n          \"\\ub9f9\\uad6c\"\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uad6d\\uc5b4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 70,\n        \"max\": 94,\n        \"samples\": [\n          90,\n          94,\n          70\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc601\\uc5b4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 74,\n        \"max\": 95,\n        \"samples\": [\n          92,\n          74,\n          75\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc218\\ud559\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 70,\n        \"max\": 90,\n        \"samples\": [\n          77,\n          80,\n          90\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacfc\\ud559\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 65,\n        \"max\": 94,\n        \"samples\": [\n          88,\n          72,\n          78\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["#2) 첫번째 행(인덱스0번)과 첫번째(인덱스0), 두번째(인덱스1) 열선택\n","\n","# loc 사용\n","result2_1 = df.loc[0, ['이름', '국어']]\n","print(result2_1, type(result2_1))\n","\n","#iloc 사용\n","result2_2 = df.iloc[0, [0, 1]]\n","print(result2_2)\n","\n","#at 사용\n","result2_3 = pd.DataFrame(data={'이름':df.at[0, '이름'], '국어':df.at[0, '국어']}, index=[0])\n","print(result2_3, type(result2_3))\n","\n","#head + iloc 사용\n","result2_4 = df.head(1).iloc[0, [0,1]]\n","print(result2_4, type(result2_4))\n","\n","result2_5 = df.head(1).iloc[:, :2]\n","print(result2_5, type(result2_5))\n","\n","#loc + columns 사용\n","result2_6 = df.loc[0, df.columns[:2]]\n","print(result2_6)\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":498},"id":"ARlLwpfMmwgB","executionInfo":{"status":"ok","timestamp":1708150290101,"user_tz":-540,"elapsed":314,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"80fe5959-1d93-40fb-d48a-0c26f495b36b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["이름    짱구\n","국어    80\n","Name: 0, dtype: object <class 'pandas.core.series.Series'>\n","이름    짱구\n","국어    80\n","Name: 0, dtype: object\n","   이름  국어\n","0  짱구  80 <class 'pandas.core.frame.DataFrame'>\n","이름    짱구\n","국어    80\n","Name: 0, dtype: object <class 'pandas.core.series.Series'>\n","   이름  국어\n","0  짱구  80 <class 'pandas.core.frame.DataFrame'>\n","이름    짱구\n","국어    80\n","Name: 0, dtype: object\n"]},{"output_type":"execute_result","data":{"text/plain":["   이름  국어  영어  수학  과학\n","0  짱구  80  95  70  94\n","1  유리  90  92  77  88\n","2  맹구  70  75  90  78\n","3  철수  85  80  85  65\n","4  훈이  94  74  80  72"],"text/html":["\n","  <div id=\"df-efbf2ecc-e9cc-4a52-96f7-5a89ac30c09d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>국어</th>\n","      <th>영어</th>\n","      <th>수학</th>\n","      <th>과학</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>짱구</td>\n","      <td>80</td>\n","      <td>95</td>\n","      <td>70</td>\n","      <td>94</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>유리</td>\n","      <td>90</td>\n","      <td>92</td>\n","      <td>77</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>맹구</td>\n","      <td>70</td>\n","      <td>75</td>\n","      <td>90</td>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>철수</td>\n","      <td>85</td>\n","      <td>80</td>\n","      <td>85</td>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>훈이</td>\n","      <td>94</td>\n","      <td>74</td>\n","      <td>80</td>\n","      <td>72</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efbf2ecc-e9cc-4a52-96f7-5a89ac30c09d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-efbf2ecc-e9cc-4a52-96f7-5a89ac30c09d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-efbf2ecc-e9cc-4a52-96f7-5a89ac30c09d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d4fbdcfb-8d8b-44b9-84e6-35a4411d6873\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d4fbdcfb-8d8b-44b9-84e6-35a4411d6873')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d4fbdcfb-8d8b-44b9-84e6-35a4411d6873 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f096d39f-1551-4557-b3e3-52173e086f7a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f096d39f-1551-4557-b3e3-52173e086f7a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"\\uc774\\ub984\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"\\uc720\\ub9ac\",\n          \"\\ud6c8\\uc774\",\n          \"\\ub9f9\\uad6c\"\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uad6d\\uc5b4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 70,\n        \"max\": 94,\n        \"samples\": [\n          90,\n          94,\n          70\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc601\\uc5b4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 74,\n        \"max\": 95,\n        \"samples\": [\n          92,\n          74,\n          75\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc218\\ud559\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 70,\n        \"max\": 90,\n        \"samples\": [\n          77,\n          80,\n          90\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacfc\\ud559\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 65,\n        \"max\": 94,\n        \"samples\": [\n          88,\n          72,\n          78\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["#3) 국어성적이 80점 또는 90점인 행 선택\n","#query 사용\n","result3_1 = df.query('국어 == 80 or 국어 == 90')\n","print(result3_1, type(result3_1))\n","\n","#isin 사용\n","result3_2 = df[df['국어'].isin([80, 90])]\n","print(result3_2)\n","\n","#loc + 논리연산 사용\n","result3_3 = df.loc[(df['국어'] == 80) | (df['국어'] == 90)]\n","print(result3_3)\n","\n","#loc + isin 사용\n","result3_4 = df.loc[df['국어'].isin([80, 90])]\n","print(result3_4)\n","\n","#query + isin 사용\n","result3_5 = df.query('국어.isin([80, 90])')\n","print(result3_5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6ObRIevzmyxW","executionInfo":{"status":"ok","timestamp":1708150576860,"user_tz":-540,"elapsed":288,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"8dc1b005-5b27-49fb-cc85-bffe151a19f8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   이름  국어  영어  수학  과학\n","0  짱구  80  95  70  94\n","1  유리  90  92  77  88 <class 'pandas.core.frame.DataFrame'>\n","   이름  국어  영어  수학  과학\n","0  짱구  80  95  70  94\n","1  유리  90  92  77  88\n","   이름  국어  영어  수학  과학\n","0  짱구  80  95  70  94\n","1  유리  90  92  77  88\n","   이름  국어  영어  수학  과학\n","0  짱구  80  95  70  94\n","1  유리  90  92  77  88\n","   이름  국어  영어  수학  과학\n","0  짱구  80  95  70  94\n","1  유리  90  92  77  88\n"]}]},{"cell_type":"code","source":["#4) 국어성적이 70점 이상이고 수학성적이 80점 이상인 행선택\n","# eval 사용\n","result4_1 = df.eval('국어 >= 70 and 수학 >= 80')\n","result4_1 = df[result4_1]\n","print(result4_1, type(result4_1))\n","\n","#query 사용 : 특정 조건을 만족하는 행을 선택\n","result4_2 = df.query('국어 >= 70 and 수학 >= 80')\n","print(result4_2)\n","\n","#논리 연산 사용\n","result4_3 = df[(df['국어']>= 70) & (df['수학'] >= 80)]\n","print(result4_3)\n","\n","#loc + 논리연산 사용 :\n","result4_4 = df.loc[(df['국어'] >= 70) & (df['수학'] >= 80)]\n","print(result4_4)\n","\n","#loc + query 사용\n","result4_5 = df.loc[df.query(\"국어>= 70\").index.intersection(df.query('수학>=80').index)]\n","print(result4_5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kvO-41uPmzes","executionInfo":{"status":"ok","timestamp":1708151296033,"user_tz":-540,"elapsed":288,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"12faf904-18a9-4e7c-ab4b-1e80ce2e63eb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   이름  국어  영어  수학  과학\n","2  맹구  70  75  90  78\n","3  철수  85  80  85  65\n","4  훈이  94  74  80  72 <class 'pandas.core.frame.DataFrame'>\n","   이름  국어  영어  수학  과학\n","2  맹구  70  75  90  78\n","3  철수  85  80  85  65\n","4  훈이  94  74  80  72\n","   이름  국어  영어  수학  과학\n","2  맹구  70  75  90  78\n","3  철수  85  80  85  65\n","4  훈이  94  74  80  72\n","   이름  국어  영어  수학  과학\n","2  맹구  70  75  90  78\n","3  철수  85  80  85  65\n","4  훈이  94  74  80  72\n","   이름  국어  영어  수학  과학\n","2  맹구  70  75  90  78\n","3  철수  85  80  85  65\n","4  훈이  94  74  80  72\n"]}]},{"cell_type":"markdown","source":["##3"],"metadata":{"id":"Szy55VlcU4Gf"}},{"cell_type":"code","source":["data = {\n","    '이름' : ['짱구', '철수', '유리', '맹구', \"짱아\"],\n","    '성별' : ['남', '남', '여', '남', '여'],\n","    '나이' : [15, 14, 25, 10, 5],\n","    '키' : [150.1, 163.2, 100.2, 125.3, 80.3],\n","    '몸무게' : [40, 43, 34, 38, 23],\n","    '학생여부' : [True, True, False, True, False]\n","}\n","\n","#1) 짱구와 유리의 키와 몸무게 선택\n","\n","\n","#2) 성별열에서 '여'인 행만 선택\n","\n","\n","#3) 성별열이 '남'이고 키가 150 이상인 행만 선택\n","\n","#4) 나이열에서 15살이상인 학생이 아닌 사람만 선택\n","\n","#5) 학생여부 열삭제\n","\n","#6) 맹구 행 삭제"],"metadata":{"id":"ygqDplTVU42n","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1708151355341,"user_tz":-540,"elapsed":460,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"dca32468-5710-4e31-a0dc-076aedb1a354"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   이름 성별  나이      키  몸무게   학생여부\n","0  짱구  남  15  150.1   40   True\n","1  철수  남  14  163.2   43   True\n","2  유리  여  25  100.2   34  False\n","3  맹구  남  10  125.3   38   True\n","4  짱아  여   5   80.3   23  False"],"text/html":["\n","  <div id=\"df-fe5c457a-46ac-458a-94b8-67752adab496\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>성별</th>\n","      <th>나이</th>\n","      <th>키</th>\n","      <th>몸무게</th>\n","      <th>학생여부</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>짱구</td>\n","      <td>남</td>\n","      <td>15</td>\n","      <td>150.1</td>\n","      <td>40</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>철수</td>\n","      <td>남</td>\n","      <td>14</td>\n","      <td>163.2</td>\n","      <td>43</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>유리</td>\n","      <td>여</td>\n","      <td>25</td>\n","      <td>100.2</td>\n","      <td>34</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>맹구</td>\n","      <td>남</td>\n","      <td>10</td>\n","      <td>125.3</td>\n","      <td>38</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>짱아</td>\n","      <td>여</td>\n","      <td>5</td>\n","      <td>80.3</td>\n","      <td>23</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe5c457a-46ac-458a-94b8-67752adab496')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fe5c457a-46ac-458a-94b8-67752adab496 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fe5c457a-46ac-458a-94b8-67752adab496');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-486908c8-bfd3-4267-8989-7ed04bd7dccc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-486908c8-bfd3-4267-8989-7ed04bd7dccc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-486908c8-bfd3-4267-8989-7ed04bd7dccc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_188b3075-42f6-4e14-879a-b05c9269b89f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_188b3075-42f6-4e14-879a-b05c9269b89f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"\\uc774\\ub984\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"\\ucca0\\uc218\",\n          \"\\uc9f1\\uc544\",\n          \"\\uc720\\ub9ac\"\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\ubcc4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"\\uc5ec\",\n          \"\\ub0a8\"\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub098\\uc774\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 5,\n        \"max\": 25,\n        \"samples\": [\n          14,\n          5\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud0a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34.26188844766149,\n        \"min\": 80.3,\n        \"max\": 163.2,\n        \"samples\": [\n          163.2,\n          80.3\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubab8\\ubb34\\uac8c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 23,\n        \"max\": 43,\n        \"samples\": [\n          43,\n          23\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud559\\uc0dd\\uc5ec\\ubd80\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"samples\": [\n          false,\n          true\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["df = pd.DataFrame(data)\n","\n","#1) 짱구와 유리의 키와 몸무게 선택\n","result1 = df.loc[df['이름'].isin(['짱구', '유리']), ['이름', '키', '몸무게']]\n","print(result1)\n","\n","#2) 성별열에서 '여'인 행만 선택\n","result2 = df[df['성별'] == '여']\n","print(result2)\n","\n","df\n","#3) 성별열이 '남'이고 키가 150 이상인 행만 선택\n","result3 = df[(df['성별'] == '남') & (df['키'] >= 150)]\n","print(result3)\n","\n","#4) 나이열에서 15살이상인 학생이 아닌 사람만 선택\n","result4 = df[df['나이'] < 15]\n","print(result4)\n","\n","result4_2 = df[~(df['나이']>=15)]\n","print(result4_2)\n","\n","#5) 학생여부 열삭제 (.drop(columns=['학생여부']))\n","df.drop(columns=['학생여부'], inplace=True)\n","\n","#6) 맹구 행 삭제\n","# df = df[df['이름'] != \"맹구\"]\n","# df.drop(df[df['이름']==\"맹구\"].index, inplace = True)\n","# df = df.loc[df['이름'] != \"맹구\"]\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":485},"id":"tbnJoPj7wWh4","executionInfo":{"status":"ok","timestamp":1708151906516,"user_tz":-540,"elapsed":459,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"842380d3-13f1-4354-f1c5-595c7c1165a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   이름      키  몸무게\n","0  짱구  150.1   40\n","2  유리  100.2   34\n","   이름 성별  나이      키  몸무게   학생여부\n","2  유리  여  25  100.2   34  False\n","4  짱아  여   5   80.3   23  False\n","   이름 성별  나이      키  몸무게  학생여부\n","0  짱구  남  15  150.1   40  True\n","1  철수  남  14  163.2   43  True\n","   이름 성별  나이      키  몸무게   학생여부\n","1  철수  남  14  163.2   43   True\n","3  맹구  남  10  125.3   38   True\n","4  짱아  여   5   80.3   23  False\n","   이름 성별  나이      키  몸무게   학생여부\n","1  철수  남  14  163.2   43   True\n","3  맹구  남  10  125.3   38   True\n","4  짱아  여   5   80.3   23  False\n"]},{"output_type":"execute_result","data":{"text/plain":["   이름 성별  나이      키  몸무게\n","0  짱구  남  15  150.1   40\n","1  철수  남  14  163.2   43\n","2  유리  여  25  100.2   34\n","4  짱아  여   5   80.3   23"],"text/html":["\n","  <div id=\"df-8a8a65a7-ecef-48cf-bab6-5501a9b5f145\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>성별</th>\n","      <th>나이</th>\n","      <th>키</th>\n","      <th>몸무게</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>짱구</td>\n","      <td>남</td>\n","      <td>15</td>\n","      <td>150.1</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>철수</td>\n","      <td>남</td>\n","      <td>14</td>\n","      <td>163.2</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>유리</td>\n","      <td>여</td>\n","      <td>25</td>\n","      <td>100.2</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>짱아</td>\n","      <td>여</td>\n","      <td>5</td>\n","      <td>80.3</td>\n","      <td>23</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a8a65a7-ecef-48cf-bab6-5501a9b5f145')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8a8a65a7-ecef-48cf-bab6-5501a9b5f145 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8a8a65a7-ecef-48cf-bab6-5501a9b5f145');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-50fe7341-a38e-49f3-9604-a33e93be5912\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-50fe7341-a38e-49f3-9604-a33e93be5912')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-50fe7341-a38e-49f3-9604-a33e93be5912 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8b33d164-5529-40b4-8dac-d81e13fb26ec\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8b33d164-5529-40b4-8dac-d81e13fb26ec button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"\\uc774\\ub984\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"\\ucca0\\uc218\",\n          \"\\uc9f1\\uc544\",\n          \"\\uc9f1\\uad6c\"\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\ubcc4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"\\uc5ec\",\n          \"\\ub0a8\"\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub098\\uc774\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 5,\n        \"max\": 25,\n        \"samples\": [\n          14,\n          5\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud0a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39.55068478126095,\n        \"min\": 80.3,\n        \"max\": 163.2,\n        \"samples\": [\n          163.2,\n          80.3\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubab8\\ubb34\\uac8c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 23,\n        \"max\": 43,\n        \"samples\": [\n          43,\n          23\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":83}]},{"cell_type":"markdown","source":["##4"],"metadata":{"id":"xgrBScoPU6ox"}},{"cell_type":"code","source":["data = {\n","    '이름' : ['짱구', '철수', '유리', '맹구', \"짱아\", \"짱아\"],\n","    '성별' : ['남', '남', '여', '남', '여', '여'],\n","    '나이' : [15, 14, None, 10, 5, 5],\n","    '키' : [150.1, 163.2, 100.2, None, 80.3, 80.3],\n","    '몸무게' : [40, 43, 34, 38, None, None],\n","    '학생여부' : [True, True, False, None, False, False]\n","}\n","\n","#1) 데이터 프레임 정보 확인\n","\n","\n","#2) 성별열을 기준으로 그룹화 하여 키의 평균값 구하기\n","\n","\n","#3) 나이열을 기준으로 내림차순 정렬하기\n","#참고 : .sort_values('컬럼명') 오름차순 정렬\n","#       .sort_values('컬럼명', ascending = False) 내림차순 정렬\n","\n","#4) 키열과 몸무게열의 평균값 구하기(apply)\n","\n","#5) 성별열의 값을 '남'은 1로, '여'는 2로 변환하고 정보 출력하기\n","\n","#6) 나이의 None값을 나이열의 최소값으로 채우기\n","\n","#7) 키와 몸무게의 None값을 각 열의 평균값으로 채우기\n","\n","#8) 학생여부의 None값을 나이가 5살 이상이면 True로 5살 미만이면 False로 채우기\n"],"metadata":{"id":"K7pwZMx2U7Vm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#1) 데이터 프레임 정보 확인\n","df = pd.DataFrame(data)\n","\n","df.info()\n","\n","# df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-sBOI1n8yi8L","executionInfo":{"status":"ok","timestamp":1708152036699,"user_tz":-540,"elapsed":3,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"525e8a1a-bc15-4e3e-f64a-3acf14045757"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 6 entries, 0 to 5\n","Data columns (total 6 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   이름      6 non-null      object \n"," 1   성별      6 non-null      object \n"," 2   나이      5 non-null      float64\n"," 3   키       5 non-null      float64\n"," 4   몸무게     4 non-null      float64\n"," 5   학생여부    5 non-null      object \n","dtypes: float64(3), object(3)\n","memory usage: 416.0+ bytes\n"]}]},{"cell_type":"code","source":["#2) 성별열을 기준으로 그룹화 하여 키의 평균값 구하기\n","print(df.groupby('성별')['키'].mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4IxUtIgTylnM","executionInfo":{"status":"ok","timestamp":1708152114386,"user_tz":-540,"elapsed":293,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"cac08411-6b10-46b2-c3d4-195a8a3b44fa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["성별\n","남    156.650000\n","여     86.933333\n","Name: 키, dtype: float64\n"]}]},{"cell_type":"code","source":["#3) 나이열을 기준으로 내림차순 정렬하기\n","#참고 : .sort_values('컬럼명') 오름차순 정렬\n","#       .sort_values('컬럼명', ascending = False) 내림차순 정렬\n","print(df.sort_values('나이', ascending=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4eNg59fuymj0","executionInfo":{"status":"ok","timestamp":1708152160147,"user_tz":-540,"elapsed":435,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"046a356b-4879-45a5-b55a-7afcc7fe812f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   이름 성별    나이      키   몸무게   학생여부\n","0  짱구  남  15.0  150.1  40.0   True\n","1  철수  남  14.0  163.2  43.0   True\n","3  맹구  남  10.0    NaN  38.0   None\n","4  짱아  여   5.0   80.3   NaN  False\n","5  짱아  여   5.0   80.3   NaN  False\n","2  유리  여   NaN  100.2  34.0  False\n"]}]},{"cell_type":"code","source":["#4) 키열과 몸무게열의 평균값 구하기(apply)\n","df[['키', '몸무게']].apply(lambda x:x.mean())\n","\n","df['키'].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ik5E2aPtyoRM","executionInfo":{"status":"ok","timestamp":1708152210658,"user_tz":-540,"elapsed":289,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"28e68bd0-755c-487d-e697-c1f212bfda34"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["키      114.82\n","몸무게     38.75\n","dtype: float64"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["#5) 성별열의 값을 '남'은 1로, '여'는 2로 변환하고 정보 출력하기(map)\n","df['성별']\n","df['성별'] = df['성별'].map({'남':1, '여':2})\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"BcYalQDfypKv","executionInfo":{"status":"ok","timestamp":1708152372632,"user_tz":-540,"elapsed":321,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"216fb683-a0fe-4aff-e5fe-01eb327ec07f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   이름  성별    나이      키   몸무게   학생여부\n","0  짱구   1  15.0  150.1  40.0   True\n","1  철수   1  14.0  163.2  43.0   True\n","2  유리   2   NaN  100.2  34.0  False\n","3  맹구   1  10.0    NaN  38.0   None\n","4  짱아   2   5.0   80.3   NaN  False\n","5  짱아   2   5.0   80.3   NaN  False"],"text/html":["\n","  <div id=\"df-5f2ef8f1-99d8-4691-b75a-7e010d291539\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>성별</th>\n","      <th>나이</th>\n","      <th>키</th>\n","      <th>몸무게</th>\n","      <th>학생여부</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>짱구</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","      <td>150.1</td>\n","      <td>40.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>철수</td>\n","      <td>1</td>\n","      <td>14.0</td>\n","      <td>163.2</td>\n","      <td>43.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>유리</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>100.2</td>\n","      <td>34.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>맹구</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>38.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>짱아</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>80.3</td>\n","      <td>NaN</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>짱아</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>80.3</td>\n","      <td>NaN</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f2ef8f1-99d8-4691-b75a-7e010d291539')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5f2ef8f1-99d8-4691-b75a-7e010d291539 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5f2ef8f1-99d8-4691-b75a-7e010d291539');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4328c147-cab9-4440-9067-f17643e30ec0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4328c147-cab9-4440-9067-f17643e30ec0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4328c147-cab9-4440-9067-f17643e30ec0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_72653901-f48c-4bf2-b15e-afede663b3d7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_72653901-f48c-4bf2-b15e-afede663b3d7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"\\uc774\\ub984\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"\\ucca0\\uc218\",\n          \"\\uc9f1\\uc544\",\n          \"\\uc720\\ub9ac\"\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\ubcc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub098\\uc774\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.764451699828638,\n        \"min\": 5.0,\n        \"max\": 15.0,\n        \"samples\": [\n          14.0,\n          5.0\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud0a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39.313827084118884,\n        \"min\": 80.3,\n        \"max\": 163.2,\n        \"samples\": [\n          163.2,\n          80.3\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubab8\\ubb34\\uac8c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.774917217635375,\n        \"min\": 34.0,\n        \"max\": 43.0,\n        \"samples\": [\n          43.0,\n          38.0\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud559\\uc0dd\\uc5ec\\ubd80\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          false,\n          true\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["#6) 나이의 None값을 나이열의 최소값으로 채우기(.fillna)\n","df['나이'].fillna(df['나이'].min(), inplace=True)\n","df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"bi3Z-u-eypzB","executionInfo":{"status":"ok","timestamp":1708152452031,"user_tz":-540,"elapsed":519,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"91da60c0-1202-4105-ef46-b93f3035eed4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   이름  성별    나이      키   몸무게   학생여부\n","0  짱구   1  15.0  150.1  40.0   True\n","1  철수   1  14.0  163.2  43.0   True\n","2  유리   2   5.0  100.2  34.0  False\n","3  맹구   1  10.0    NaN  38.0   None\n","4  짱아   2   5.0   80.3   NaN  False\n","5  짱아   2   5.0   80.3   NaN  False"],"text/html":["\n","  <div id=\"df-01d19800-a80a-447b-8740-3690dfa3a0ae\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>성별</th>\n","      <th>나이</th>\n","      <th>키</th>\n","      <th>몸무게</th>\n","      <th>학생여부</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>짱구</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","      <td>150.1</td>\n","      <td>40.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>철수</td>\n","      <td>1</td>\n","      <td>14.0</td>\n","      <td>163.2</td>\n","      <td>43.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>유리</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>100.2</td>\n","      <td>34.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>맹구</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>38.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>짱아</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>80.3</td>\n","      <td>NaN</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>짱아</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>80.3</td>\n","      <td>NaN</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01d19800-a80a-447b-8740-3690dfa3a0ae')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-01d19800-a80a-447b-8740-3690dfa3a0ae button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-01d19800-a80a-447b-8740-3690dfa3a0ae');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1b317e01-b43b-4b40-b830-b7b8e24700a0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1b317e01-b43b-4b40-b830-b7b8e24700a0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1b317e01-b43b-4b40-b830-b7b8e24700a0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0f4b7664-6960-42e3-b11e-4d870648b1a3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0f4b7664-6960-42e3-b11e-4d870648b1a3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"\\uc774\\ub984\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"\\ucca0\\uc218\",\n          \"\\uc9f1\\uc544\",\n          \"\\uc720\\ub9ac\"\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\ubcc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub098\\uc774\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.69041575982343,\n        \"min\": 5.0,\n        \"max\": 15.0,\n        \"samples\": [\n          14.0,\n          10.0\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud0a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39.313827084118884,\n        \"min\": 80.3,\n        \"max\": 163.2,\n        \"samples\": [\n          163.2,\n          80.3\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubab8\\ubb34\\uac8c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.774917217635375,\n        \"min\": 34.0,\n        \"max\": 43.0,\n        \"samples\": [\n          43.0,\n          38.0\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud559\\uc0dd\\uc5ec\\ubd80\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          false,\n          true\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["#7) 키와 몸무게의 None값을 각 열의 평균값으로 채우기\n","df['키'].fillna(df['키'].mean(), inplace = True)\n","df['몸무게'].fillna(df['몸무게'].mean(), inplace = True)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"uhdA2o7vyqse","executionInfo":{"status":"ok","timestamp":1708152535285,"user_tz":-540,"elapsed":526,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"a1b01e32-91a4-457f-d520-554cf401e97f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   이름  성별    나이       키    몸무게   학생여부\n","0  짱구   1  15.0  150.10  40.00   True\n","1  철수   1  14.0  163.20  43.00   True\n","2  유리   2   5.0  100.20  34.00  False\n","3  맹구   1  10.0  114.82  38.00   None\n","4  짱아   2   5.0   80.30  38.75  False\n","5  짱아   2   5.0   80.30  38.75  False"],"text/html":["\n","  <div id=\"df-07bbcf5a-bc23-47fa-ab05-d9d3a3b2347d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>성별</th>\n","      <th>나이</th>\n","      <th>키</th>\n","      <th>몸무게</th>\n","      <th>학생여부</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>짱구</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","      <td>150.10</td>\n","      <td>40.00</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>철수</td>\n","      <td>1</td>\n","      <td>14.0</td>\n","      <td>163.20</td>\n","      <td>43.00</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>유리</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>100.20</td>\n","      <td>34.00</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>맹구</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","      <td>114.82</td>\n","      <td>38.00</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>짱아</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>80.30</td>\n","      <td>38.75</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>짱아</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>80.30</td>\n","      <td>38.75</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07bbcf5a-bc23-47fa-ab05-d9d3a3b2347d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-07bbcf5a-bc23-47fa-ab05-d9d3a3b2347d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-07bbcf5a-bc23-47fa-ab05-d9d3a3b2347d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b4d2d145-54af-45fc-ab2a-9599250fb544\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b4d2d145-54af-45fc-ab2a-9599250fb544')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b4d2d145-54af-45fc-ab2a-9599250fb544 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_586ffea7-1c78-49ef-814b-624207d2dbb4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_586ffea7-1c78-49ef-814b-624207d2dbb4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"\\uc774\\ub984\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"\\ucca0\\uc218\",\n          \"\\uc9f1\\uc544\",\n          \"\\uc720\\ub9ac\"\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\ubcc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub098\\uc774\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.69041575982343,\n        \"min\": 5.0,\n        \"max\": 15.0,\n        \"samples\": [\n          14.0,\n          10.0\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud0a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35.163355926304874,\n        \"min\": 80.3,\n        \"max\": 163.2,\n        \"samples\": [\n          163.2,\n          80.3\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubab8\\ubb34\\uac8c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.924038303442689,\n        \"min\": 34.0,\n        \"max\": 43.0,\n        \"samples\": [\n          43.0,\n          38.75\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud559\\uc0dd\\uc5ec\\ubd80\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          false,\n          true\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["#8) 학생여부의 None값을 나이가 5살 이상이면 True로 5살 미만이면 False로 채우기\n","df['학생여부'].fillna(df['나이']>= 5, inplace=True)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"tc7dSuzLyryK","executionInfo":{"status":"ok","timestamp":1708152667776,"user_tz":-540,"elapsed":313,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"8fd7236a-21c1-43f3-e837-40af2b10c603"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   이름  성별    나이       키    몸무게   학생여부\n","0  짱구   1  15.0  150.10  40.00   True\n","1  철수   1  14.0  163.20  43.00   True\n","2  유리   2   5.0  100.20  34.00  False\n","3  맹구   1  10.0  114.82  38.00   True\n","4  짱아   2   5.0   80.30  38.75  False\n","5  짱아   2   5.0   80.30  38.75  False"],"text/html":["\n","  <div id=\"df-5630af9d-7473-4064-a80b-40787e694265\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>성별</th>\n","      <th>나이</th>\n","      <th>키</th>\n","      <th>몸무게</th>\n","      <th>학생여부</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>짱구</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","      <td>150.10</td>\n","      <td>40.00</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>철수</td>\n","      <td>1</td>\n","      <td>14.0</td>\n","      <td>163.20</td>\n","      <td>43.00</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>유리</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>100.20</td>\n","      <td>34.00</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>맹구</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","      <td>114.82</td>\n","      <td>38.00</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>짱아</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>80.30</td>\n","      <td>38.75</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>짱아</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>80.30</td>\n","      <td>38.75</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5630af9d-7473-4064-a80b-40787e694265')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5630af9d-7473-4064-a80b-40787e694265 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5630af9d-7473-4064-a80b-40787e694265');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-47b516a1-6c83-4f7d-92ba-a9e94d87d9bf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-47b516a1-6c83-4f7d-92ba-a9e94d87d9bf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-47b516a1-6c83-4f7d-92ba-a9e94d87d9bf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b0dfa1fe-7f66-4270-9549-d403a3357add\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b0dfa1fe-7f66-4270-9549-d403a3357add button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"\\uc774\\ub984\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"\\ucca0\\uc218\",\n          \"\\uc9f1\\uc544\",\n          \"\\uc720\\ub9ac\"\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\ubcc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub098\\uc774\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.69041575982343,\n        \"min\": 5.0,\n        \"max\": 15.0,\n        \"samples\": [\n          14.0,\n          10.0\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud0a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35.163355926304874,\n        \"min\": 80.3,\n        \"max\": 163.2,\n        \"samples\": [\n          163.2,\n          80.3\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubab8\\ubb34\\uac8c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.924038303442689,\n        \"min\": 34.0,\n        \"max\": 43.0,\n        \"samples\": [\n          43.0,\n          38.75\n        ],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud559\\uc0dd\\uc5ec\\ubd80\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"samples\": [\n          false,\n          true\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":112}]},{"cell_type":"markdown","source":["##5"],"metadata":{"id":"HNi0UykKoFhd"}},{"cell_type":"code","source":["# iphone.csv 파일\n","# 1) 데이터프레임 생성(정보확인하기)\n","\n","# 2) iPhone 14의 출시일, 메모리만 출력\n","\n","# 3) iPhone x 한 행을 출력(시리즈, 판다스 각각 출력)\n","\n","# 4) Face ID를 지원하는 iPhone 모델의 개수\n","\n","# 5) iOS 14 이상 버전을 지원하는 iPhone 모델(loc, query() 각각 출력)\n","\n","# 6) iphone 11 pro 까지의(포함) 출시일, 디스플레이 출력(새로운 데이터 프레임이용)"],"metadata":{"id":"FOkYcR16oGei"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 1) 데이터프레임 생성(정보확인하기)\n","iphone_df1 = pd.read_csv('iphone.csv', encoding = 'cp949')\n","\n","iphone_df = pd.read_csv('iphone.csv', index_col=0)\n","iphone_df.info()\n","iphone_df1.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v9CDcyb94aLv","executionInfo":{"status":"ok","timestamp":1708155234467,"user_tz":-540,"elapsed":370,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"9eea63e8-5eff-459b-dc48-8344b52c180f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 21 entries, iPhone 7 to iPhone 14\n","Data columns (total 5 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   release date    21 non-null     object \n"," 1   display         21 non-null     float64\n"," 2   memory          21 non-null     object \n"," 3   relase version  21 non-null     object \n"," 4   Face ID         21 non-null     object \n","dtypes: float64(1), object(4)\n","memory usage: 1008.0+ bytes\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 21 entries, 0 to 20\n","Data columns (total 6 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   Unnamed: 0      21 non-null     object \n"," 1   release date    21 non-null     object \n"," 2   display         21 non-null     float64\n"," 3   memory          21 non-null     object \n"," 4   relase version  21 non-null     object \n"," 5   Face ID         21 non-null     object \n","dtypes: float64(1), object(5)\n","memory usage: 1.1+ KB\n"]}]},{"cell_type":"code","source":["# 2) iPhone 14의 출시일, 메모리만 출력\n","i1 = iphone_df.loc['iPhone 14', 'release date']\n","i2 = iphone_df.loc['iPhone 14', 'memory']\n","print(i1, i2, type(i1), type(i2))\n","\n","df = iphone_df.loc['iPhone 14']\n","df[['release date', 'memory']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0l4mp8BF5NFT","executionInfo":{"status":"ok","timestamp":1708153867040,"user_tz":-540,"elapsed":295,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"06bd6d23-312e-4a88-bcf7-4640f61479f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2022-10-07 6GB <class 'str'> <class 'str'>\n"]},{"output_type":"execute_result","data":{"text/plain":["release date    2022-10-07\n","memory                 6GB\n","Name: iPhone 14, dtype: object"]},"metadata":{},"execution_count":128}]},{"cell_type":"code","source":["# 3) iPhone x 한 행을 출력(시리즈, 판다스 각각 출력)\n","# df = iphone_df.loc['iPhone X']\n","# df\n","\n","df = iphone_df.loc['iPhone X']\n","df = iphone_df.loc[iphone_df.index == 'iPhone X']\n","df\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"1EbeMLcg5ODd","executionInfo":{"status":"ok","timestamp":1708154131946,"user_tz":-540,"elapsed":301,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"f4cbbde5-d045-4788-f1ff-e7f8296e2f5a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         release date  display memory relase version Face ID\n","iPhone X   2017-11-03      5.8    3GB       iOS 11.1     Yes"],"text/html":["\n","  <div id=\"df-dc83461e-5d7a-442c-9117-81c61bc8ec98\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>release date</th>\n","      <th>display</th>\n","      <th>memory</th>\n","      <th>relase version</th>\n","      <th>Face ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>iPhone X</th>\n","      <td>2017-11-03</td>\n","      <td>5.8</td>\n","      <td>3GB</td>\n","      <td>iOS 11.1</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dc83461e-5d7a-442c-9117-81c61bc8ec98')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dc83461e-5d7a-442c-9117-81c61bc8ec98 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dc83461e-5d7a-442c-9117-81c61bc8ec98');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_bf9227b2-55e1-4b38-abb9-ceebf26afa61\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bf9227b2-55e1-4b38-abb9-ceebf26afa61 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"release date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"min\": \"2017-11-03\",\n        \"max\": \"2017-11-03\",\n        \"samples\": [\n          \"2017-11-03\"\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"display\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": NaN,\n        \"min\": 5.8,\n        \"max\": 5.8,\n        \"samples\": [\n          5.8\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"memory\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"3GB\"\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relase version\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"iOS 11.1\"\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Face ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":["# 4) Face ID를 지원하는 iPhone 모델의 개수\n","print(len(iphone_df[iphone_df['Face ID'] == 'Yes']))\n","\n","num = iphone_df[iphone_df['Face ID'].isin(['Yes'])]\n","print(\"Facs ID를 지원하는 개수 : \", len(num))\n","\n","count = iphone_df['Face ID'].value_counts()\n","num = count.get('Yes', 0) #만약 Yes가 없다면 기본값을 0으로 반환\n","print(num)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pAX3BASI5Ozc","executionInfo":{"status":"ok","timestamp":1708154402427,"user_tz":-540,"elapsed":323,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"a1b7aa6e-37c0-4e4d-acac-8810747086b2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["17\n","Facs ID를 지원하는 개수 :  17\n","17\n"]}]},{"cell_type":"code","source":["# 5) iOS 14 이상 버전을 지원하는 iPhone 모델(loc, query() 각각 출력)\n","#loc 사용\n","df = iphone_df.loc[iphone_df['relase version'] >= 'iOS 14']\n","df\n","\n","#query() 사용\n","df = iphone_df.query(\"`relase version` >= 'iOS 14'\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"skxeJgRA5PjB","executionInfo":{"status":"ok","timestamp":1708155077079,"user_tz":-540,"elapsed":323,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"e289badc-a24b-48f5-9468-77d85beecf81"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  release date  display memory relase version Face ID\n","iPhone 12 Mini      2020-11-13      5.4    4GB       iOS 14.1     Yes\n","iPhone 12           2020-10-23      6.1    4GB       iOS 14.1     Yes\n","iPhone 12 Pro       2020-10-23      6.1    6GB       iOS 14.1     Yes\n","iPhone 12 Pro Max   2020-11-13      6.7    6GB       iOS 14.1     Yes\n","iPhone 13 Mini      2021-09-24      5.4    4GB         iOS 15     Yes\n","iPhone 13           2021-09-24      6.1    4GB         iOS 15     Yes\n","iPhone 13 Pro       2021-09-24      6.1    6GB         iOS 15     Yes\n","iPhone 13 Pro Max   2021-09-24      6.7    6GB         iOS 15     Yes\n","iPhone 14           2022-10-07      6.1    6GB     iOS 16.3.1     Yes"],"text/html":["\n","  <div id=\"df-8888a284-60c5-45d8-a36d-96269c779b53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>release date</th>\n","      <th>display</th>\n","      <th>memory</th>\n","      <th>relase version</th>\n","      <th>Face ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>iPhone 12 Mini</th>\n","      <td>2020-11-13</td>\n","      <td>5.4</td>\n","      <td>4GB</td>\n","      <td>iOS 14.1</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>iPhone 12</th>\n","      <td>2020-10-23</td>\n","      <td>6.1</td>\n","      <td>4GB</td>\n","      <td>iOS 14.1</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>iPhone 12 Pro</th>\n","      <td>2020-10-23</td>\n","      <td>6.1</td>\n","      <td>6GB</td>\n","      <td>iOS 14.1</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>iPhone 12 Pro Max</th>\n","      <td>2020-11-13</td>\n","      <td>6.7</td>\n","      <td>6GB</td>\n","      <td>iOS 14.1</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>iPhone 13 Mini</th>\n","      <td>2021-09-24</td>\n","      <td>5.4</td>\n","      <td>4GB</td>\n","      <td>iOS 15</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>iPhone 13</th>\n","      <td>2021-09-24</td>\n","      <td>6.1</td>\n","      <td>4GB</td>\n","      <td>iOS 15</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>iPhone 13 Pro</th>\n","      <td>2021-09-24</td>\n","      <td>6.1</td>\n","      <td>6GB</td>\n","      <td>iOS 15</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>iPhone 13 Pro Max</th>\n","      <td>2021-09-24</td>\n","      <td>6.7</td>\n","      <td>6GB</td>\n","      <td>iOS 15</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>iPhone 14</th>\n","      <td>2022-10-07</td>\n","      <td>6.1</td>\n","      <td>6GB</td>\n","      <td>iOS 16.3.1</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8888a284-60c5-45d8-a36d-96269c779b53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8888a284-60c5-45d8-a36d-96269c779b53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8888a284-60c5-45d8-a36d-96269c779b53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0730be0c-2c02-4da6-b30d-73aff07b68ac\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0730be0c-2c02-4da6-b30d-73aff07b68ac')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0730be0c-2c02-4da6-b30d-73aff07b68ac button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b09500ad-c1bf-456f-98eb-ff5fa990e663\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b09500ad-c1bf-456f-98eb-ff5fa990e663 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"release date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"min\": \"2020-10-23\",\n        \"max\": \"2022-10-07\",\n        \"samples\": [\n          \"2020-10-23\",\n          \"2022-10-07\",\n          \"2020-11-13\"\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"display\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.46037424389777104,\n        \"min\": 5.4,\n        \"max\": 6.7,\n        \"samples\": [\n          5.4,\n          6.1,\n          6.7\n        ],\n        \"num_unique_values\": 3,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"memory\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"6GB\",\n          \"4GB\"\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relase version\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"iOS 14.1\",\n          \"iOS 15\"\n        ],\n        \"num_unique_values\": 3,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Face ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":164}]},{"cell_type":"code","source":["#문자열 비교\n","data1 = 'abc'\n","data2 = 'iphone'\n","data3 = 'abbbb'\n","li = [data1, data2, data3, '1', '0.5']\n","print(f\"비교 : {sorted(li)}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S0aoakps9KXJ","executionInfo":{"status":"ok","timestamp":1708154968808,"user_tz":-540,"elapsed":319,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"887a6f30-571f-4d0d-f165-f77877787d8a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["비교 : ['0.5', '1', 'abbbb', 'abc', 'iphone']\n"]}]},{"cell_type":"code","source":["# 6) iphone 11 pro 까지의(포함) 출시일, 디스플레이 출력(새로운 데이터 프레임이용)\n","df = iphone_df\n","df\n","\n","#loc 슬라이싱\n","# df = df.loc['iPhone 7':'iPhone 11 Pro', ['release date', 'display']]\n","# df\n","\n","#iloc 슬라이싱\n","# df = df.iloc[0:10, 0:2]\n","# df\n","\n","# iphone_df\n","\n","#isin 사용\n","models = ['iPhone 7', 'iPhone 7 Plus', 'iPhone 8', 'iPhone 8 Plus', 'iPhone X', 'iPhone XS',\n","          'iPhone XS Max', 'iPhone XR', 'iPhone 11', 'iPhone 11 Pro']\n","models = df.index\n","df = df[df.index.isin(models)][['release date', 'display']]\n","df.index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UHphrVsc5QKY","executionInfo":{"status":"ok","timestamp":1708155496331,"user_tz":-540,"elapsed":9,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"31e9016a-a462-4ca3-c990-c43c3d38609c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['iPhone 7', 'iPhone 7 Plus', 'iPhone 8', 'iPhone 8 Plus', 'iPhone X',\n","       'iPhone XS', 'iPhone XS Max', 'iPhone XR', 'iPhone 11', 'iPhone 11 Pro',\n","       'iPhone 11 Pro Max', 'iPhone SE (2nd Gen)', 'iPhone 12 Mini',\n","       'iPhone 12', 'iPhone 12 Pro', 'iPhone 12 Pro Max', 'iPhone 13 Mini',\n","       'iPhone 13', 'iPhone 13 Pro', 'iPhone 13 Pro Max', 'iPhone 14'],\n","      dtype='object')"]},"metadata":{},"execution_count":184}]},{"cell_type":"markdown","source":["##6"],"metadata":{"id":"OBi3Fj6loLJW"}},{"cell_type":"code","source":["# channal.csv 파일\n","# 1) 데이터프레임 생성(정보확인하기)\n","\n","# 2) 연도별 각 채널의 시청률 변화 시각화(선그래프)\n","\n","# 3) 연도별 각 채널의 시청률 평균을 계산하고 막대그래프로 시각화\n","\n","# 4) 연도별 각 채널의 시청률 변화를 확인하고 가장 큰 변화를 보인 채널 출력하기"],"metadata":{"id":"QfS1Tp_QoMXk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 1) 데이터프레임 생성(정보확인하기)\n","\n","df = pd.read_csv('channal.csv')\n","df.info()\n","df.describe()\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":543},"id":"VeMYSHt-ARJJ","executionInfo":{"status":"ok","timestamp":1708157755824,"user_tz":-540,"elapsed":435,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"95aa24ea-8431-4292-9437-5e36c6eea410"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 7 entries, 0 to 6\n","Data columns (total 8 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   Unnamed: 0  7 non-null      int64  \n"," 1   KBS         7 non-null      float64\n"," 2   MBC         7 non-null      float64\n"," 3   SBS         7 non-null      float64\n"," 4   TV CHOSUN   7 non-null      float64\n"," 5   JTBC        7 non-null      float64\n"," 6   Channel A   7 non-null      float64\n"," 7   MBN         7 non-null      float64\n","dtypes: float64(7), int64(1)\n","memory usage: 576.0 bytes\n"]},{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0     KBS     MBC     SBS  TV CHOSUN   JTBC  Channel A    MBN\n","0        2016  35.951  18.374  11.173      9.102  7.380      3.771  2.809\n","1        2017  36.163  16.022  11.408      8.785  7.878      5.874  3.310\n","2        2018  31.989  16.778   9.673      9.026  7.810      5.350  3.825\n","3        2019  31.210  15.663   9.108      9.440  7.490      5.776  4.572\n","4        2020  27.777  16.573   9.099      9.940  7.267      6.678  5.520\n","5        2021  27.583  14.982   8.669      9.829  7.727      6.624  5.477\n","6        2022  26.890  12.465   8.661      8.886  9.453      6.056  5.215"],"text/html":["\n","  <div id=\"df-5971eb5c-3621-4fe1-9a08-79676b1d2867\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>KBS</th>\n","      <th>MBC</th>\n","      <th>SBS</th>\n","      <th>TV CHOSUN</th>\n","      <th>JTBC</th>\n","      <th>Channel A</th>\n","      <th>MBN</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2016</td>\n","      <td>35.951</td>\n","      <td>18.374</td>\n","      <td>11.173</td>\n","      <td>9.102</td>\n","      <td>7.380</td>\n","      <td>3.771</td>\n","      <td>2.809</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017</td>\n","      <td>36.163</td>\n","      <td>16.022</td>\n","      <td>11.408</td>\n","      <td>8.785</td>\n","      <td>7.878</td>\n","      <td>5.874</td>\n","      <td>3.310</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018</td>\n","      <td>31.989</td>\n","      <td>16.778</td>\n","      <td>9.673</td>\n","      <td>9.026</td>\n","      <td>7.810</td>\n","      <td>5.350</td>\n","      <td>3.825</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019</td>\n","      <td>31.210</td>\n","      <td>15.663</td>\n","      <td>9.108</td>\n","      <td>9.440</td>\n","      <td>7.490</td>\n","      <td>5.776</td>\n","      <td>4.572</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020</td>\n","      <td>27.777</td>\n","      <td>16.573</td>\n","      <td>9.099</td>\n","      <td>9.940</td>\n","      <td>7.267</td>\n","      <td>6.678</td>\n","      <td>5.520</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2021</td>\n","      <td>27.583</td>\n","      <td>14.982</td>\n","      <td>8.669</td>\n","      <td>9.829</td>\n","      <td>7.727</td>\n","      <td>6.624</td>\n","      <td>5.477</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2022</td>\n","      <td>26.890</td>\n","      <td>12.465</td>\n","      <td>8.661</td>\n","      <td>8.886</td>\n","      <td>9.453</td>\n","      <td>6.056</td>\n","      <td>5.215</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5971eb5c-3621-4fe1-9a08-79676b1d2867')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5971eb5c-3621-4fe1-9a08-79676b1d2867 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5971eb5c-3621-4fe1-9a08-79676b1d2867');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e56e4443-9d24-44b5-b62e-904deab43bed\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e56e4443-9d24-44b5-b62e-904deab43bed')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e56e4443-9d24-44b5-b62e-904deab43bed button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_035c2c1c-9789-4354-bf20-f68ea02c0561\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_035c2c1c-9789-4354-bf20-f68ea02c0561 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 2016,\n        \"max\": 2022,\n        \"samples\": [\n          2016,\n          2017,\n          2021\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"KBS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.8966145073701624,\n        \"min\": 26.89,\n        \"max\": 36.163,\n        \"samples\": [\n          35.951,\n          36.163,\n          27.583\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MBC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.827085813920236,\n        \"min\": 12.465,\n        \"max\": 18.374,\n        \"samples\": [\n          18.374,\n          16.022,\n          14.982\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SBS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1503747008609637,\n        \"min\": 8.661,\n        \"max\": 11.408,\n        \"samples\": [\n          11.173,\n          11.408,\n          8.669\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TV CHOSUN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4580270838321786,\n        \"min\": 8.785,\n        \"max\": 9.94,\n        \"samples\": [\n          9.102,\n          8.785,\n          9.829\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"JTBC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7390397888637723,\n        \"min\": 7.267,\n        \"max\": 9.453,\n        \"samples\": [\n          7.38,\n          7.878,\n          7.727\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Channel A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9839628574097219,\n        \"min\": 3.771,\n        \"max\": 6.678,\n        \"samples\": [\n          3.771,\n          5.874,\n          6.624\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MBN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0921998770502455,\n        \"min\": 2.809,\n        \"max\": 5.52,\n        \"samples\": [\n          2.809,\n          3.31,\n          5.477\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":237}]},{"cell_type":"code","source":["# 2) 연도별 각 채널의 시청률 변화 시각화(선그래프)\n","#Unnamed: 0\t컬럼을 연도로 수정\n","df = df.rename(columns={'Unnamed: 0' :'연도'})\n","df\n","\n","plt.figure(figsize = (12, 6))\n","for channel in df.columns[1:]:\n","    plt.plot(df['연도'], df[channel], label = channel)\n","\n","plt.xlabel('연도')\n","plt.ylabel('시청률')\n","plt.title('연도별 각 채널의 시청률 변화')\n","plt.legend(loc='upper right')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":563},"id":"GBgZJAmkAj9p","executionInfo":{"status":"ok","timestamp":1708157758678,"user_tz":-540,"elapsed":848,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"afeae988-b5f1-4a0f-da93-70b51e4c806a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.columns[1:]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tVroPROABF10","executionInfo":{"status":"ok","timestamp":1708155757727,"user_tz":-540,"elapsed":378,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"0d9b230b-0435-4c21-cadd-505dde9ed64f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['KBS', 'MBC', 'SBS', 'TV CHOSUN', 'JTBC', 'Channel A', 'MBN'], dtype='object')"]},"metadata":{},"execution_count":191}]},{"cell_type":"code","source":["# 3) 연도별 각 채널의 시청률 평균을 계산하고 막대그래프로 시각화\n","avg = df.groupby('연도').mean()\n","\n","avg.plot(kind='bar', figsize = (12, 6))\n","plt.xlabel('연도')\n","plt.ylabel('평균 시청률')\n","plt.title('연도별 각 채널의 시청률 평균')\n","# plt.show()\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":834},"id":"mhn7MBNKAnEk","executionInfo":{"status":"ok","timestamp":1708157556022,"user_tz":-540,"elapsed":1000,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"f3c98ae0-4340-426c-fbd3-bdffcb96be68"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     연도     KBS     MBC     SBS  TV CHOSUN   JTBC  Channel A    MBN\n","0  2016  35.951  18.374  11.173      9.102  7.380      3.771  2.809\n","1  2017  36.163  16.022  11.408      8.785  7.878      5.874  3.310\n","2  2018  31.989  16.778   9.673      9.026  7.810      5.350  3.825\n","3  2019  31.210  15.663   9.108      9.440  7.490      5.776  4.572\n","4  2020  27.777  16.573   9.099      9.940  7.267      6.678  5.520\n","5  2021  27.583  14.982   8.669      9.829  7.727      6.624  5.477\n","6  2022  26.890  12.465   8.661      8.886  9.453      6.056  5.215"],"text/html":["\n","  <div id=\"df-90df791a-8687-4f0a-8360-c0864d15c48b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>연도</th>\n","      <th>KBS</th>\n","      <th>MBC</th>\n","      <th>SBS</th>\n","      <th>TV CHOSUN</th>\n","      <th>JTBC</th>\n","      <th>Channel A</th>\n","      <th>MBN</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2016</td>\n","      <td>35.951</td>\n","      <td>18.374</td>\n","      <td>11.173</td>\n","      <td>9.102</td>\n","      <td>7.380</td>\n","      <td>3.771</td>\n","      <td>2.809</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017</td>\n","      <td>36.163</td>\n","      <td>16.022</td>\n","      <td>11.408</td>\n","      <td>8.785</td>\n","      <td>7.878</td>\n","      <td>5.874</td>\n","      <td>3.310</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018</td>\n","      <td>31.989</td>\n","      <td>16.778</td>\n","      <td>9.673</td>\n","      <td>9.026</td>\n","      <td>7.810</td>\n","      <td>5.350</td>\n","      <td>3.825</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019</td>\n","      <td>31.210</td>\n","      <td>15.663</td>\n","      <td>9.108</td>\n","      <td>9.440</td>\n","      <td>7.490</td>\n","      <td>5.776</td>\n","      <td>4.572</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020</td>\n","      <td>27.777</td>\n","      <td>16.573</td>\n","      <td>9.099</td>\n","      <td>9.940</td>\n","      <td>7.267</td>\n","      <td>6.678</td>\n","      <td>5.520</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2021</td>\n","      <td>27.583</td>\n","      <td>14.982</td>\n","      <td>8.669</td>\n","      <td>9.829</td>\n","      <td>7.727</td>\n","      <td>6.624</td>\n","      <td>5.477</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2022</td>\n","      <td>26.890</td>\n","      <td>12.465</td>\n","      <td>8.661</td>\n","      <td>8.886</td>\n","      <td>9.453</td>\n","      <td>6.056</td>\n","      <td>5.215</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90df791a-8687-4f0a-8360-c0864d15c48b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-90df791a-8687-4f0a-8360-c0864d15c48b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-90df791a-8687-4f0a-8360-c0864d15c48b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2468052a-e2ad-4396-b33c-abf8efd63061\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2468052a-e2ad-4396-b33c-abf8efd63061')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2468052a-e2ad-4396-b33c-abf8efd63061 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d6cf4c3d-6a23-42eb-852d-4e181375d8f0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d6cf4c3d-6a23-42eb-852d-4e181375d8f0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"\\uc5f0\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 2016,\n        \"max\": 2022,\n        \"samples\": [\n          2016,\n          2017,\n          2021\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"KBS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.8966145073701624,\n        \"min\": 26.89,\n        \"max\": 36.163,\n        \"samples\": [\n          35.951,\n          36.163,\n          27.583\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MBC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.827085813920236,\n        \"min\": 12.465,\n        \"max\": 18.374,\n        \"samples\": [\n          18.374,\n          16.022,\n          14.982\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SBS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1503747008609637,\n        \"min\": 8.661,\n        \"max\": 11.408,\n        \"samples\": [\n          11.173,\n          11.408,\n          8.669\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TV CHOSUN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4580270838321786,\n        \"min\": 8.785,\n        \"max\": 9.94,\n        \"samples\": [\n          9.102,\n          8.785,\n          9.829\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"JTBC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7390397888637723,\n        \"min\": 7.267,\n        \"max\": 9.453,\n        \"samples\": [\n          7.38,\n          7.878,\n          7.727\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Channel A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9839628574097219,\n        \"min\": 3.771,\n        \"max\": 6.678,\n        \"samples\": [\n          3.771,\n          5.874,\n          6.624\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MBN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0921998770502455,\n        \"min\": 2.809,\n        \"max\": 5.52,\n        \"samples\": [\n          2.809,\n          3.31,\n          5.477\n        ],\n        \"num_unique_values\": 7,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":223},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df1 = df.mean()\n","df1\n","# df1.drop(columns='연도', inplace=True)\n","df1.plot(kind='bar')\n","plt.xticks(rotation=45)\n","plt.grid(axis='y')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":481},"id":"ZrDwZ9ZoGab6","executionInfo":{"status":"ok","timestamp":1708157563662,"user_tz":-540,"elapsed":392,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"5569828b-7f40-41a1-a1b3-43ab5024d269"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAi4AAAHQCAYAAACGOuErAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABMAUlEQVR4nO3deVhUZf8/8PewOCIKhchiYKLkghvyxQ0qDU1BwMrMvUUtlccecElLxdIicc3QrDTTUlPbbBUFUzMt0CRMccEsFUoEFWVQZJhhPr8//HEeJ0xlGhwOvl/XNdfl3Gf7HIeZ85773OeMRkQERERERCpgZ+sCiIiIiG4VgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGphoOtC7Amk8mE06dPo0GDBtBoNLYuh4iIiG6BiKC4uBiNGzeGnd2N+1RqVXA5ffo0fH19bV0GERERWSA3Nxc+Pj43nKdWBZcGDRoAuLrjLi4uNq6GiIiIboVOp4Ovr69yHL+RWhVcKk4Pubi4MLgQERGpzK0M8+DgXCIiIlINBhciIiJSDQYXIiIiUg0GFyIiIlINBhciIiJSDQYXIiIiUg0GFyIiIlINBhciIiJSDQYXIiIiUg0GFyIiIlINBhciIiJSDQYXIiIiUg0GFyIiIlKNKgeXvXv3om/fvvDw8IC3tzfCwsKwf/9+AIDJZEJ8fDx8fHzg4eGBiIgInDx50mz5xYsXw8/PDx4eHggNDVWWrfDxxx+jVatW8PT0RGBgILZv327pvhEREVEt41DVBaZMmYJJkyahb9++0Gg0mD59Oh555BGcOnUKc+fOxcaNG7Fv3z40atQIU6ZMQWRkJH799Vc4ODhg/fr1mD17Nn744Qe0aNECSUlJ6NOnD44dOwZXV1fs3r0bo0aNwnfffYeuXbti48aNiI6OxsGDB9GsWbPq2P9Kmr606bZs53pOzom02baJiIjUoMo9Lt999x2io6Nhb28POzs7PPnkk8jJyUF+fj6SkpIQHx8PLy8v2NvbIyEhATk5Odi6dSsAYNGiRYiNjUWLFi0AAHFxcXBxccG6desAXO2NGTp0KLp27QoA6N+/P7p164Zly5ZZa3+JiIhIxaocXBwczDtp0tLS4OnpiUuXLiE/Px+hoaHKNCcnJwQFBSE9PR1lZWXIzMw0mw4AISEhSE9PBwCkp6dXmh4aGqpMJyIiojtblU8VXev48eN44YUXsGTJEhQUFAAAPD09zebx9PREfn4+zp8/D6PReN3pBw4cAADk5+f/4/LXo9frodfrlec6nQ4AYDAYYDAYLNonrb1YtJw1WFozERGRmlXl+GdxcLlw4QL69euHESNGYPjw4fjxxx8BABqNxmw+Ozs7mEwmmEymG04Hrg7uvdH0v0tMTMSsWbMqtaempqJevXoW7de8zhYtZhXJycm22zgREZGNlJSU3PK8FgWXS5cuISIiAv/3f/+HhQsXAgAaNmwIACgsLIS3t7cyb2FhIZo1awY3NzdoNBoUFhaarauwsBDu7u7KOm40/e+mTp2KiRMnKs91Oh18fX3Ru3dvuLi4WLJraDszxaLlrCFrZh+bbZuIiMhWKs6Y3IoqB5crV64gKioKjRs3xqpVq5QeEn9/f7i6uiIjIwNRUVEAAKPRiMzMTIwePRpOTk4ICAhARkYGunXrpqxv7969GD58OAAgODgYGRkZGDJkiNn0oKCg69ai1Wqh1WortTs6OsLR0bGquwYA0Jdrbj5TNbG0ZiIiIjWryvGvSoNzy8rK8Nhjj0Gr1WLDhg1mA3UdHBwwZswYTJ8+HXl5eTAYDIiPj4ezszMiI69e5jtu3DjMnTsX2dnZMJlMWLp0KU6cOKEEl3HjxmHFihVIS0uDiOCLL75ASkoKRo8eXZUyiYiIqJaqUo9LWloaUlJS4ObmhiZNmphNW7t2LRISElBaWooOHTrAYDAgKCgIKSkpcHJyAgDExMTg3LlzCAsLw+XLl9GyZUukpKTAy8sLABAREYF58+Zh2LBhOH/+PHx9ffHpp5+iffv2VtpdIiIiUjONiNjuMhor0+l0cHV1RVFRkcVjXHgDOiIioturKsdv/lYRERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERER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jMbKdDodXF1dUVRUZPEYl6YvbbJyVbfu5Bz2LBER0Z2nKsdv/lYRERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGphtWDy969e9G3b194eHjA29sbYWFh2L9/PwDgmWeegaurK7y8vJRH+/btlWVNJhPi4+Ph4+MDDw8PRERE4OTJk9YukYiIiFTK6sFlypQpiImJQV5eHv766y906dIFjzzyiDI9KSkJZ86cUR4HDhxQps2dOxcbN27Evn37kJeXh4CAAERGRsJoNFq7TCIiIlIhqweX7777DtHR0bC3t4ednR2efPJJ5OTkID8//4bLiQiSkpIQHx8PLy8v2NvbIyEhATk5Odi6dau1yyQiIiIVsnpwcXBwMHuelpYGT09PuLu733C5EydOID8/H6GhoUqbk5MTgoKCkJ6ebu0yiYiISIUcbj6L5Y4fP44XXngBS5Ysgb29PQBg8uTJePHFF+Hs7Izg4GBMmzYNgYGBSo+Mp6en2To8PT3/sbdGr9dDr9crz3U6HQDAYDDAYDBYVLPWXixazhosrZmIiEjNqnL8q7bgcuHCBfTr1w8jRozA8OHDAQALFy7EihUr4ODggLy8PCxYsADdu3dHRkYGTCYTAECj0Zitx87OTpn2d4mJiZg1a1al9tTUVNSrV8+iuud1tmgxq0hOTrbdxomIiGykpKTklufViIjVuxguXbqEXr164b777sPq1asrhZFrNWvWDDExMYiOjkbr1q1x+vRpeHt7K9N79+6N4OBgzJ49u9Ky1+tx8fX1xblz5+Di4mJR7W1npli0nDVkzexjs20TERHZik6ng7u7O4qKim56/LZ6j8uVK1cQFRWFxo0bY9WqVTcMLSKCsrIyuLm5wd/fH66ursjIyEBUVBQAwGg0IjMzE6NHj77u8lqtFlqttlK7o6MjHB0dLapfX/7P9VY3S2smIiJSs6oc/6w6OLesrAyPPfYYtFotNmzYYDZQt6CgAImJicp4leLiYsTGxqJu3boYNGgQHBwcMGbMGEyfPh15eXkwGAyIj4+Hs7MzIiMjrVkmERERqZRVe1zS0tKQkpICNzc3NGnSxGzaihUrUFxcjNDQUOh0OphMJoSHh2PHjh2oX78+ACAhIQGlpaXo0KEDDAYDgoKCkJKSAicnJ2uWSURERCpVLWNcbEWn08HV1fWWzpH9k6YvbbJyVbfu5Bz2LBER0Z2nKsdv/lYRERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREakGgwsRERGpBoMLERERqQaDCxEREamGg60LoJqh6UubbLbtk3MibbZtIiJSlxrX41JaWoqYmBh4e3vD09MTgwcPxvnz521dFhEREdUANS64xMXF4fDhw8jOzkZOTg4AYOjQoTauioiIiGqCGnWqqKioCKtWrcL3338PFxcXAMCCBQvg6+uLI0eOoHXr1jaukGobniIjIlKXGhVcMjIyICLo3Lmz0ubj44MmTZogPT29UnDR6/XQ6/XK86KiIgBAYWEhDAaDRTU4GC9btJw12PKUGPf79rPlfndJ3Gazbe+Z2tNm2+Z+337cb7oVxcXFAAARufnMUoOsW7dOPD09K7V36tRJEhMTK7W/8sorAoAPPvjggw8++KgFj9zc3JtmhRrV42IymaDRaCq129nZwWQyVWqfOnUqJk6caLZ8YWEhGjZseN31VCedTgdfX1/k5uYqp7nuBNxv7vedgPvN/b4T2HK/RQTFxcVo3LjxTeetUcGlYcOGuHjxIkTELHgUFhbC3d290vxarRZardas7a677qruMm/IxcXljvpDr8D9vrNwv+8s3O87i63229XV9Zbmq1FXFXXs2BFlZWU4dOiQ0lZYWIjff/8dQUFBNqyMiIiIaoIaFVw8PT0xYMAATJgwAUVFRbhy5QpiY2MRHByM4OBgW5dHRERENlajggsAvPfee/D29kazZs3QuHFjlJSU4Msvv7R1WTel1WrxyiuvVDp1Vdtxv7nfdwLuN/f7TqCW/daI3Mq1R0RERES2V+N6XIiIiIj+CYMLERERqQaDCxEREakGgwsRkY2Ul5fbugQi1WFwsaLr3d2XqLbj+H7L5ObmYtmyZfjzzz9tXUqVMGzdmWrS+5zBxUrKy8thZ2eHkpISbN261dbl3HaXL9vuxwprglOnTmH16tVIS0sz++HP2ur06dPYsWMHiouLb/vPa9QW6enpePvtt/Hpp5/i9OnTti7nlhw/fhwzZsxQZeC6XS5dumT2XO1faC9cuIALFy5Ao9HUmPDC4GIF5eXlsLe3R1FREVq2bIm9e/fauqTb6siRIxg5ciTef//9O/Lb2KFDhxAeHo4tW7YgOzu7xt8D4d/KyspCnz59sH379jvub92annjiCUybNg2ff/451q9fX+PDS1ZWFiIiInDlyhXcfffd8PHxsXVJNc7Ro0fRrFkzzJkzB59++imAq7+1p1YXL17E+PHjsWTJEhQWFtaY8FKjfqtIjSpCi06nQ/v27fHAAw9g+vTpAK4m7Yo/2r///lJtkZWVhcjISIwfPx6tWrWCvb29rUu6rQ4fPozw8HDEx8djzJgxti6n2h05cgR9+/bFSy+9hP/85z+2Lkf1hg4dCqPRiOXLlwMAhgwZcks/Mne7ZWdnIyIiAtOnT8fYsWOV9tr6uWapvXv3QqfTIS8vD/v378fixYuxaNEi3HPPPfD29lbd/9ddd92F1q1bIyMjAytXrsTIkSPh5uZm8/3gDej+hWtDS5s2bdCjRw+sWbMGAKDX62v9N+8zZ86gd+/e+O9//4vnnnvuH+ez9R95dSkpKcHgwYPRvXt3TJo0SWmvrftbXl6OZ599Fv7+/ko4v3aaiMDBgd+F/snBgwfx4osvYujQofDy8kKvXr2UaR999BGWLl2K/v37Y8iQIbjnnntsWKk5EUFsbCwaNWqEl19+WWmrjX/j/9aVK1cwa9YsdOjQAY888gjGjBkDo9GI/Px8TJ48GSEhIbf8Q4K2VnF8A4CkpCTs3LkTISEhNSK8qLcPy8ZMJpNZaHnwwQcrhZby8nL07t0bqampAGrW4CZryM3NRePGjc1Cy5kzZ/Drr79izZo1+OWXX3Dp0qVa+wGn1+uh0+kQFRUF4H/nsiv2t+L1rk2ve35+Plq3bq0837ZtG958802Eh4fjkUcewaZNmwDUrn22hrKyMjz33HPYsmULMjIyMGDAADz66KMYM2YM/vjjDwwZMgQzZszAt99+i88++6xGjR/RaDQ4ePAg2rRpA+Dq3/m17+mK1/pOPE38d3Xq1IG9vT2+/fZb1KtXD2vWrMEbb7yBY8eO4cknn8SECRPwxhtvwGAw2LrUf5Sfnw+dTgej0ai0xcXF4YEHHsDu3buxcuVKm582YnCxkJ2dHa5cuYKAgAD06tULH330EQDz0NK6dWtotVr07t0bwNUPgKysLGRlZdmydKspKirCX3/9hY8//hi//PILEhIS8MgjjyAkJARjx45FVFQU5s+fX6PfpP9GQUEBcnNz4ebmBqDyueyKN/bGjRtRUlJiixKtyt7eHg0bNsSYMWPw/PPPIyIiAo899hg+/PBD1KlTB5cvX8bjjz+O9PT0WhtWLVFWVoY6depgyZIl8PX1RVlZGY4fP47IyEgcOHAATzzxBO677z7k5uaifv36+Oabb/DBBx/g3Llzti4dAFBaWorLly8rPQV/P1hVvNaLFi3C8ePHb3t9NYm9vT2mTp2K9PR0rFy5EgAwZcoUeHt7Y+vWrejUqRPmzZuHyMhIlJaW2rjayrKzs+Ht7Y1HHnkEDz/8MD755BOkpaUBACZMmIBHHnkEu3btwvvvv49z587ZLLwwuFiovLwcv/76KxwcHMwOWFqtFiaTCcHBwfD398c333yjTPvmm2/QtWtXVV+BYzQalatmHnjgATRv3hxTpkxB3759sXjxYvTr1w8ff/wx8vPzER0djU8++QQ6nc7GVVcPe3t75OfnY9++fQDMP9Ar/r19+3Z89913qh37k5eXhz179mDbtm0AgBUrVmDQoEH47bff4OzsjC+//BKbN2/Gpk2bkJqaiuDgYKXXhYA///wT48ePx/79+9GpUyd89tln+PDDD7Fo0SI899xzSEtLw5o1azBlyhTs2LEDeXl52L59O5YtW1ajwl9ZWZnyutrb21fqTczNzcXhw4dRt25dm9VoK9e+78vLy1G/fn1MmjQJhw8fRt++ffHzzz9j165d6NixI2JiYnDixAksX768Rv5fFRQUAADc3d0RFhaGpKQkPPHEE+jXrx8SExPx8MMPIygoCH/88QdWr16tXG102wlVyfbt2+X3338XEZHLly/L1q1bJTAwUAYOHKjM07FjR9FoNLJ27VrR6/UiIvLtt9+Ko6OjfPDBBzap2xoOHTokw4cPl4ceekheeuklERHR6/Xy008/yZ49e6SgoMBs/lOnTkmXLl3k9OnTtijX6k6dOiUbN26UdevWyfnz50VEJCYmRnr06CGHDx8WERGj0Sgmk0lZZvHixTJixAgpKSmxSc3/xoEDB6RVq1YSEhIiTZs2lf/85z/KtPLycmU/y8rKlPannnpKVq9efdtrrak+//xzCQ4OlmeeeUYOHjwoIiJ79uyRBg0amP1/ilx9LxUVFcnatWuVzxhbOHbsmLz++usyefJk2bZtm4iIfPzxx9K4cWP58MMPlflMJpPyN7B8+XIJDw+XwsJCm9R8u505c0ays7P/cXp6erq4u7tLs2bNlLaysjIxGo23o7x/5csvvxQ7Ozv5+OOPpbS0VA4dOiQvvfSS9OjRQ1q3bi2hoaHi4+MjjRs3lrffftvs8+52YXCpgrNnz8oTTzwhQUFBcvLkSRERKSkpkdTUVAkKCpJBgwZJQECADBw4UObNmydeXl7y5ZdfymeffSZ2dnaydu1aETF/w6vFwYMHpXHjxjJt2jR54403pE6dOrJ8+fJK85WXlyv/Xrp0qYSFhYlOp7udpVaLAwcOSLNmzaRnz57SunVr6dWrl+j1eklNTZWIiAgZMmSI/Prrr2bLrFixQpo3by5ZWVk2qtpyBw8elHvvvVeWLVsmxcXF8v7770t4eLhcuXJFmefvH8IrV66U5s2b2/SgWxNt2LBBevXqJU8++aRZeHFxcZHY2FhlvtLSUluVqDh48KDcc8898uSTT0pERIS4uLjI4cOHJT8/XyZOnCgdOnSQt99+22yZZcuWiZ+fnxw4cMBGVd9eJSUl0rFjRxk0aJAcOXLkH+dbtGiR9OzZs0a8rjdS8YXso48+knPnzonI1b9ZjUYjixcvNpt3+/btsm7dOrn//vslICBAjh49aouSGVxuVUXQ+P3336VNmzbSs2dP5QP6ypUrkpqaKn5+fvLoo48qy7z11ltib28vGo1GPvroI2U9agwtzZs3l6VLlypt8fHxMm/ePCkuLjbrTbj2G1iTJk0qHczV6ODBg9K0aVN59913RUQkOTlZHnjgASkuLhYRkc2bN8ujjz4q99xzjyQmJsqUKVNk+vTp4uvrK/v377dl6RY5duyYuLu7y4oVK5S248ePS2hoqGzdulXmz58vJ0+eVF7rr776ShITE6VJkyaq3N/qYjAYlH+vW7euUnjZu3evuLi4yIQJE2xVopmDBw+Kn5+fEkzOnDkj4eHhsmfPHuX5q6++Ki4uLtKnTx956KGHZMyYMXLfffdJZmamDSu//VJTU+W+++6TZ599VultrVDxvti7d69ERETI9u3bbVHiLfn7F7KePXsqn2uff/65aDQaeeuttyotp9PplPlsgcHlJv4eMuLi4uTuu++W/v37S0hIiPzxxx8icvW00d//gNPS0kSj0ci3336rrEttoeXixYvi4eEhgwcPFpH//X8MGDBAHn74YWnatKn06tVL5syZIyIiCxYskIiICGnTpk2tOIgdP35c3N3dJSkpSWnT6/XStWtXWblypcTFxclPP/0kmZmZsnz5chkyZIgMGjRIkpKSbtiVXFMZjUaJjY0VHx8f+eqrr5T2GTNmiJubm/Tv31/uuece8fb2lp07d8qxY8dk+vTpMmTIEFX2LFnbX3/9ZXYQv154GTFihBw7dkxERPbt2ycajUY59Worf/75pzRs2LBSHQ899JBMmDBB7r//fklISJC9e/fKH3/8IUuWLJGZM2fKli1b5NSpUzaq2jYqepV37Nghfn5+MmrUKLPP/ms/43v16iVhYWG3vcZbcb0vZN27d1dOg4uIbNy48R/Diy0xuNxARVd4WVmZXL58WaZNmyYeHh6Sl5cnpaWl8tBDD0lYWJgSXq4d3/D111+LnZ2dcr5fjaHl6NGj8sYbb8jUqVOlTp068tlnn4mIyNy5c+Xuu++WzZs3y1dffSUjR46U4OBgOXr0qJSWlkpqaqr89ddfNq7eOpYsWSI+Pj6yaNEiZSzHrFmzpH79+vLcc89Jly5dxNHRUVauXCkiooxpUqNz587J+fPnJS8vT5577jnp2bOnbNy4URYtWiRNmzY16xZ+4IEHpHfv3iLyv/fHna6srExCQ0OlZ8+esm/fPqX92vCyevVq6dy5syQmJiptmZmZNutyFxG5dOmSbNmyRR588EHp16+fUsvrr78uzs7OsnDhQpkyZYq4urrKoEGDbFZnTVBxTKj4LP/hhx/Ez89PRo4caRZeKl7zgoIC+e23325/oTdxoy9kH374oYwdO1a+++47Ebl6LNNqtbJw4UJblVsJg8s/qEjVRUVFEhYWJj169BCNRiOPP/64iIhs2rRJWrRoId27d5cHH3zQ7Lx+xUBctY5pqah31KhR8sorr4iIyPTp00Wj0cigQYOkbdu2cvz4cWX+kydPiouLi7z33ns2qtj6Dhw4IC+//LKIiCQmJkpISIgsWLBAZs+eLf7+/so3ZhGR2NhY8fX1lUuXLimvs5pebxGRrKws6d69u0yYMEH5sB05cqS0bdtW7rrrLmWAdUX38Lvvviu9evWyZck10sGDB6VDhw7y2GOPyc8//6y0XxteXn75ZfHz8zMbL2QrmZmZ8tBDD8np06dly5Yt0q9fP+nbt69MmDBBWrVqZXbQ3bJli2g0mlrRk2qJa0PLN998Izt37pSzZ8/Kr7/+Kn5+fpVOG9Xkz4CbfSELCQkRjUajfKavXbtW3NzcaszgawaXG7hy5YoEBQXJU089JXv27JG0tDRp3ry5dO3aVTp16iRff/21HDp0SAYOHChBQUGi0+nkl19+EY1GI2vWrBER9YWWa40cOVJefPFFEbl6TvO1114Te3t7WbJkiYhcHaRW8YHcv39/2bx5s81qtSa9Xi8tWrQQjUajjD+YPXu2tGnTRho0aKAMyKs4iG/ZskXuv/9+1fa2ZGVliY+PjyxevFguXLigtB87dkxGjhwpISEhsnHjRrNlXn75ZRk8eLAYDAbV/n1bS25urmzevFny8vJE5GpPZZs2bSqFl4qgkp6eLt27d7d5cKkY0zJ37lylLTk5WaKiokSr1UpKSoqIXO2RMRqNcvbsWbn//vuVCxPuJBVfZMvLy6Vr164ycuRIadmypfzf//2flJeXy7Zt28TPz0/GjBmjjGGqiar6hczHx0e5uMKWY1r+jsHlBlJTU6Vr165m3eBffvml1K1bVxm3InJ1LMv7778vBQUF8ssvv8iOHTtERJ2h5dqrgp599lmZPHmy8vzChQvy8ssvi0ajkfXr1yvty5Ytk8aNG8uJEyduZ6nVatmyZRIcHCx169aVoUOHiojI/PnzpVOnTrJgwQKzN/H8+fOlV69eqjxdUlRUJD169DAbeH2tM2fOyMiRI6Vnz57KYN2VK1dKo0aNasXA63/r4MGD0rp1a4mPj5eUlBTl/ZOdnS1t2rSR/v37S1pamtkyc+bMkYiICJteIn/kyBHx9vZWTnFee0n7li1bJDo6Wvr27Wv2Gr/99tsSEBAgZ8+eve311gQmk0mCg4MlPj5eSktLxcPDw+x989NPPylXitXELzGWfiGrCNg16VjG4HIDGzZskNatW4vBYFA+kDZv3iy9e/eW0tJSs8tBr/1DrbifSU16oW/F77//Lm+//bb8+eefIiLywgsvyKxZs8zmKSoqkmnTpolGo5GdO3fKxo0bxcfHR3755RdblFxtdu7cKb169ZKUlBTp0KGDcp+e2bNnS7du3ZRTaKtXrxZPT0/VXlVx8eJF6du3r9mpzkOHDskXX3whsbGxsmbNGvnuu+9k5MiREhUVJQMGDODVQ//fkSNHpEmTJpUuD674rDh69Ki0b99eIiMj5b333pPjx4/LokWLxM3Nzab/f1lZWeLt7S0uLi6ybNkypf3a8JKcnCz9+vWTnj17SlFRkWzYsEEaN25c697nVbFt2zaZOnWqXLlyRdq2bSuvvvqqMq2iZ2337t01ckxLhdryhYzB5QYOHDggderUkXfeeUfOnj0reXl54u/vL2PHjlXm+Xs4iY+PF29vb7l06dLtLvdf++mnn6R+/fryxhtvSElJibz22mvSqVMn2b9/f6XelISEBNFoNNKgQYNadRC79vV8/PHHpV+/fpKTkyPNmzdX3uiJiYny0EMPSY8ePcTHx0fV+3/mzBlxdXWV559/XlatWiXPP/+83HvvveLh4SGtW7dWxjUdOHBABg4cKM2aNWNPi1wNJ2PHjq0U7EWufompOAAcP35cnnrqKWnbtq106tRJHnzwQZv+vRw4cECaNm0qCQkJsmjRIunUqZPMnj1bmf738NK/f3/x8vISDw8PVf+dW8NPP/0kjz/+uPj7+5u97qWlpRIfH6+K/5/a8oWMweUmkpKSpF69etKyZUtp0aKFPPHEE8q0a+8eKnL1gObs7Czp6em2KNUqdu3aJb6+vrJs2TIZNmyYeHh4iK+vrzRv3lw6d+4sffr0kfnz58uiRYtk9erVlS4BV6OioiKz5xW9Z/v375fIyEjJzs6W3Nxc8fHxUcLLK6+8IgEBAbXiplubN28Wb29vadmypQQEBMiqVauU/crMzBSNRiPp6emSk5NTa+6C/G+Vl5dLVFSUcqpF5GrX+pw5cyQ0NFS6d++u3GW2pKRECgsL5cyZMza9GeOJEyfE09NT6SH666+/ZMaMGdKpUyezq5yuDS9fffWVDBw4sEaP26gO17vD7Q8//CAajUbGjx9v1r5ixQpp166d5Obm3q7yqqy2fSFjcLkFx44dk127dpkFkr+Hk9mzZ4tWqzW7DFKtdu7cKffee6+0bdtWVq1aJUVFRXLs2DF59913JS4uTiIjI6Vx48a14pLno0ePirOzs4wePbpSl39hYaF07dpVubdFbm6uNG/eXKKiokREzO53oHYXLlwQnU5ndpfPilMe0dHRkpGRYavSaqzx48eLs7OzPPXUUxIWFibOzs7SqVMn6d+/v0RHR4udnZ0kJyfbukwREcnJyZHnnntOXn/9dbP2v/76S15++eUbhhc19h7/GxWhpby8XBISEuSll15STpHFxcXJXXfdJW+++aasXbtW5s2bJ97e3jWyZ6I2fyFjcLHAzp07RaPRyKpVq0SkdoWWCj/99JM4OjrK8OHDr3sJXE2/jfWtquhR6NixowQGBkqnTp3k/fffV26m9v3330tgYKDs3btXRK5e+t2+fXtlHFBt8/dvmqtWrZIOHTqwp+U6ysvLZfr06RIdHS3Dhg2TH374QRnfVl5eLr1795ZJkybZuMqr0tLSpF27djJ8+HDZuXOn2bR/Ci/XXsJ9p6jomSgvL5eOHTvKo48+Kh07dpT27dvL22+/LcXFxTJ16lRp166dMr0mnjqt7V/IGFwstGTJEnF2dpY+ffqIs7NzrQotFX788Ufx8/OTN954Q/Lz821dTrVJT0+Xpk2byieffCITJ06Up59+Wtzc3GTRokWyfv16efbZZ+Xrr79W5r8TPtCzsrLk3XfflXvvvbdGdxnfLseOHZNXX31V+vfvLyNGjJD4+Hizy5mv94OTo0aNMhv8ams//vijPPDAAzJ48OB/DC/dunWTGTNm2KhC27r2isoFCxaY/QjmhAkTpFOnTsodZC9fvixFRUU1cuCqSO3/Qsbg8i8sXrxYGjRoUKu70X/44Qdp3ry5JCQkKD/AVRtt375dOnbsKJs2bZKioiL5+OOP5bHHHpPw8HDRaDTSpk0bs3uc1GY//vijREdHy4MPPlgjv03ebgcPHhQfHx+ZNm2aLFy4UCZMmCDt2rWTJk2ayO7du0Xk+j842axZM7MbNdYEu3fv/sfwcvr0aXnhhRckLCysVr/Xb8RkMsnMmTMlPDxcNmzYYDYtLi5OunbtKnPmzJGLFy/aqMJbV5u/kDG4/Et/P49YG23btk3atWunii7Ef2PHjh3SsmVL+eKLL0Tkapfpb7/9JoMGDZLw8HDlBmO1XXl5ueTm5tb61/tWnDp1Svz9/St1t1+6dEn69esn3t7eyuWv5eXl8tlnn8lrr71Woy8ZrwgvQ4YMkR9++MFsWl5e3h13n5ZrB66Wl5fLsGHDxNnZWV566aVKV40+++yz0qtXL9W8N2rrFzIGF7olNbVL1Nq+//57ue++++TLL79UBrOVl5er4hsWWd+6detk9OjRyvNrf49MRKRHjx7StWtXERH57bff5PXXX5enn366xv/g5K5du+TBBx+UESNGKL0rarvvlDVc28tQ8SW0vLxc4uLipHfv3rJ582az038iV28hoCa18QsZgwvR33z//ffSpk0b+eSTT2rNIGSyzMyZM+Xpp58WEfODXMV4iPT0dOnQoYNyA7/y8nKb38r/Vu3YsUMcHBxk06ZNti7FJq69jf+wYcOkV69eMmHCBLlw4YKUl5dLTEyMREVFyebNm2vknXCrorZ9IbMDEZnp3r073nzzTcyfPx8Gg8HW5dBtJiLKvx0cHJCRkQERgYODgzLNzu7qR2erVq3w559/Ijs7W2mvW7fu7S+6CkwmE0QEPXr0QO/evaHT6Wxd0m1nMplgZ2cHEUFYWBj0ej2GDRuGtWvXYuTIkTh16hTeeustNG3aFLNnz8bOnTttXfK/0r17d7z33nuYPn06vvrqK+j1etjZ2cHV1dXWpVmEwYXoOnr16oXvv/8e9evXt3UpdBsdO3YMM2fOxMWLFwEA4eHhcHZ2xtq1a1FeXg6NRgO52lON8vJyODg4oEuXLmjdurVtC68COzs7aDQaLF++HBkZGejSpYutS7rtKoJnSkoKAgIC8Omnn+KZZ57B7t27cfjwYUycOBE5OTlISkpC586d0apVKxtX/O/Vpi9kDC5E/6BevXq2LoFus5ycHLz22mtITEzElStX0LZtW/j5+WH58uVITk6GwWBQwou9vT02bNiAs2fPwtnZ2dalV8m5c+ewfPlybNmyBX5+frYu57aq6DUbMmQI/vvf/+Ly5csAAKPRiBYtWmDjxo04duwYRo0ahdzcXCxYsAC+vr62LNlqassXMo1c2y9KRHSHEhFoNBokJyejX79+GDduHJKSklBUVIQBAwbAYDAgODgYL7zwAvLz85GWlobXX38d33zzDQIDA21dfpVduXIFTk5Oti7jtikvL4e9vb3yPD09Hc8++yy8vb2xbt06NGrUSPkbOHjwIEaOHIkvvvgCPj4+NqyarofBhYjueBUHNYPBAEdHR/z888/o0qUL4uPj8eqrr6K4uBhJSUlITk7GqVOn0KRJE7i7u+P1119H+/btbV0+3UTF62symbB69Wrce++9uP/++3H8+HH069cPAwYMwOTJk+Hm5qaEl7KyMtSpU8fWpdN1MLgQ0R0rLy8P3t7eAGB2oFqxYgUmT54MnU6HcePGYfHixcoyR48eVU4dqO0U0Z2oYiCuyWRCly5dcNddd+Ho0aOIjo7GrFmzcObMGfTv3x8DBw7EhAkT4O7uDuB/PXBU83CMCxHdkS5fvownnngCffr0AQAltMybNw+JiYk4ffo0fvrpJ7z99tuYOHGicvVNq1at4OzszNCiEhVXD/Xt2xedOnXC1q1bER0djX379uGVV16Bl5cXvvjiC7z77rtYunQpTCYTADC01GAMLkR0xzEajXB2dsb48eNRUFCAgQMHAgCWLFmCZcuWITU1FU5OTujSpQu+/vprvPPOO3jxxRdx6dIlG1dOlkhLS4ObmxuWLl2Kffv2oWnTphg8eDAOHz6MqVOnwsvLCz/++COGDRumXHFENZeDrQsgIrqdfvvtN7zzzjto3bo1RowYAQcHB8yYMQOtWrWC0WhEeno6GjVqBKPRCDs7O/Tt2xfr16/Hs88+i1mzZqn+iow7QcXpoQr33XcfOnXqBJPJhA8++ABt2rRBTEwMTpw4gQ8++AANGzbE7NmzzQbvUs3FaElEd4ysrCz07dsXdevWRUFBARwcHBAREYHXXnsNzs7O8Pf3R6NGjZT5K8ZGPProozh16hQ8PDxsWD3diorAKSI4ffo08vPz0ahRI8TFxeGbb77B7t27ERMTAwDw9fVFbGwsJkyYwNCiIuxxIaI7QnZ2NiIiIjBjxgyMHj1aaddqtQgPDwcAzJgxAwMGDMBnn30GBwcHGI1GODhc/ZjkfX1qrmPHjuGPP/5AeHg4HBwcYDKZ0KNHD2i1Whw6dAgrVqxA3759Ua9ePWg0GuzatQtHjx7FsmXLsHPnTnh5edl6F6gK2ONCRLVeeXk53nvvPYwZM0YJLddeUFm3bl2l5+XYsWMYPHgwACihBeBgzZps/fr16Nu3L7755hsAQEREBO677z6sXbsWkyZNQnR0ND766CM0b94cjRs3xtixYzFnzhx8+umnvE+LCrHHhYhqPXt7e+zfvx/Dhw8HUPlSV6PRCK1Wi7CwMGg0Gjz//PMYMWIEVq1aZauS6RacP38ely9fxvjx46HRaPDEE0/gww8/RNu2bbFw4UIAwKRJk3DXXXfh6aefxldffYU1a9bg/PnzqF+/vnIpPKkLgwsR1WoigosXL+Ls2bO47777lLZrg0tFz8pnn32GiIgILF++HC1btrRJvXRrDh8+jDFjxqBFixaIjIzEyy+/jOLiYgwZMgSNGjXC+PHj4ePjA41Gg1GjRkGj0SA6OhobNmxQriIjdWJwIaJaTaPR4O6770aLFi3w7rvvIjAw0OweLBUh5uzZs1i/fj0efvhhRERE2LBiupmsrCxER0dj8uTJ6NOnD5o3bw4AmD9/Ptzc3DB9+nTs2bMHvr6+yhVGI0eORJ06ddCuXTsbV0//FoMLEdU6er0eWq3WrK1Xr15YvXo1tmzZgqioKGi1WrPLZr/++muYTCZe7lzDnT59GoMHD8aUKVOUq4OA/10CPXXqVFy8eBHDhw9HnTp10K9fP2VaxalCUjcOziWiWuXUqVN44oknYDQaAUC5E+qYMWPg4+ODuXPnYs2aNSguLlZCy7Jly5CQkIA333wTd999t81qp5s7fvw4goODERMTAxFRBllfe9+WuXPnYvz48RgyZAg++eQT3lSuluFvFRFRrVJYWIgmTZogMTER//3vfwGY/zLw6NGjceTIERQUFCAgIABOTk7Yv38/1q1bp8pfeb7TvPbaa0hOTkZaWlqlaRWn/UpLS1FYWIg333wTq1evxvHjx9mTVoswuBBRrVFxSmDWrFk4evQo3n33Xbi6ugIwDy+ZmZnYs2cPLl68iHbt2qFDhw68LFYlVqxYgS+//BLffvstTCYTNBpNpUvV33nnHZSUlGDSpEnIz8+Hp6enjaql6sAxLkRUa1ScEujVqxeSkpKwa9cuREVFQURgb2+vBJuOHTuiY8eONq6WLBEUFIRx48bh888/x+OPPw7gf6cDK17/P/74A/7+/gDA0FIL8cQfEamaXq9XxrOUl5cDAEJDQzFu3DgkJiaioKBA+UZ+vbEO7HRWl8DAQMTGxmL27NnYtGkTgKuva8Vr+/7772PTpk14+OGHbVkmVSMGFyJSrePHj6Nv375ITEzEqVOnzH5vpnfv3nBycsLx48cB/C/U/B3viKsudnZ2mDRpEoKDg/Gf//wHSUlJ+P333/Hrr7/ijTfewCuvvIINGzagWbNmti6VqgnHuBCRKv3222/4/PPPsXfvXly+fBk///wzXn31VXTt2hXBwcEAgIEDB+Kvv/7Cjz/+aONqydoKCwvx0UcfYfbs2bj77rvRsGFDeHh4YObMmbxXSy3H4EJEqpOVlYUHHngA77//Pvr374/8/HysWbMGGzZsAAB0794dM2fORFFREcaOHYthw4ZhyJAhNq6aqsOFCxdw5coVNGjQAI6Ojqhbt66tS6JqxuBCRKpy5MgR5VeeR40aZTYtOzsbBw8exJQpU9C8eXN4e3tDp9Ohbdu2SEhIsFHFRGRNDC5EpBqHDx9Gjx494OnpiYMHDwIAysrK4OjoaDZW5dKlS1i/fj1++OEHfPTRR2jQoAFyc3PRoEEDjmkhUjkGFyJShaysLERGRuLhhx/G119/jaioKKxcuRKA+T1arv03cPWHEwMDA5XLY4lI3RhciKjGO3ToEMLDwzFjxgyMHj0amzZtwtChQ/H4449fN7wAlX8BmohqBwYXIqrx9u/fjz179mDMmDEAAIPBgNTU1JuGFyKqfRhciEhVKu5+azKZsHnzZoYXojsMb0BHRKpScYdUOzs7REREYN26ddi4cSOee+45AGBoIarl+FtFRKRaFeFl/fr1iIyMhFarxVtvvWXrsoioGvFUERGpXnl5ObZt24Z7770XLVu2tHU5RFSNGFyIiIhINTjGhYiIiFSDwYWIiIhUg8GFiIiIVIPBhYiIiFSDwYWIiIhUg8GFiIiIVIPBhYiIiFSDwYWIiIhUg8GFiIiIVIPBhYiIiFSDwYWIiIhUg8GFiIiIVIPBhYiIiFSDwYWIiIhU4/8BYGpzeMeoF1UAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["year = ['2016', '2017', '2018', '2019', '2020', '2021', '2022']\n","index = np.arange(7)\n","x = range(len(year))\n","print(x)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cpD1EVVhF_EB","executionInfo":{"status":"ok","timestamp":1708157089459,"user_tz":-540,"elapsed":7,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"579183a9-a4de-40b2-ab6d-40face7e29ab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["range(0, 7)\n"]}]},{"cell_type":"code","source":["# 4) 연도별 각 채널의 시청률 변화를 확인하고 가장 큰 변화를 보인 채널 출력하기\n","# 연도별의 변화량 차이 확인 후 변화량 컬럼 추가\n","df['변화량'] = df[df.columns[1:]].diff().abs().sum(axis=1)\n","# df\n","# 연도별 각 채널의 시청률 변화\n","df[df.columns[1:]].diff().abs().sum(axis=0)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jvrWSMYAAoHt","executionInfo":{"status":"ok","timestamp":1708158142297,"user_tz":-540,"elapsed":306,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"412a3e83-b13f-45de-8ad9-4cbc6dff3d9b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KBS           9.485\n","MBC           9.241\n","SBS           2.982\n","TV CHOSUN     2.526\n","JTBC          3.295\n","Channel A     4.577\n","MBN           3.016\n","변화량          41.237\n","dtype: float64"]},"metadata":{},"execution_count":250}]},{"cell_type":"code","source":["#편차\n","df\n","df1 = df.std()\n","df1\n","\n","#채널 전체 변화량\n","df[df.columns[1:]].diff().abs().sum(axis=0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mi5LZQSJAvIf","executionInfo":{"status":"ok","timestamp":1708158278517,"user_tz":-540,"elapsed":322,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"70b00ea8-221e-4a36-9b5f-1afca48bef35"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KBS           9.485\n","MBC           9.241\n","SBS           2.982\n","TV CHOSUN     2.526\n","JTBC          3.295\n","Channel A     4.577\n","MBN           3.016\n","변화량          41.237\n","dtype: float64"]},"metadata":{},"execution_count":255}]},{"cell_type":"code","source":[],"metadata":{"id":"rI5AsmVVAvGS"},"execution_count":null,"outputs":[]}]}