{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1vrnt7yNmb7gBOYeyhSxd_s8_7YDx5D3g","timestamp":1707041756344}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#1. AI에서 많이 사용되는 메소드"],"metadata":{"id":"qU0zlEXHghyJ"}},{"cell_type":"markdown","source":["##1) 데이터 조작"],"metadata":{"id":"dd2GoWHxgmXE"}},{"cell_type":"code","source":["import pandas as pd\n","# \tA\tB\tC\n","# 0\t1\t10\t100\n","# 1\t2\t20\t200\n","# 2\t3\t30\t300\n","# 3\t4\t40\t400\n","# 4\t5\t50\t500\n","# 5\t6\t60\t600\n","# 6\t7\t70\t700\n","\n","data = {'A':[1, 2, 3, 4, 5, 6, 7], 'B':[10, 20, 30, 40, 50, 60, 70],\n","        'C':[100, 200, 300, 400, 500, 600, 700]}\n","df = pd.DataFrame(data)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"L_cR2vPcgxf7","executionInfo":{"status":"ok","timestamp":1707023287616,"user_tz":-540,"elapsed":11,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"1a193ad1-86c9-4109-e443-5952684567fe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   A   B    C\n","0  1  10  100\n","1  2  20  200\n","2  3  30  300\n","3  4  40  400\n","4  5  50  500\n","5  6  60  600\n","6  7  70  700"],"text/html":["\n","  <div id=\"df-026fe135-965c-4fb5-bbfd-93b385a5aab0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>40</td>\n","      <td>400</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>50</td>\n","      <td>500</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>60</td>\n","      <td>600</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>70</td>\n","      <td>700</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-026fe135-965c-4fb5-bbfd-93b385a5aab0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-026fe135-965c-4fb5-bbfd-93b385a5aab0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-026fe135-965c-4fb5-bbfd-93b385a5aab0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e7612de3-5485-4613-a2ac-fa99c5c9ef8d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7612de3-5485-4613-a2ac-fa99c5c9ef8d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e7612de3-5485-4613-a2ac-fa99c5c9ef8d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c2364b02-0dbc-4947-9a11-fe62227dd7c5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c2364b02-0dbc-4947-9a11-fe62227dd7c5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":1}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":323},"id":"DDvUYwGqe3ct","executionInfo":{"status":"ok","timestamp":1707023665747,"user_tz":-540,"elapsed":333,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"7d99d329-00bf-4519-92c2-c66080f4e705"},"outputs":[{"output_type":"stream","name":"stdout","text":["======apply======\n","======map======\n","{10: 'Low', 20: 'Low', 30: 'Low', 40: 'Medium', 50: 'Medium', 60: 'High', 70: 'High'} <class 'dict'>\n"]},{"output_type":"execute_result","data":{"text/plain":["   A   B    C  a_plus b_mapping\n","0  1  10  100       3       Low\n","1  2  20  200       4       Low\n","2  3  30  300       5       Low\n","3  4  40  400       6    Medium\n","4  5  50  500       7    Medium\n","5  6  60  600       8      High\n","6  7  70  700       9      High"],"text/html":["\n","  <div id=\"df-3fce4d0a-fcf3-4f9b-8b01-c02fc6f48dab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>a_plus</th>\n","      <th>b_mapping</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>100</td>\n","      <td>3</td>\n","      <td>Low</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>200</td>\n","      <td>4</td>\n","      <td>Low</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>300</td>\n","      <td>5</td>\n","      <td>Low</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>40</td>\n","      <td>400</td>\n","      <td>6</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>50</td>\n","      <td>500</td>\n","      <td>7</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>60</td>\n","      <td>600</td>\n","      <td>8</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>70</td>\n","      <td>700</td>\n","      <td>9</td>\n","      <td>High</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3fce4d0a-fcf3-4f9b-8b01-c02fc6f48dab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3fce4d0a-fcf3-4f9b-8b01-c02fc6f48dab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3fce4d0a-fcf3-4f9b-8b01-c02fc6f48dab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2f02cb26-e326-4670-995d-743b90310600\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2f02cb26-e326-4670-995d-743b90310600')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2f02cb26-e326-4670-995d-743b90310600 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_dc5c937c-434c-4106-982c-f0e12d8d07b0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_dc5c937c-434c-4106-982c-f0e12d8d07b0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}],"source":["print(\"======apply======\")\n","#각 열의 값에 함수를 적용하고 새로운 열을 생성\n","df['a_plus'] = df['A'].apply(lambda x : x + 2)\n","\n","print(\"======map======\")\n","#B열를 딕셔너리를 이용하여 새로운 열 매핑\n","mapping = {10 : 'Low', 20 : 'Low', 30 : 'Low', 40 : 'Medium', 50 : 'Medium',\n","           60 : 'High', 70 : 'High'}\n","print(mapping, type(mapping))\n","df['b_mapping'] = df['B'].map(mapping)\n"]},{"cell_type":"code","source":["print(\"======value_counts()=====\")\n","#열의 고유한 값의 빈도수 계산\n","print(df['b_mapping'].value_counts())\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"otBPt09xirSP","executionInfo":{"status":"ok","timestamp":1707023793900,"user_tz":-540,"elapsed":359,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"752cc261-d8f8-4f3a-f38b-ae34280dc1b1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["======value_counts()=====\n","Low       3\n","Medium    2\n","High      2\n","Name: b_mapping, dtype: int64\n"]},{"output_type":"execute_result","data":{"text/plain":["   A   B    C  a_plus b_mapping\n","0  1  10  100       3       Low\n","1  2  20  200       4       Low\n","2  3  30  300       5       Low\n","3  4  40  400       6    Medium\n","4  5  50  500       7    Medium\n","5  6  60  600       8      High\n","6  7  70  700       9      High"],"text/html":["\n","  <div id=\"df-6db05f17-fc25-485a-b5b1-dc1f3d5c3fe6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>a_plus</th>\n","      <th>b_mapping</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>100</td>\n","      <td>3</td>\n","      <td>Low</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>200</td>\n","      <td>4</td>\n","      <td>Low</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>300</td>\n","      <td>5</td>\n","      <td>Low</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>40</td>\n","      <td>400</td>\n","      <td>6</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>50</td>\n","      <td>500</td>\n","      <td>7</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>60</td>\n","      <td>600</td>\n","      <td>8</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>70</td>\n","      <td>700</td>\n","      <td>9</td>\n","      <td>High</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6db05f17-fc25-485a-b5b1-dc1f3d5c3fe6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6db05f17-fc25-485a-b5b1-dc1f3d5c3fe6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6db05f17-fc25-485a-b5b1-dc1f3d5c3fe6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ed91a84d-0fde-4db1-8556-599390238d7f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ed91a84d-0fde-4db1-8556-599390238d7f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ed91a84d-0fde-4db1-8556-599390238d7f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e6f8e977-a98d-480d-be29-35d9074be114\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e6f8e977-a98d-480d-be29-35d9074be114 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["print(\"=======cut()=======\")\n","#연속형 데이터를 구간으로 나누는데 사용\n","bins = [0, 30,200, 500, 1000] #구간설정\n","labels = ['낮음', '중간', '높음', '아주높음'] #레이블설정\n","#0 < x <= 30 : \"낮음\"\n","#30 < x <= 200 : '중간'\n","#200 < x <= 500 : '높음'\n","#500 < x <= 1000 : '아주높음'\n","\n","df['c_cut'] = pd.cut(df['C'], bins = bins, labels=labels)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"jrY7JussjMCY","executionInfo":{"status":"ok","timestamp":1707024050255,"user_tz":-540,"elapsed":337,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"5c8382fe-6d89-45e7-95b2-01c6006e984b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["=======cut()=======\n"]},{"output_type":"execute_result","data":{"text/plain":["   A   B    C  a_plus b_mapping c_cut\n","0  1  10  100       3       Low    중간\n","1  2  20  200       4       Low    중간\n","2  3  30  300       5       Low    높음\n","3  4  40  400       6    Medium    높음\n","4  5  50  500       7    Medium    높음\n","5  6  60  600       8      High  아주높음\n","6  7  70  700       9      High  아주높음"],"text/html":["\n","  <div id=\"df-afce7a8d-b1cc-457f-b41e-590931372aab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>a_plus</th>\n","      <th>b_mapping</th>\n","      <th>c_cut</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>100</td>\n","      <td>3</td>\n","      <td>Low</td>\n","      <td>중간</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>200</td>\n","      <td>4</td>\n","      <td>Low</td>\n","      <td>중간</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>300</td>\n","      <td>5</td>\n","      <td>Low</td>\n","      <td>높음</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>40</td>\n","      <td>400</td>\n","      <td>6</td>\n","      <td>Medium</td>\n","      <td>높음</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>50</td>\n","      <td>500</td>\n","      <td>7</td>\n","      <td>Medium</td>\n","      <td>높음</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>60</td>\n","      <td>600</td>\n","      <td>8</td>\n","      <td>High</td>\n","      <td>아주높음</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>70</td>\n","      <td>700</td>\n","      <td>9</td>\n","      <td>High</td>\n","      <td>아주높음</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-afce7a8d-b1cc-457f-b41e-590931372aab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-afce7a8d-b1cc-457f-b41e-590931372aab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-afce7a8d-b1cc-457f-b41e-590931372aab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0fac1715-eca7-496e-8d99-2417a17bf61f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0fac1715-eca7-496e-8d99-2417a17bf61f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0fac1715-eca7-496e-8d99-2417a17bf61f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_032d1ea2-efd0-4ead-b35a-7f73008fe0c6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_032d1ea2-efd0-4ead-b35a-7f73008fe0c6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["print(\"=====astype()======\")\n","#열의 데이터 타입을 변경\n","df.info()\n","\n","#열 'A'의 데이터 타입을 문자열로 변경\n","# df['A'] = df['A'].astype(str)\n","df.info() #object\n","df['A'] = df['A'].astype(int)\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6MwKIqGlkfZ8","executionInfo":{"status":"ok","timestamp":1707024765814,"user_tz":-540,"elapsed":6,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"fc038d0a-4b19-4b7a-acaa-40b34b8a7c5c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["=====astype()======\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 7 entries, 0 to 6\n","Data columns (total 6 columns):\n"," #   Column     Non-Null Count  Dtype   \n","---  ------     --------------  -----   \n"," 0   A          7 non-null      int64   \n"," 1   B          7 non-null      int64   \n"," 2   C          7 non-null      int64   \n"," 3   a_plus     7 non-null      int64   \n"," 4   b_mapping  7 non-null      object  \n"," 5   c_cut      7 non-null      category\n","dtypes: category(1), int64(4), object(1)\n","memory usage: 619.0+ bytes\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 7 entries, 0 to 6\n","Data columns (total 6 columns):\n"," #   Column     Non-Null Count  Dtype   \n","---  ------     --------------  -----   \n"," 0   A          7 non-null      int64   \n"," 1   B          7 non-null      int64   \n"," 2   C          7 non-null      int64   \n"," 3   a_plus     7 non-null      int64   \n"," 4   b_mapping  7 non-null      object  \n"," 5   c_cut      7 non-null      category\n","dtypes: category(1), int64(4), object(1)\n","memory usage: 619.0+ bytes\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 7 entries, 0 to 6\n","Data columns (total 6 columns):\n"," #   Column     Non-Null Count  Dtype   \n","---  ------     --------------  -----   \n"," 0   A          7 non-null      int64   \n"," 1   B          7 non-null      int64   \n"," 2   C          7 non-null      int64   \n"," 3   a_plus     7 non-null      int64   \n"," 4   b_mapping  7 non-null      object  \n"," 5   c_cut      7 non-null      category\n","dtypes: category(1), int64(4), object(1)\n","memory usage: 619.0+ bytes\n"]}]},{"cell_type":"markdown","source":["##2) 그룹화와 집계"],"metadata":{"id":"URl28W6Rk_cx"}},{"cell_type":"code","source":["print(\"=====agg()====\")\n","#그룹화된 데이터에 대한 집계함수를 적용함\n","#b_mapping 열을 기준으로 그룹화하고 각 그룹에서 'A'열의 평균과 'C'열의 합계구하기\n","grouped = df.groupby('b_mapping')['A'].agg('mean')\n","print(grouped, type(grouped))\n","grouped = df.groupby('b_mapping').agg({'A':'mean', 'C':'sum'})\n","print(grouped, type(grouped))\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"i-XILhallA-F","executionInfo":{"status":"ok","timestamp":1707024905382,"user_tz":-540,"elapsed":373,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"546d6e75-8304-4419-9f04-dd9eac3fdda8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["=====agg()====\n","b_mapping\n","High      6.5\n","Low       2.0\n","Medium    4.5\n","Name: A, dtype: float64 <class 'pandas.core.series.Series'>\n","             A     C\n","b_mapping           \n","High       6.5  1300\n","Low        2.0   600\n","Medium     4.5   900 <class 'pandas.core.frame.DataFrame'>\n"]},{"output_type":"execute_result","data":{"text/plain":["   A   B    C  a_plus b_mapping c_cut\n","0  1  10  100       3       Low    중간\n","1  2  20  200       4       Low    중간\n","2  3  30  300       5       Low    높음\n","3  4  40  400       6    Medium    높음\n","4  5  50  500       7    Medium    높음\n","5  6  60  600       8      High  아주높음\n","6  7  70  700       9      High  아주높음"],"text/html":["\n","  <div id=\"df-62540b15-f1ef-4bad-933e-a0c34865e7db\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>a_plus</th>\n","      <th>b_mapping</th>\n","      <th>c_cut</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>100</td>\n","      <td>3</td>\n","      <td>Low</td>\n","      <td>중간</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>200</td>\n","      <td>4</td>\n","      <td>Low</td>\n","      <td>중간</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>300</td>\n","      <td>5</td>\n","      <td>Low</td>\n","      <td>높음</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>40</td>\n","      <td>400</td>\n","      <td>6</td>\n","      <td>Medium</td>\n","      <td>높음</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>50</td>\n","      <td>500</td>\n","      <td>7</td>\n","      <td>Medium</td>\n","      <td>높음</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>60</td>\n","      <td>600</td>\n","      <td>8</td>\n","      <td>High</td>\n","      <td>아주높음</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>70</td>\n","      <td>700</td>\n","      <td>9</td>\n","      <td>High</td>\n","      <td>아주높음</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-62540b15-f1ef-4bad-933e-a0c34865e7db')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-62540b15-f1ef-4bad-933e-a0c34865e7db button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-62540b15-f1ef-4bad-933e-a0c34865e7db');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5c4f2d7b-6938-4159-83fa-6859fe22c29e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c4f2d7b-6938-4159-83fa-6859fe22c29e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5c4f2d7b-6938-4159-83fa-6859fe22c29e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0b18db82-eade-4594-8be6-575a3f099179\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0b18db82-eade-4594-8be6-575a3f099179 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# pivot_table()\n","#b_mapping 열 -> 인덱스, a_plus 열 -> 값으로 하는 피벗테이블 생성\n","pivot_result = df.pivot_table(index = 'b_mapping', values = 'a_plus', aggfunc = 'mean')\n","#aggfunc = 'mean' 기본값으로 설정\n","# sum, min, max 등의 집계함수 사용가능\n","print(pivot_result, type(pivot_result))\n","pivot_result\n","\n","# df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"Bgidn-6Ynlk1","executionInfo":{"status":"ok","timestamp":1707025250055,"user_tz":-540,"elapsed":349,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"e573dd5a-10d3-4197-8ae1-4c57ff51e7f0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["           a_plus\n","b_mapping        \n","High          8.5\n","Low           4.0\n","Medium        6.5 <class 'pandas.core.frame.DataFrame'>\n"]},{"output_type":"execute_result","data":{"text/plain":["           a_plus\n","b_mapping        \n","High          8.5\n","Low           4.0\n","Medium        6.5"],"text/html":["\n","  <div id=\"df-acfc90dd-144b-4ade-82a9-713cff0f87bb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a_plus</th>\n","    </tr>\n","    <tr>\n","      <th>b_mapping</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>High</th>\n","      <td>8.5</td>\n","    </tr>\n","    <tr>\n","      <th>Low</th>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>Medium</th>\n","      <td>6.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-acfc90dd-144b-4ade-82a9-713cff0f87bb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-acfc90dd-144b-4ade-82a9-713cff0f87bb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-acfc90dd-144b-4ade-82a9-713cff0f87bb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a0da231e-1ffd-4eb7-9265-c48b1f87521c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0da231e-1ffd-4eb7-9265-c48b1f87521c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a0da231e-1ffd-4eb7-9265-c48b1f87521c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_548bb1fa-055b-4905-9c06-1f6de1ea8a84\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('pivot_result')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_548bb1fa-055b-4905-9c06-1f6de1ea8a84 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('pivot_result');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["print(\"======groupby()======\")\n","\n","result = df.groupby('c_cut')['B'].agg(['max', 'min', 'mean', 'sum'])\n","print(result)\n","# result = df.groupby('c_cut').value_counts()\n","# result\n","# df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U5kNY-ZZo4e1","executionInfo":{"status":"ok","timestamp":1707025574138,"user_tz":-540,"elapsed":6,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"66993cca-b800-4c15-d084-1436968380c5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["======groupby()======\n","        max   min  mean  sum\n","c_cut                       \n","낮음      NaN   NaN   NaN    0\n","중간     20.0  10.0  15.0   30\n","높음     50.0  30.0  40.0  120\n","아주높음   70.0  60.0  65.0  130\n"]}]},{"cell_type":"markdown","source":["##+) 데이터 처리"],"metadata":{"id":"AqbiP8Ngp3gH"}},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"2-ggZEgVqGBz","executionInfo":{"status":"ok","timestamp":1707025656832,"user_tz":-540,"elapsed":5,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"3e9a1c44-0c5a-4ee7-8773-ab4738d74e69"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   A   B    C  a_plus b_mapping c_cut\n","0  1  10  100       3       Low    중간\n","1  2  20  200       4       Low    중간\n","2  3  30  300       5       Low    높음\n","3  4  40  400       6    Medium    높음\n","4  5  50  500       7    Medium    높음\n","5  6  60  600       8      High  아주높음\n","6  7  70  700       9      High  아주높음"],"text/html":["\n","  <div id=\"df-484f90ac-2959-4938-8b7a-f96a716aeac2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>a_plus</th>\n","      <th>b_mapping</th>\n","      <th>c_cut</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>100</td>\n","      <td>3</td>\n","      <td>Low</td>\n","      <td>중간</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>200</td>\n","      <td>4</td>\n","      <td>Low</td>\n","      <td>중간</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>300</td>\n","      <td>5</td>\n","      <td>Low</td>\n","      <td>높음</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>40</td>\n","      <td>400</td>\n","      <td>6</td>\n","      <td>Medium</td>\n","      <td>높음</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>50</td>\n","      <td>500</td>\n","      <td>7</td>\n","      <td>Medium</td>\n","      <td>높음</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>60</td>\n","      <td>600</td>\n","      <td>8</td>\n","      <td>High</td>\n","      <td>아주높음</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>70</td>\n","      <td>700</td>\n","      <td>9</td>\n","      <td>High</td>\n","      <td>아주높음</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-484f90ac-2959-4938-8b7a-f96a716aeac2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-484f90ac-2959-4938-8b7a-f96a716aeac2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-484f90ac-2959-4938-8b7a-f96a716aeac2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-88e7f055-1118-4163-ba0a-981fc15b57c5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88e7f055-1118-4163-ba0a-981fc15b57c5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-88e7f055-1118-4163-ba0a-981fc15b57c5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_999545cf-0034-497b-888e-d6d8742632e6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_999545cf-0034-497b-888e-d6d8742632e6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["print(\"=======drop() 열 제거=====\")\n","df1 = df.drop(columns = ['A']) #열제거\n","\n","print(\"========drop() 행제거=========\")\n","#2행만 제거\n","df1 = df.drop(2)\n","\n","#3행~5행 제거\n","df1 = df.drop(range(3, 6))\n","\n","df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"6T_M85eRp43G","executionInfo":{"status":"ok","timestamp":1707025802200,"user_tz":-540,"elapsed":3,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"abed0aa1-09be-48ae-f2d9-5b45778279d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["=======drop() 열 제거=====\n","========drop() 행제거=========\n"]},{"output_type":"execute_result","data":{"text/plain":["   A   B    C  a_plus b_mapping c_cut\n","0  1  10  100       3       Low    중간\n","1  2  20  200       4       Low    중간\n","2  3  30  300       5       Low    높음\n","6  7  70  700       9      High  아주높음"],"text/html":["\n","  <div id=\"df-77dc672c-b783-4062-bd1a-a4d8eff02bb6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>a_plus</th>\n","      <th>b_mapping</th>\n","      <th>c_cut</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>100</td>\n","      <td>3</td>\n","      <td>Low</td>\n","      <td>중간</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>200</td>\n","      <td>4</td>\n","      <td>Low</td>\n","      <td>중간</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>300</td>\n","      <td>5</td>\n","      <td>Low</td>\n","      <td>높음</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>70</td>\n","      <td>700</td>\n","      <td>9</td>\n","      <td>High</td>\n","      <td>아주높음</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77dc672c-b783-4062-bd1a-a4d8eff02bb6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-77dc672c-b783-4062-bd1a-a4d8eff02bb6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-77dc672c-b783-4062-bd1a-a4d8eff02bb6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a8e07646-9232-490f-ae35-8b8cd80fccbf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8e07646-9232-490f-ae35-8b8cd80fccbf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a8e07646-9232-490f-ae35-8b8cd80fccbf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8ea93385-ec93-4773-b72a-5fa55316dd26\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8ea93385-ec93-4773-b72a-5fa55316dd26 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["df = df.groupby('A').sum()\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":356},"id":"-QZu33RYq2lb","executionInfo":{"status":"ok","timestamp":1707025895874,"user_tz":-540,"elapsed":6,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"81dc2f8a-9100-4e8e-d211-6a3ca0135d9d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-59-499ec1458786>:1: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  df = df.groupby('A').sum()\n"]},{"output_type":"execute_result","data":{"text/plain":["    B    C  a_plus\n","A                 \n","1  10  100       3\n","2  20  200       4\n","3  30  300       5\n","4  40  400       6\n","5  50  500       7\n","6  60  600       8\n","7  70  700       9"],"text/html":["\n","  <div id=\"df-db444267-a3e5-47a2-bc38-aa13b9fe1679\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>a_plus</th>\n","    </tr>\n","    <tr>\n","      <th>A</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>10</td>\n","      <td>100</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>200</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30</td>\n","      <td>300</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>40</td>\n","      <td>400</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>50</td>\n","      <td>500</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>60</td>\n","      <td>600</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>70</td>\n","      <td>700</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db444267-a3e5-47a2-bc38-aa13b9fe1679')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-db444267-a3e5-47a2-bc38-aa13b9fe1679 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-db444267-a3e5-47a2-bc38-aa13b9fe1679');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-63f427a8-1259-4d17-813a-faf4a02a772e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-63f427a8-1259-4d17-813a-faf4a02a772e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-63f427a8-1259-4d17-813a-faf4a02a772e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bb6bb56e-c294-4d1f-af52-5aa74e3ba2c4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bb6bb56e-c294-4d1f-af52-5aa74e3ba2c4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["df = pd.DataFrame({'category':['A', 'B', 'C', 'B', 'B', 'A', 'C'],\n","                   'value':[10, 20, 30, 20, 10, 10, 30]})\n","df\n","\n","#groupby, value_counts 사용\n","df1 = df.groupby('category')['value'].value_counts()\n","#멀티 인덱스 형식으로 표시\n","print(df1, type(df1))\n","print(df1.index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LHu4gaULuXFY","executionInfo":{"status":"ok","timestamp":1707027030490,"user_tz":-540,"elapsed":5,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"a4b3a3df-a50b-49b8-88ae-659d52410f17"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["category  value\n","A         10       2\n","B         20       2\n","          10       1\n","C         30       2\n","Name: value, dtype: int64 <class 'pandas.core.series.Series'>\n","MultiIndex([('A', 10),\n","            ('B', 20),\n","            ('B', 10),\n","            ('C', 30)],\n","           names=['category', 'value'])\n"]}]},{"cell_type":"code","source":["#drop 행 제거(슬라이싱 이용한 행 제거)\n","df.drop(df.index[2:5])\n","df\n","\n","#value가 20보다 작은 값 제거\n","# df.drop([0, 4, 5])\n","df[df['value'] >= 20]\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"8ozgEFPFvkce","executionInfo":{"status":"ok","timestamp":1707027343776,"user_tz":-540,"elapsed":11,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"4f12c946-3c99-4013-f8c0-679c08e7d42d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  category  value\n","0        A     10\n","1        B     20\n","2        C     30\n","3        B     20\n","4        B     10\n","5        A     10\n","6        C     30"],"text/html":["\n","  <div id=\"df-0d5d99f4-41c8-4fe8-a50b-2d4f6d888964\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>category</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>B</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>C</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>B</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>B</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>A</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>C</td>\n","      <td>30</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d5d99f4-41c8-4fe8-a50b-2d4f6d888964')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0d5d99f4-41c8-4fe8-a50b-2d4f6d888964 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0d5d99f4-41c8-4fe8-a50b-2d4f6d888964');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4fe7baec-aed1-4f25-92c2-841d2c73e489\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4fe7baec-aed1-4f25-92c2-841d2c73e489')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4fe7baec-aed1-4f25-92c2-841d2c73e489 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9871627c-55cb-4660-9279-597d8e54927d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9871627c-55cb-4660-9279-597d8e54927d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":84}]},{"cell_type":"markdown","source":["##4) 결측값처리"],"metadata":{"id":"9x9ui7FZx8Tz"}},{"cell_type":"code","source":["import numpy as np\n","data = {'A':[1, 2, 3, 4, np.nan, 6, 7, 8],\n","        'B':[1, np.nan, 3, 4, np.nan, 6, 7, 8],\n","        'C':[np.nan, 5, 6, 7, 8, 9, 10, np.nan]}\n","\n","df = pd.DataFrame(data)\n","df\n","\n","df.info()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0WnKrKBAwy6F","executionInfo":{"status":"ok","timestamp":1707027524764,"user_tz":-540,"elapsed":3,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"c6111555-0c91-4759-e310-c0a235767ec9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8 entries, 0 to 7\n","Data columns (total 3 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   A       7 non-null      float64\n"," 1   B       6 non-null      float64\n"," 2   C       6 non-null      float64\n","dtypes: float64(3)\n","memory usage: 320.0 bytes\n"]}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"bOxp46lHyNy7","executionInfo":{"status":"ok","timestamp":1707027784939,"user_tz":-540,"elapsed":8,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"cd27b16e-70b0-4ea1-a80e-69789b974883"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     A    B     C\n","0  1.0  1.0   NaN\n","1  2.0  NaN   5.0\n","2  3.0  3.0   6.0\n","3  4.0  4.0   7.0\n","4  NaN  NaN   8.0\n","5  6.0  6.0   9.0\n","6  7.0  7.0  10.0\n","7  8.0  8.0   NaN"],"text/html":["\n","  <div id=\"df-8f496d49-a48e-4339-8169-76d684e62e47\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6.0</td>\n","      <td>6.0</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7.0</td>\n","      <td>7.0</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f496d49-a48e-4339-8169-76d684e62e47')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8f496d49-a48e-4339-8169-76d684e62e47 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8f496d49-a48e-4339-8169-76d684e62e47');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-889f7d4f-6dc1-49c1-95db-64ef2e09c690\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-889f7d4f-6dc1-49c1-95db-64ef2e09c690')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-889f7d4f-6dc1-49c1-95db-64ef2e09c690 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_da3a40bb-41f2-4f5d-bfab-99defdbc102e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_da3a40bb-41f2-4f5d-bfab-99defdbc102e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["print(\"====결측값 채우기 fillna()=====\")\n","df1 = df.fillna(0)\n","df2 = df['A'].fillna(df['A'].mean())\n","\n","print(\"=====결측값을 포함한 행제거 dropna()======\")\n","df3 = df.dropna()\n","df4 = df.dropna(axis = 1)\n","df4.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y-GgOppkyDBE","executionInfo":{"status":"ok","timestamp":1707028166418,"user_tz":-540,"elapsed":6,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"fbaf3ea7-7141-4094-b0e5-a87ebbb8aecb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["====결측값 채우기 fillna()=====\n","=====결측값을 포함한 행제거 dropna()======\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8 entries, 0 to 7\n","Empty DataFrame\n"]}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"tmB56nK3zAWg","executionInfo":{"status":"ok","timestamp":1707027991753,"user_tz":-540,"elapsed":8,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"b5b080f0-1228-41a0-b2f9-9280aa74e7f4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     A    B     C\n","0  1.0  1.0   NaN\n","1  2.0  NaN   5.0\n","2  3.0  3.0   6.0\n","3  4.0  4.0   7.0\n","4  NaN  NaN   8.0\n","5  6.0  6.0   9.0\n","6  7.0  7.0  10.0\n","7  8.0  8.0   NaN"],"text/html":["\n","  <div id=\"df-d1fca028-cd28-44c0-9e3d-b047278c5325\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6.0</td>\n","      <td>6.0</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7.0</td>\n","      <td>7.0</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d1fca028-cd28-44c0-9e3d-b047278c5325')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d1fca028-cd28-44c0-9e3d-b047278c5325 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d1fca028-cd28-44c0-9e3d-b047278c5325');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7fdf49d8-87e7-423d-9fcc-e1c85b9207f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7fdf49d8-87e7-423d-9fcc-e1c85b9207f7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7fdf49d8-87e7-423d-9fcc-e1c85b9207f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8fb63d9f-598e-4c27-8d2a-17dee8fb42f4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8fb63d9f-598e-4c27-8d2a-17dee8fb42f4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["print(\"======isna(), isnull()=======\")\n","df.isna() #결과를 True, False\n","\n","df.isna().sum()\n","\n","print(\"======notna(), notnull()========\")\n","df.notna()\n","df.notnull()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":336},"id":"6WTifvs2y-o-","executionInfo":{"status":"ok","timestamp":1707028103235,"user_tz":-540,"elapsed":8,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"4629c8e2-0581-49d6-9f59-2543abcce0c8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["======isna(), isnull()=======\n","======notna(), notnull()========\n"]},{"output_type":"execute_result","data":{"text/plain":["       A      B      C\n","0   True   True  False\n","1   True  False   True\n","2   True   True   True\n","3   True   True   True\n","4  False  False   True\n","5   True   True   True\n","6   True   True   True\n","7   True   True  False"],"text/html":["\n","  <div id=\"df-fea5f2a4-fe68-4951-9415-981d60c3b6ad\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fea5f2a4-fe68-4951-9415-981d60c3b6ad')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fea5f2a4-fe68-4951-9415-981d60c3b6ad button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fea5f2a4-fe68-4951-9415-981d60c3b6ad');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b69c79a7-7931-4c55-9ff0-ebd442fcf997\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b69c79a7-7931-4c55-9ff0-ebd442fcf997')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b69c79a7-7931-4c55-9ff0-ebd442fcf997 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":102}]},{"cell_type":"markdown","source":["##4) 시계열 데이터 처리"],"metadata":{"id":"V4qcTvOz0rea"}},{"cell_type":"code","source":["#pd.date_range() 날짜인덱스 생성하고 데이터프레임 만들수있음\n","#날짜 범위 생성함수\n","\n","date_index = pd.date_range(start ='2024-01-01', periods = 10, freq='D')\n","print(date_index)\n","\n","data = {'value':np.arange(10)}\n","\n","df = pd.DataFrame(data, index = date_index)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":435},"id":"OMDtLHdG0uZ7","executionInfo":{"status":"ok","timestamp":1707028862083,"user_tz":-540,"elapsed":3,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"1b2f7ccc-4020-4ea1-edd3-2eb46be710d6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["DatetimeIndex(['2024-01-01', '2024-01-02', '2024-01-03', '2024-01-04',\n","               '2024-01-05', '2024-01-06', '2024-01-07', '2024-01-08',\n","               '2024-01-09', '2024-01-10'],\n","              dtype='datetime64[ns]', freq='D')\n"]},{"output_type":"execute_result","data":{"text/plain":["            value\n","2024-01-01      0\n","2024-01-02      1\n","2024-01-03      2\n","2024-01-04      3\n","2024-01-05      4\n","2024-01-06      5\n","2024-01-07      6\n","2024-01-08      7\n","2024-01-09      8\n","2024-01-10      9"],"text/html":["\n","  <div id=\"df-b2f6c67b-b387-48dd-a1d8-a12166506d9e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2024-01-01</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-02</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-03</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-04</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-05</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-06</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-07</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-08</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-09</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-10</th>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2f6c67b-b387-48dd-a1d8-a12166506d9e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b2f6c67b-b387-48dd-a1d8-a12166506d9e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b2f6c67b-b387-48dd-a1d8-a12166506d9e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6a7dba47-2d0c-47a9-8f60-0c90c7cf2105\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6a7dba47-2d0c-47a9-8f60-0c90c7cf2105')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6a7dba47-2d0c-47a9-8f60-0c90c7cf2105 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_264e548d-cb45-4831-9427-8188e71f75b6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_264e548d-cb45-4831-9427-8188e71f75b6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["df['data_string'] = ['2024-01-15', '2024-02-20', '2024-01-21',\n","                     '2024-01-25', '2024-01-26', '2024-01-27',\n","                     '2024-01-28', '2024-02-29', '2024-02-30',\n","                     '2024-02-31']\n","df.info()\n","# df['data_datetime'] = pd.to_datetime(df['data_string'])\n","df.info()\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":760},"id":"kZqjho6m2NuN","executionInfo":{"status":"ok","timestamp":1707029142909,"user_tz":-540,"elapsed":365,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"01d8ca27-df93-4cad-eff4-f980e518d3ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 10 entries, 2024-01-01 to 2024-01-10\n","Freq: D\n","Data columns (total 3 columns):\n"," #   Column         Non-Null Count  Dtype         \n","---  ------         --------------  -----         \n"," 0   value          10 non-null     int64         \n"," 1   data_string    10 non-null     object        \n"," 2   data_datetime  10 non-null     datetime64[ns]\n","dtypes: datetime64[ns](1), int64(1), object(1)\n","memory usage: 320.0+ bytes\n","<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 10 entries, 2024-01-01 to 2024-01-10\n","Freq: D\n","Data columns (total 3 columns):\n"," #   Column         Non-Null Count  Dtype         \n","---  ------         --------------  -----         \n"," 0   value          10 non-null     int64         \n"," 1   data_string    10 non-null     object        \n"," 2   data_datetime  10 non-null     datetime64[ns]\n","dtypes: datetime64[ns](1), int64(1), object(1)\n","memory usage: 320.0+ bytes\n"]},{"output_type":"execute_result","data":{"text/plain":["            value data_string data_datetime\n","2024-01-01      0  2024-01-15    2024-01-15\n","2024-01-02      1  2024-02-20    2024-01-20\n","2024-01-03      2  2024-01-21    2024-01-21\n","2024-01-04      3  2024-01-25    2024-01-25\n","2024-01-05      4  2024-01-26    2024-01-26\n","2024-01-06      5  2024-01-27    2024-01-27\n","2024-01-07      6  2024-01-28    2024-01-28\n","2024-01-08      7  2024-02-29    2024-01-29\n","2024-01-09      8  2024-02-30    2024-01-30\n","2024-01-10      9  2024-02-31    2024-01-31"],"text/html":["\n","  <div id=\"df-a8adced0-bbaa-46f4-b93c-1110cc8a7720\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>value</th>\n","      <th>data_string</th>\n","      <th>data_datetime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2024-01-01</th>\n","      <td>0</td>\n","      <td>2024-01-15</td>\n","      <td>2024-01-15</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-02</th>\n","      <td>1</td>\n","      <td>2024-02-20</td>\n","      <td>2024-01-20</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-03</th>\n","      <td>2</td>\n","      <td>2024-01-21</td>\n","      <td>2024-01-21</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-04</th>\n","      <td>3</td>\n","      <td>2024-01-25</td>\n","      <td>2024-01-25</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-05</th>\n","      <td>4</td>\n","      <td>2024-01-26</td>\n","      <td>2024-01-26</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-06</th>\n","      <td>5</td>\n","      <td>2024-01-27</td>\n","      <td>2024-01-27</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-07</th>\n","      <td>6</td>\n","      <td>2024-01-28</td>\n","      <td>2024-01-28</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-08</th>\n","      <td>7</td>\n","      <td>2024-02-29</td>\n","      <td>2024-01-29</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-09</th>\n","      <td>8</td>\n","      <td>2024-02-30</td>\n","      <td>2024-01-30</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-10</th>\n","      <td>9</td>\n","      <td>2024-02-31</td>\n","      <td>2024-01-31</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8adced0-bbaa-46f4-b93c-1110cc8a7720')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8adced0-bbaa-46f4-b93c-1110cc8a7720 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8adced0-bbaa-46f4-b93c-1110cc8a7720');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b81720a9-8a5e-482a-a899-9009d67b9c43\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b81720a9-8a5e-482a-a899-9009d67b9c43')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b81720a9-8a5e-482a-a899-9009d67b9c43 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_59ed8da3-2523-40fc-9b20-469e9e0bac6b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_59ed8da3-2523-40fc-9b20-469e9e0bac6b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":123}]},{"cell_type":"code","source":["df['data_string'] = ['2024-01-15', '2024-02-20', '2024-01-21',\n","                     '2024-01-25', '2024-01-26', '2024-01-27',\n","                     '2024-01-28', '2024-02-29', '2024-03-30',\n","                     '2024-03-31']\n","df.info()\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":580},"id":"gfsi5bKi3Wru","executionInfo":{"status":"ok","timestamp":1707030424422,"user_tz":-540,"elapsed":5,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"06e6522d-f5c2-45a6-ac85-ee3386cbb90a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 10 entries, 2024-01-01 to 2024-01-10\n","Freq: D\n","Data columns (total 4 columns):\n"," #   Column         Non-Null Count  Dtype         \n","---  ------         --------------  -----         \n"," 0   value          10 non-null     int64         \n"," 1   data_string    10 non-null     object        \n"," 2   data_datetime  10 non-null     datetime64[ns]\n"," 3   value_shifted  9 non-null      float64       \n","dtypes: datetime64[ns](1), float64(1), int64(1), object(1)\n","memory usage: 400.0+ bytes\n"]},{"output_type":"execute_result","data":{"text/plain":["            value data_string data_datetime  value_shifted\n","2024-01-01      0  2024-01-15    2024-01-15            NaN\n","2024-01-02      1  2024-02-20    2024-01-20            0.0\n","2024-01-03      2  2024-01-21    2024-01-21            1.0\n","2024-01-04      3  2024-01-25    2024-01-25            2.0\n","2024-01-05      4  2024-01-26    2024-01-26            3.0\n","2024-01-06      5  2024-01-27    2024-01-27            4.0\n","2024-01-07      6  2024-01-28    2024-01-28            5.0\n","2024-01-08      7  2024-02-29    2024-01-29            6.0\n","2024-01-09      8  2024-03-30    2024-01-30            7.0\n","2024-01-10      9  2024-03-31    2024-01-31            8.0"],"text/html":["\n","  <div id=\"df-e4e3d635-9e2d-44bb-8cb9-11a118f219f1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>value</th>\n","      <th>data_string</th>\n","      <th>data_datetime</th>\n","      <th>value_shifted</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2024-01-01</th>\n","      <td>0</td>\n","      <td>2024-01-15</td>\n","      <td>2024-01-15</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-02</th>\n","      <td>1</td>\n","      <td>2024-02-20</td>\n","      <td>2024-01-20</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-03</th>\n","      <td>2</td>\n","      <td>2024-01-21</td>\n","      <td>2024-01-21</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-04</th>\n","      <td>3</td>\n","      <td>2024-01-25</td>\n","      <td>2024-01-25</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-05</th>\n","      <td>4</td>\n","      <td>2024-01-26</td>\n","      <td>2024-01-26</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-06</th>\n","      <td>5</td>\n","      <td>2024-01-27</td>\n","      <td>2024-01-27</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-07</th>\n","      <td>6</td>\n","      <td>2024-01-28</td>\n","      <td>2024-01-28</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-08</th>\n","      <td>7</td>\n","      <td>2024-02-29</td>\n","      <td>2024-01-29</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-09</th>\n","      <td>8</td>\n","      <td>2024-03-30</td>\n","      <td>2024-01-30</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-10</th>\n","      <td>9</td>\n","      <td>2024-03-31</td>\n","      <td>2024-01-31</td>\n","      <td>8.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4e3d635-9e2d-44bb-8cb9-11a118f219f1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4e3d635-9e2d-44bb-8cb9-11a118f219f1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4e3d635-9e2d-44bb-8cb9-11a118f219f1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-31c2b393-2ba1-4edc-8826-ff785512c5d0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-31c2b393-2ba1-4edc-8826-ff785512c5d0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-31c2b393-2ba1-4edc-8826-ff785512c5d0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7be43f82-436e-4318-b050-1f63d58458ac\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7be43f82-436e-4318-b050-1f63d58458ac button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":132}]},{"cell_type":"code","source":["#resmaple()\n","\n","#일별데이터를 월별로 리샘플링하여 합계 계산\n","monthly_date = df.resample('M').sum()\n","print(monthly_date)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_qa2FtdV2XUV","executionInfo":{"status":"ok","timestamp":1707030426831,"user_tz":-540,"elapsed":340,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"89ea1730-9753-4545-ba7b-41360ebc4e0b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["            value  value_shifted\n","2024-01-31     45           36.0\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-133-d994e9c64c9e>:4: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  monthly_date = df.resample('M').sum()\n"]}]},{"cell_type":"code","source":["df['value_shifted'] = df['value'].shift(1)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"MVNEQH7W4Aru","executionInfo":{"status":"ok","timestamp":1707029364276,"user_tz":-540,"elapsed":4,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"1d82d2fd-b8d4-498a-ab27-7af4baea9ced"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            value data_string data_datetime  value_shifted\n","2024-01-01      0  2024-01-15    2024-01-15            NaN\n","2024-01-02      1  2024-02-20    2024-01-20            0.0\n","2024-01-03      2  2024-01-21    2024-01-21            1.0\n","2024-01-04      3  2024-01-25    2024-01-25            2.0\n","2024-01-05      4  2024-01-26    2024-01-26            3.0\n","2024-01-06      5  2024-01-27    2024-01-27            4.0\n","2024-01-07      6  2024-01-28    2024-01-28            5.0\n","2024-01-08      7  2024-02-29    2024-01-29            6.0\n","2024-01-09      8  2024-02-30    2024-01-30            7.0\n","2024-01-10      9  2024-02-31    2024-01-31            8.0"],"text/html":["\n","  <div id=\"df-cefd2124-8fbe-4bf2-a77a-bc1a3bbaee7c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>value</th>\n","      <th>data_string</th>\n","      <th>data_datetime</th>\n","      <th>value_shifted</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2024-01-01</th>\n","      <td>0</td>\n","      <td>2024-01-15</td>\n","      <td>2024-01-15</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-02</th>\n","      <td>1</td>\n","      <td>2024-02-20</td>\n","      <td>2024-01-20</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-03</th>\n","      <td>2</td>\n","      <td>2024-01-21</td>\n","      <td>2024-01-21</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-04</th>\n","      <td>3</td>\n","      <td>2024-01-25</td>\n","      <td>2024-01-25</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-05</th>\n","      <td>4</td>\n","      <td>2024-01-26</td>\n","      <td>2024-01-26</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-06</th>\n","      <td>5</td>\n","      <td>2024-01-27</td>\n","      <td>2024-01-27</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-07</th>\n","      <td>6</td>\n","      <td>2024-01-28</td>\n","      <td>2024-01-28</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-08</th>\n","      <td>7</td>\n","      <td>2024-02-29</td>\n","      <td>2024-01-29</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-09</th>\n","      <td>8</td>\n","      <td>2024-02-30</td>\n","      <td>2024-01-30</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>2024-01-10</th>\n","      <td>9</td>\n","      <td>2024-02-31</td>\n","      <td>2024-01-31</td>\n","      <td>8.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cefd2124-8fbe-4bf2-a77a-bc1a3bbaee7c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cefd2124-8fbe-4bf2-a77a-bc1a3bbaee7c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cefd2124-8fbe-4bf2-a77a-bc1a3bbaee7c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a0a44791-fdb2-45e4-933e-ee989591fbc0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0a44791-fdb2-45e4-933e-ee989591fbc0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a0a44791-fdb2-45e4-933e-ee989591fbc0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e8ae7cdf-0d74-47bc-9c18-146a96c236ce\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e8ae7cdf-0d74-47bc-9c18-146a96c236ce button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":131}]},{"cell_type":"markdown","source":["#2. 데이터 시각화"],"metadata":{"id":"ydUKV2MK_KLb"}},{"cell_type":"markdown","source":["##4) 기본 사용법"],"metadata":{"id":"r_cgBJSu_OOL"}},{"cell_type":"code","source":["#맷플로립 버전 확인\n","import matplotlib\n","\n","matplotlib.__version__ #3.7.1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"HZfQTcDO_P4q","executionInfo":{"status":"ok","timestamp":1707031237137,"user_tz":-540,"elapsed":508,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"6978c355-01a0-4a6d-be4f-8ba46699c788"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'3.7.1'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","#캔버스 생성\n","figure = plt.figure()\n","print(figure)\n","axes = figure.add_subplot(1, 1, 1)\n","print(axes)\n","#Axes(0.125,0.11;0.775x0.77)\n","#0.125 : 그래프의 왼쪽 경계 위치 0~1 상대적인 위치\n","#0.11 : 그래프의 아래쪽 경계 위치 0~1 상대적인 위치\n","#0.775 : 그래프의 가로 크기 0~1 상대적인 크기(1은 전체 가로크기)\n","#0.77 : 그래프의 세로 크기 0~1 상대적인 크기(1은 전체 세로크기)\n","\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":471},"id":"JNKGHZbR_S2x","executionInfo":{"status":"ok","timestamp":1707031604818,"user_tz":-540,"elapsed":362,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"fca449cb-be15-4346-b73e-ad1b9c59345e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Figure(640x480)\n","Axes(0.125,0.11;0.775x0.77)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#전체영역만들기\n","\n","figure = plt.figure()\n","#1행 2열 1번째\n","axes1 = figure.add_subplot(121)\n","#1행 2열 2번째\n","axes2 = figure.add_subplot(1, 2, 2)\n","plt.show()\n","print(\"출력끝\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":453},"id":"_dDp95l7_SzE","executionInfo":{"status":"ok","timestamp":1707031853685,"user_tz":-540,"elapsed":545,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"e919c84c-9cf1-4588-b9c8-960ce6dc87be"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["출력끝\n"]}]},{"cell_type":"markdown","source":["#3. matplotlib 그래프"],"metadata":{"id":"1aEA5QeTCMDm"}},{"cell_type":"markdown","source":["##1) plot() : 꺽은 선형 그래프"],"metadata":{"id":"Nlh_RabFCPY3"}},{"cell_type":"code","source":["figure = plt.figure()\n","axes = figure.add_subplot(111)\n","x = [1, 2, 3, 4, 5]\n","y = [10, 12, 5, 2, 7]\n","\n","#선그래프 그리기\n","axes.plot(x, y)\n","#그래프 출력\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"JAQeoXJdCSHs","executionInfo":{"status":"ok","timestamp":1707032115875,"user_tz":-540,"elapsed":578,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"88a06feb-61e3-40e8-a746-e585f2706ea1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAh8AAAGdCAYAAACyzRGfAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABIaUlEQVR4nO3deVRUdeM/8PedgWETBgHZBJRFEVHcF3AlTSszzaXNyvZUrOxp/z2V2WaL9fRUblmplS1mamaZuQAu4C6IqCg7goAbM6wDzNzfHyjfx3IDZ+Yzy/t1zpyTwx3u++PtnHn7+dxFkmVZBhEREZGZKEQHICIiIvvC8kFERERmxfJBREREZsXyQURERGbF8kFERERmxfJBREREZsXyQURERGbF8kFERERm5SA6wN8ZDAaUlJTA3d0dkiSJjkNERETXQZZlVFZWIjAwEArF1ec2LK58lJSUIDg4WHQMIiIiaoWioiIEBQVddRuLKx/u7u4AmsJ7eHgITkNERETXQ6vVIjg4uPl7/GosrnxcXGrx8PBg+SAiIrIy13PKBE84JSIiIrNi+SAiIiKzYvkgIiIis2L5ICIiIrNi+SAiIiKzYvkgIiIis2L5ICIiIrNi+SAiIiKzYvkgIiIis2px+di2bRvGjh2LwMBASJKEtWvXNv+soaEBL730Erp37w43NzcEBgbiwQcfRElJiTEzExERkRVrcfmorq5Gjx49MH/+/H/8rKamBgcOHMBrr72GAwcOYPXq1cjKysIdd9xhlLBERERk/SRZluVWf1iSsGbNGowfP/6K2+zduxf9+/dHQUEBQkJCrvk7tVot1Go1NBoNn+1CRERkJVry/W3yB8tpNBpIkgRPT8/L/lyn00Gn0zX/WavVmjoSWaniilqsSyvB2B4BCGrrKjoOERG1kklPOK2rq8NLL72Ee++994otaO7cuVCr1c2v4OBgU0YiK6Rr1GN+YjZGfpSM9/88hoTvD+IGJuyIiEgwk5WPhoYG3HXXXZBlGQsXLrzidq+88go0Gk3zq6ioyFSRyAolZpVj9H+24cONWaht0AMA0osqsDP7rOBkRETUWiZZdrlYPAoKCrB169arrv04OTnBycnJFDHIihWdq8Gb649g05EyAEA7dyf8+7YoHCw8j+WpBZifmI3BnXwEpyQiotYwevm4WDxOnDiBxMREeHt7G3sXZMPqGvRYlJyDhUk50DUa4KCQ8PCgjnh6RCe4OzuiX6gXVuwuRGruWewvOI8+HdqKjkxERC3U4vJRVVWF7Ozs5j/n5eUhLS0NXl5eCAgIwKRJk3DgwAGsX78eer0epaWlAAAvLy+oVCrjJSebIssyNh8tx5vrM1F0rhYAEBvmjTfHRaOTn3vzdu09XTChd3us3HcS8xOz8fVD/URFJiKiVmrxpbZJSUmIj4//x/tTp07FG2+8gdDQ0Mt+LjExEcOHD7/m7+eltvYn/0w15vyWicSs0wAAfw9nvHp7FMZ0D4AkSf/YPu9MNUZ8lASDDPz+9GBEB6rNHZmIiP7GpJfaDh8+/KpXGvAqBLpetfVNV7F8sS0X9XoDHJUSHhsShpnxEXBzuvL/mqE+bhgTE4jf0kuwICkH8+/rbcbURER0o0x+nw+iv5NlGX8eLsXbvx9FcUXTEsuQTj54445ohLdrc12/Y8bwcPyWXoI/Mk4h53TVdX+OiIjE44PlyKxyTlfhwa/3YPqKAyiuqEV7Txcsur8Pvnmkf4sKRFSAB0ZG+UKWgUVJOSZMTERExsaZDzKLal0jPt16Al/vyEODXoZKqcCTw8IwY3gEXFTKVv3OGfER2Hy0HGsOFuOZkZ1411MiIivBmQ8yKVmWsS69BCM+Ssbi5Fw06GXc1MUXfz07FM+Nimx18QCA3iFtERfujUaDjC+25RoxNRERmRJnPshkjpdVYvavmUjNbbobaYiXK2aP7YoRUX5G28fM+Aik5JzFj3uLMPOmCPi6OxvtdxMRkWmwfJDRVdY14JPNJ7AsJR96gwwnBwUS4iPwxNAwODu2fqbjcmLDvdErxBMHCyvw1Y48vHJrlFF/PxERGR+XXchoZFnG6gMnET8vGV/tyIPeIGNUVz9s/tcwPD2ik9GLBwBIkoSE4REAgO9SC1BRU2/0fRARkXFx5oOM4kiJFrPXHcbe/PMAmu7FMXtsVwyP9DX5vkdE+aKLvzuOlVZiWUo+Zo3sbPJ9EhFR63Hmg26IprYBs389jNs/2469+efh4qjEi7dE4s9ZQ8xSPIALsx/xTbMfS3fmo0rXaJb9EhFR67B8UKsYDDJW7i3CTfOSsDy1AAYZGBMTgC3PDcOM4RFwcjD+EsvV3NY9AKE+btDUNuD73QVm3TcREbUMywe1WMZJDSYuSsGLvxzC2ep6RPi2wYrHBmD+fb0R6OkiJJNSIWH6sHAAwJLteahr0AvJQURE18ZzPui6na+ux4d/ZeGHPYWQZcBNpcQzIzvhobhQqBzE99jxvdrjk83HUaKpw8/7T+KBgR1ERyIiossQ/41BFk9vkLFidwHiP0rC97ubise4noHY+vxwPDE03CKKBwCoHBR48sLsx6KkHDToDYITERHR5XDmg67qYOF5vP5rJjKKNQCALv7umHNHNAaEeQtOdnl39wvGZ1tPoLiiFr+mlWBSnyDRkYiI6G8s45+sZHHOVunw4qp03LkgBRnFGrg7OWD22K5Y/9Rgiy0eAODsqMSjg8MAAAuSsqE3yIITERHR33Hmgy7RqDfg+z2FmLcxC9q6pktWJ/YOwsu3dkE7dyfB6a7P/QNDsDApG7mnq7ExsxS3dQ8QHYmIiP4Hywc125d/Dq/9momjp7QAgOhAD7w5Lhp9OngJTtYy7s6OeCiuIz7dmo35idm4tZs/JEkSHYuIiC5g+SCUV9bhvQ3HsPpAMQDAw9kBL4yOxH0DOkCpsM4v7YcHheLLHXnILNEiKes04ruY54ZnRER0bSwfdqxBb8A3qQX4ZNNxVOoaIUnA3X2D8cLoSHi3sY4llitp66bClAEhWLI9D58nZmN4ZDvOfhARWQiWDzuVmnMWb6zLRFZZJQAgJkiNN8d1Q89gT7HBjOixIWFYnlKA/QXnsTvvHAZa8ImyRET2hOXDzpRq6vDOH0fxW3oJAKCtqyNevKUL7u4bDIWVLrFciZ+HMyb3DcKK3YWYn5jN8kFEZCFYPuxEfaMBS3fm4dMtJ1Bdr4ckAVMGhOD5UZHwdFWJjmcy04aF48e9Rdh+4gzSiyrQw4ZmdoiIrBXv82EHdpw4g1v/uw1zNxxDdb0evUM88dvMwXh7fHebLh4AEOzlinE9AwEA8xOzBachIiKAMx82rbiiFm+vP4INh0sBAD5tVHjpli6Y2DvI5pZYrmbG8HCsOViMv46UIau0EpH+7qIjERHZNc582CBdox7zE7Mx8qNkbDhcCoUEPBTXEVueG47JNnhux7VE+Lrjlmh/AMDCJM5+EBGJxpkPG5OYVY456zKRf7YGANC/oxfmjItGVICH4GRiJcRHYMPhUqxLL8GzN3dGB2830ZGIiOwWZz5sRNG5Gjz+zT48vHQv8s/WoJ27Ez65uyd+enKg3RcPAOjWXo1hndvBIAOLknNExyEismuc+bBydQ16LErOwcKkHOgaDXBQSHh4UEc8PaIT3J0dRcezKDNvikDy8dNYtf8knh7RCQFqF9GRiIjsEsuHlZJlGZuPluPN9ZkoOlcLAIgL98acO6LRyY8nVF5Ov45e6B/qhT1557BkWx5eH9tVdCQiIrvE8mGF8s9UY85vmUjMOg0A8Pdwxqu3R2FM9wDeQvwaEuIjsCdvD77fU4CE+HCrv408EZE1YvmwIrX1TVexfLEtF/V6AxyVEh4bEoaZ8RFwc+KhvB5DO/mge3s1Moo1+HpnHl4Y3UV0JCIiu8MTTq2ALMvYkHEKIz9OxueJ2ajXGzCkkw/+nDUUL93ShcWjBSRJQkJ8BADgm5QCaOsaBCciIrI//NaycNnlVZjzWya2nzgDAGjv6YLXbu+K0dF+XGJppVFd/dDJtw1OlFfh29SC5jJCRETmwZkPC1Wla8TcDUdx63+3YfuJM1A5KPD0TRHY/K9huKWbP4vHDVAoJMyIDwcAfLUjDzX1jYITERHZF5YPCyPLMtall2DER0lYnJyLBr2Mm7r4YtOzQ/GvUZFwUSlFR7QJY2MCEeLlinPV9fhxT5HoOEREdoXlw4IcL6vEfUt24+kfDqJMq0OIlyu+mtoXXz/Uj3fkNDIHpQLThjXNfnyxLRe6Rr3gRERE9oPnfFiAyroGfLL5BJal5ENvkOHkoEBCfASeGBoGZ0fOdJjKxD7t8d8tx1GqrcPqA8W4t3+I6EhERHaBMx8CybKM1QdOIn5eMr7akQe9QcboaD9s/tcwPD2iE4uHiTk5KPH4kDAATbdcb9QbBCciIrIPnPkQ5EiJFrPXHcbe/PMAgFAfN7xxRzSGdW4nOJl9uW9ACOYnZqPgbA1+zziFcT3bi45ERGTzOPNhZpraBsz+9TBu/2w79uafh4ujEi/eEok/Zw1h8RDAVeWARwaFAgDmJ2bDYJAFJyIisn2c+TATg0HGqv0n8f6fx3C2uh4AMCYmAP++LQqBnnzAmUgPxnXEF9tycbysCpuOlmF0tL/oSERENo3lwwwyTmrw2q+HkVZUAQCI8G2DOXdEY1CEj9hgBABQuzjigdgOWJCUgwWJ2RjVlTdwIyIyJZYPEzpfXY8P/8rCD3sKIcuAm0qJWSM7Y2pcR6gcuOJlSR4ZHIqvd+Yh/aQGO7LPYEgnLoEREZkKy4cJ6A0yftxbiA83ZqGipunZIeN6BuL/3RYFPw9nwenocnzaOOGefiFYlpKPz7dms3wQEZkQy4eRHSw8j9d/zURGsQYA0MXfHXPuiMaAMG/ByehanhwWhhW7C7A77xz25Z9D345eoiMREdkkzv0bydkqHV5clY47F6Qgo1gDdycHzB7bFeufGsziYSUC1C6Y2DsIQNOVL0REZBqc+bhBjXoDVuwuxEd/ZUFb1/SAskl9gvDSLV3Qzt1JcDpqqWnDwrFyXxESs07jcLEG3dqrRUciIrI5nPm4Afvyz2Hs5zsxe10mtHWNiA70wC/TYzFvcg8WDyvV0ccNt8cEAgAWJuUITkNEZJs489EK5ZV1eG/DMaw+UAyg6VLN50dH4r7+IVAqeImmtZsRH4516SX44/ApZJdXIcK3jehIREQ2hTMfLdCgN+CrHXkYMS8Zqw8UQ5KAe/sHI/H54XhgYAcWDxvRxd8DI6P8IMuc/SAiMgXOfFyn1JyzeGNdJrLKKgEAPYLUmDOuG3oGe4oNRiYx86YIbD5ahrVpxZg1shOCvVxFRyIishksH9dQqqnDO38cxW/pJQCAtq6OeOmWLrirbzAUnOmwWT2DPTE4wgc7ss/gi225eGt8N9GRiIhsBsvHFdQ3GrB0Zx4+3XIC1fV6SBIwZUAInh8VCU9Xleh4ZAYz4sOxI/sMftpXhKduioAvbxBHRGQULB+XsePEGcxedxg5p6sBAL1DPPHmuG687NLOxIZ5o3eIJw4UVuDLHXn4f7dFiY5ERGQTeMLp/yiuqMX07/bj/q92I+d0NXzaqDBvcg+smhbH4mGHJEnCzJsiAADf7SpARU294ERERLaBMx8AdI16fLk9D59vzUZtgx5KhYQHYztg1sjOULs4io5HAsVH+iIqwANHT2mxdGc+nr25s+hIRERWz+5nPhKzyjH6P9vw4cYs1Dbo0b+jF9Y/NRizx0azeBAkSUJCfDgAYFlKPqp0jYITERFZvxaXj23btmHs2LEIDAyEJElYu3btJT+XZRmvv/46AgIC4OLigpEjR+LEiRPGyms0Redq8Pg3+/Dw0r3IP1uDdu5O+OTunvjpyYGICvAQHY8syK3dAhDWzg2a2gas2FUgOg4RkdVrcfmorq5Gjx49MH/+/Mv+/IMPPsCnn36KRYsWYffu3XBzc8Po0aNRV1d3w2GNoa5Bj082H8fIj5Ox6UgZHBQSHh8Siq3PDcP4Xu0hSbx8li6lVEiYPqxp9mPJ9jzUNegFJyIism6SLMtyqz8sSVizZg3Gjx8PoGnWIzAwEM899xyef/55AIBGo4Gfnx+WLVuGe+6555q/U6vVQq1WQ6PRwMPDeDMQsixj89FyvLk+E0XnagEAceHemHNHNDr5uRttP2SbGvQGDP8wCcUVtXhzXDQejO0oOhIRkUVpyfe3Uc/5yMvLQ2lpKUaOHNn8nlqtxoABA5CamnrZz+h0Omi12kteprAxswyPf7MPRedqEaB2xvz7emPFYwNYPOi6OCoVeHJYGABgcXIuGvQGwYmIiKyXUctHaWkpAMDPz++S9/38/Jp/9ndz586FWq1ufgUHBxszUrORUb6ICVJj+vBwbP7XMIyJCeASC7XIXX2D4dPGCcUVtVh7sFh0HCIiqyX8apdXXnkFGo2m+VVUVGSS/TgoFVg9PQ4v3dIFbk68wphaztlRiceGhAJoeuCc3tDqFUsiIrtm1PLh7+8PACgrK7vk/bKysuaf/Z2TkxM8PDwueZmKg1J41yIrd//ADlC7OCL3TDU2HD4lOg4RkVUy6rdxaGgo/P39sWXLlub3tFotdu/ejdjYWGPuikiINk4OeCiuIwBgfmIObuB8bSIiu9Xi8lFVVYW0tDSkpaUBaDrJNC0tDYWFhZAkCbNmzcLbb7+NdevWISMjAw8++CACAwObr4ghsnYPD+oIV5USR09pkZhVLjoOEZHVaXH52LdvH3r16oVevXoBAP71r3+hV69eeP311wEAL774Ip566ik88cQT6NevH6qqqvDnn3/C2ZlPBCXb4Omqwv0DOwAAPt+azdkPIqIWuqH7fJiCqe7zQWRM5do6DP4gEfWNBvzw+EDEhnuLjkREJJSw+3wQ2QtfD2fc3bfpsvD5idmC0xARWReWD6JWemJoGJQKCTuyzyCtqEJ0HCIiq8HyQdRKwV6uGN+zPQDOfhARtQTLB9ENmD48HJIEbDpShmOlpnk0ABGRrWH5ILoBEb5tcGu3phvoLUjMEZyGiMg6sHwQ3aAZwyMAAOsPlSD/TLXgNERElo/lg+gGdWuvRnxkOxhkYFEyZz+IiK6F5YPICBLim2Y/fjlwEiUVtYLTEBFZNpYPIiPo29ELA0K90KCX8cW2XNFxiIgsGssHkZHMvKlp9uPHvYU4U6UTnIaIyHKxfBAZyeAIH/QIUqOuwYCvd+SJjkNEZLFYPoiMRJIkzLhw7se3qQXQ1DYITkREZJlYPoiM6OYoP3T2a4NKXSO+Tc0XHYeIyCKxfBAZkUIhNV/58tWOPNTUNwpORERkeVg+iIxsTPcAhHi54nxNA77fXSg6DhGRxWH5IDIyB6UC04eHAwCWbM+FrlEvOBERkWVh+SAygQm928PfwxllWh1+2V8sOg4RkUVh+SAyAScHJR4fGgag6ZbrjXqD4ERERJaD5YPIRO7tHwwvNxUKz9Xgt0MlouMQEVkMlg8iE3FVOeDRwaEAgAWJOTAYZMGJiIgsA8sHkQk9ENsB7k4OOFFehb+OlImOQ0RkEVg+iEzIw9kRD8Z1AADMT8yGLHP2g4iI5YPIxB4ZFAoXRyUyijXYfuKM6DhERMKxfBCZmHcbJ9zbPwQA8HlituA0RETisXwQmcHjQ0PhqJSwJ+8c9uafEx2HiEgolg8iMwhQu2BSnyAATed+EBHZM5YPIjOZNiwcCglIyjqNw8Ua0XGIiIRh+SAykw7ebhjbIxAAZz+IyL6xfBCZ0YzhEQCAPzNLkV1eKTgNEZEYLB9EZhTp745RXf0gy8CCpBzRcYiIhGD5IDKzhPim2Y9f00pQdK5GcBoiIvNj+SAysx7BnhjSyQd6g4xFyZz9ICL7w/JBJMDF2Y+f951EubZOcBoiIvNi+SASYECoF/p2aIt6vQFLtueKjkNEZFYsH0QCSJLUPPuxYnchzlfXC05ERGQ+LB9EggyPbIfoQA/U1OuxNCVfdBwiIrNh+SAS5H9nP5btzENlXYPgRERE5sHyQSTQ6Gh/hLVzg7auEd/tKhQdh4jILFg+iARSKqTmu55+tSMXdQ16wYmIiEyP5YNIsHE9A9He0wVnqurx094i0XGIiEyO5YNIMEelAtOGhQEAFifnoL7RIDgREZFpsXwQWYDJfYPRzt0JJZo6rD1YLDoOEZFJsXwQWQBnRyUeHxIKAFiYnAO9QRaciIjIdFg+iCzElAEdoHZxRN6ZavyRcUp0HCIik2H5ILIQbk4OeHhQRwDA/MRsyDJnP4jINrF8EFmQh+I6wk2lxLHSSmw9Vi46DhGRSbB8EFkQT1cV7o/tAAD4nLMfRGSjWD6ILMyjg0OhclDgYGEFUnPOio5DRGR0LB9EFsbX3Rn39AsGAMxPyhachojI+Fg+iCzQE0PD4KCQsDP7LA4Wnhcdh4jIqFg+iCxQUFtXjO/VHkDTlS9ERLaE5YPIQk0fHg5JAjYfLcfRU1rRcYiIjIblg8hChbdrg9u6BwAAFiTlCE5DRGQ8LB9EFmzG8HAAwO+HSpB3plpwGiIi42D5ILJg0YFq3NTFFwYZWMgrX4jIRrB8EFm4hPgIAMDqA8UorqgVnIaI6MYZvXzo9Xq89tprCA0NhYuLC8LDw/HWW2/xTo1ErdSnQ1vEhnmj0SBjybZc0XGIiG6Y0cvH+++/j4ULF+Lzzz/H0aNH8f777+ODDz7AZ599ZuxdEdmNi7MfP+wpxOlKneA0REQ3xujlIyUlBePGjcOYMWPQsWNHTJo0CaNGjcKePXuMvSsiuzEowhs9gj2hazTg6515ouMQEd0Qo5ePuLg4bNmyBcePHwcApKenY8eOHbj11lsvu71Op4NWq73kRUSXkiQJMy/MfnybWgBNTYPgRERErWf08vHyyy/jnnvuQZcuXeDo6IhevXph1qxZmDJlymW3nzt3LtRqdfMrODjY2JGIbMKILr6I9HNHla4Ry1PzRcchImo1o5ePlStXYsWKFfj+++9x4MABLF++HPPmzcPy5csvu/0rr7wCjUbT/CoqKjJ2JCKboFBImBHfdN+Pr3fmoVrXKDgREVHrSLKRL0MJDg7Gyy+/jISEhOb33n77bXz33Xc4duzYNT+v1WqhVquh0Wjg4eFhzGhEVk9vkDHioyTkn63Bq2Oi8NiQMNGRiIgAtOz72+gzHzU1NVAoLv21SqUSBoPB2LsisjtKhYRpw5pmP77Ylou6Br3gRERELWf08jF27Fi88847+P3335Gfn481a9bg448/xp133mnsXRHZpQm9gxCgdkZ5pQ6r9p8UHYeIqMWMXj4+++wzTJo0CTNmzEBUVBSef/55PPnkk3jrrbeMvSsiu6RyUOCJoU3LLYuSc9Co56wiEVkXo5/zcaN4zgfRtdXW6zH4/a04W12Pj+/qgQm9g0RHIiI7J/ScDyIyPReVEo8MDgUALEjKgcFgUf+GICK6KpYPIiv1QGwHuDs7ILu8Cn8dKRUdh4jourF8EFkpD2dHPBTXEQDweWI2H95IRFaD5YPIij08KBQujkocLtYi+fhp0XGIiK4LyweRFfNyU+G+ASEAgAWJOYLTEBFdH5YPIiv3+JAwqJQK7Mk/hz1550THISK6JpYPIivnr3bGxD5Nl9p+npgtOA0R0bWxfBDZgOnDwqFUSNh2/DQOnawQHYeI6KpYPohsQIi3K+7oEQiA534QkeVj+SCyETOGNz1w7s/MUpwoqxSchojoylg+iGxEJz93jI72A9B011MiIkvF8kFkQ2bGdwIArEsvQeHZGsFpiIguj+WDyIZ0D1JjaOd20BtkLNrG2Q8iskwsH0Q2JuHCuR+r9p1EqaZOcBoion9i+SCyMQPCvNGvY1vU6w34cnuu6DhERP/A8kFkgxLiIwAAK3YX4lx1veA0RESXYvkgskHDOrdDt/YeqG3QY+nOPNFxiIguwfJBZIMkSULC8KbZj2Up+dDWNQhORET0f1g+iGzU6Gh/hLdzQ2VdI77bVSA6DhFRM5YPIhulUEiYcWH246vteait1wtORETUhOWDyIbd0TMQQW1dcLa6Hj/uLRQdh4gIAMsHkU1zVCowbVjTfT++2JaL+kaD4ERERCwfRDZvUp8g+Lo74ZSmDmsOnhQdh4iI5YPI1jk7KvH4kDAAwMKkHDTqOftBRGKxfBDZgfsGhMDT1RH5Z2vwx+FS0XGIyM6xfBDZATcnBzwyKBQAsCAxGwaDLDgREYnQqDfgseV78Vem2H+EsHwQ2YmpsR3RxskBx0orseVYueg4RCTA4m252Hy0HM//nA5NjbibD7J8ENkJtasj7h/YAQDweWI2ZJmzH0T2JKu0Ep9sPg4AmD02GmpXR2FZWD6I7Mijg0Ph5KBAelEFUnLOio5DRGbSoDfg+Z/T0aCXMTLKFxN6txeah+WDyI60c3fCPf2CAQCfb80WnIaIzGVRUg4yijVQuzji3Tu7Q5IkoXlYPojszBPDwuGgkJCaexb7C86LjkNEJnakRItPt54AAMy5Ixq+Hs6CE7F8ENmd9p4uzVOuCxI5+0Fky+ob/2+5ZVRXP4zrGSg6EgCWDyK7NH14BBQSsOVYOY6UaEXHISITmZ+YjSOntGjr6oh3LGC55SKWDyI7FOrjhtu6BwAA5idx9oPIFh0u1mD+hdnNN8d1Qzt3J8GJ/g/LB5GdSoiPAAD8kXEKuaerBKchImO6uNzSaJBxW3d/3B4TIDrSJVg+iOxUVIAHRkb5QpabnvlCRLbjs60ncKy0El5uKrw5rpvFLLdcxPJBZMdmXJj9WHOwGCfP1whOQ0TGcOhkBRZc+AfFW+O6waeN5Sy3XMTyQWTHeoe0RVy4NxoNMpZsyxUdh4hukK5Rj+d/TofeIOP2mACMsbDllotYPojs3MwLsx8/7i3C6Uqd4DREdCP+u/kEjpdVwadN03KLpWL5ILJzseHe6BnsCV2jAV/u4OwHkbVKK6rAouSm5Za3x3eHl5tKcKIrY/kgsnOSJDXPfnyXWoCKmnrBiYiopeoa9HhuZRoMMjCuZyBu6eYvOtJVsXwQEUZE+aKLvzuq6/VYnlIgOg4RtdB/Nh1HzulqtHN3whtjo0XHuSaWDyKCJEnNV74sTclDta5RcCIiul77C85jyfamJdN37+yOtha83HIRywcRAQDGdA9AqI8bKmoasGI3Zz+IrEFdgx4v/JwOgwxM6NUeN3f1Ex3purB8EBEAQKmQMH1YOABgyfY81DXoBSciomuZtzELuWeq4evuhNlWsNxyEcsHETUb36s9AtXOOF2pw8/7T4qOQ0RXsTf/HL7amQcAeG9id6hdHQUnun4sH0TUTOWgwBNDwwAAi5Jy0KA3CE5ERJdTW9+03CLLwOQ+Qbipi3Ust1zE8kFEl7infwh82qhQXFGLdWklouMQ0WV8sPEY8s/WIEDtjFdv7yo6TouxfBDRJZwdlXh0cNPsx4KkbBgMsuBERPS/duWexdKd+QCA9ybGQO1iPcstF7F8ENE/3D8wBB7ODsg5XY0/M0tFxyGiC2rqG/HiqkMAgHv6BWNY53aCE7UOywcR/YO7syMeiusIAJifmA1Z5uwHkSV4f8MxFJ6rQaDaGf8eEyU6TquxfBDRZT08KBSuKiUyS7RIOn5adBwiu5eScwbLU5vuwfPBpB5wd7a+5ZaLWD6I6LLauqlwX/8QAMD8rZz9IBKpSvd/yy33DQjB4E4+ghPdGJYPIrqix4eGQaVUYF/BeezOOyc6DpHdmvvHUZw8X4v2ni74f7dZ73LLRSwfRHRFfh7OmNw3CEDTuR9EZH47TpzBit2FAIAPJ8WgjZOD4EQ3juWDiK5q2rBwKBUStp84g/SiCtFxiOxKZV0DXvqlabnlwdgOiIuw7uWWi0xSPoqLi3H//ffD29sbLi4u6N69O/bt22eKXRGRiQV7uWJcj0AAnP0gMrd3/ziK4opaBHu54KVbuoiOYzRGLx/nz5/HoEGD4OjoiA0bNuDIkSP46KOP0LZtW2PviojMZEZ8OCQJ+OtIGY6XVYqOQ2QXko+fxg97igAAH07qATcbWG65yOgjef/99xEcHIylS5c2vxcaGmrs3RCRGUX4uuOWaH9sOFyKBYnZ+OSeXqIjEdk0bV0DXr6w3PJQXEcMDPMWnMi4jD7zsW7dOvTt2xeTJ0+Gr68vevXqhSVLllxxe51OB61We8mLiCzPjOERAIB16SUoOFstOA2RbXt7/RGc0tSho7crXrwlUnQcozN6+cjNzcXChQvRqVMnbNy4EdOnT8fTTz+N5cuXX3b7uXPnQq1WN7+Cg4ONHYmIjKB7kBrDOreDQQYWJeeKjkNksxKPlWPlvpOQJODDyT3gqrKd5ZaLJNnIdw5SqVTo27cvUlJSmt97+umnsXfvXqSmpv5je51OB51O1/xnrVaL4OBgaDQaeHh4GDMaEd2gvfnnMHlRKlRKBba9GA9/tbPoSEQ2RVPTgFGfJKNMq8Ojg0PxmhU9sVar1UKtVl/X97fRZz4CAgLQteulf1lRUVEoLCy87PZOTk7w8PC45EVElqlfRy/07+iFer0BX2zj7AeRsc1Zn4kyrQ5hPm54fpTtLbdcZPTyMWjQIGRlZV3y3vHjx9GhQwdj74qIBEi4qencj+/3FOBsle4aWxPR9dp8pAyrDxRDcWG5xUWlFB3JZIxePp599lns2rUL7777LrKzs/H999/jiy++QEJCgrF3RUQCDO3kg+7t1ahrMGDpznzRcYhsQkVNPV5ZkwEAeHxIGPp0sO3bUxi9fPTr1w9r1qzBDz/8gG7duuGtt97CJ598gilTphh7V0QkgCRJSIgPBwAsT82Htq5BcCIi6/fGukycrtQhvJ0bnr25s+g4JmeSU2hvv/123H777ab41URkAUZ19Ucn3zY4UV6Fb1MLkBAfIToSkdX683Ap1qaVQCEB8yb3gLOj7S63XMRnuxBRiykUEmZcmP34akceauv1ghMRWadz1fV4dW3TcsuTw8LRK8S2l1suYvkgolYZGxOIYC8XnKuuxw97Ln81GxFd3ex1mThTVY/Ofm0wa2Qn0XHMhuWDiFrFQanAtGFNsx9fbMuFrpGzH0Qt8UfGKfyWXgKlQsK8yT3g5GD7yy0XsXwQUatN6hMEPw8nlGrrsOZAseg4RFbjTJUOr649DACYPiwcMUGeYgOZGcsHEbWak4MSjw8JAwAsTM5Bo94gOBGR5ZNlGa+tPYxz1fXo4u+Op0bY3wnbLB9EdEPuGxCCtq6OKDhbg98zTomOQ2Tx1h86hQ2HS+Fgh8stF7F8ENENcVU54JFBoQCABYk5MBiM+rgoIptyulKH139tWm6ZER+Bbu3VghOJwfJBRDfswbiOaOPkgKyySmw+WiY6DpFFkmUZr67NwPmaBkQFeGCmHd8fh+WDiG6Y2sURD8Q2Pb9pfmI2jPywbCKbsC69BBszy+CgkPDR5B5QOdjvV7D9jpyIjOrRwaFwdlQg/aQGO7LPiI5DZFHKtXV4/ddMAMDTIzqha6B9P8Gd5YOIjMKnjRPu6RcCoGn2g4iayLKM/7cmA5raBnRr74Hpw8NFRxKO5YOIjOaJoWFwVErYlXsO+wvOiY5DZBHWHCzG5qPlcFQ2Xd3iqORXL/8GiMhoAj1dMKFXEADg862c/SAq1dThjXVNyy2zRnZGF3/7Xm65iOWDiIxq+vBwKCQgMes0Mks0ouMQCSPLMl5ZfQjaukbEBKnx5NAw0ZEsBssHERlVRx833B4TCKDpvh9E9urn/SeRmHUaKqUCH03uAQcutzTj3wQRGd2M+KYT6v44fArZ5VWC0xCZ3ylNLd767QgA4NmbO6OTn7vgRJaF5YOIjK6LvwdGRvlBloFFyZz9IPsiyzJe+iUDlbpG9Az2xONDQkVHsjgsH0RkEgkXZj/WHizGyfM1gtMQmc9Pe4uw7fhpqBwUmMfllsvi3wgRmUSvkLYYFOGNRoOMxcm5ouMQmUVxRS3e/v0oAOCFUZGI8G0jOJFlYvkgIpNJuPDsip/2FaFcWyc4DZFpybKMl1YdQpWuEX06tMUjg7ncciUsH0RkMrFh3ugd4on6RgO+2pEnOg6RSX2/pxA7ss/AyUGBDyfFQKmQREeyWCwfRGQykiRh5k1Nsx/f7SpARU294EREplF0rgbvXFhuefGWLghrx+WWq2H5ICKTio/0RVSAB6rr9Vi6M190HCKjMxhkvLjqEGrq9ejf0QsPx3UUHcnisXwQkUlJktR85cuylHxU6RoFJyIyrhW7C5CaexYujkp8MCkGCi63XBPLBxGZ3K3dAhDm4wZNbQNW7CoQHYfIaArP1uDdP44BAF66JRIdfdwEJ7IOLB9EZHJKhYRpFx4jvmR7Huoa9IITEd04g0HG86vSUdugx4BQLzwY21F0JKvB8kFEZnFnr/Zo7+mCM1U6PPPjQRYQsnrLU/OxJ+8cXFVKfDipB5dbWoDlg4jMwlGpwNvju0GlVGBjZhnu/3I3r34hq5V3phrv/9m03PLKbVEI8XYVnMi6sHwQkdnEd/HFN4/2h7uzA/YVnMekRakorqgVHYuoRfQGGS/8nI66BgPiwr0xpX+I6EhWh+WDiMxqYJg3Vk2Lg7+HM7LLqzBxQQqOlWpFxyK6bkt35mFfwXm4qZR4fyKvbmkNlg8iMrtIf3esnhGHTr5tUKqtw+RFqUjNOSs6FtE15ZyuwocbswAA/x7TFcFeXG5pDZYPIhIi0NMFq6bFoX9HL1TWNWLq13vw+6FTomMRXdHF5RZdowFDOvng3v7BoiNZLZYPIhJG7eqIbx7tj1ui/VGvN2DmDwewdCefAUOW6asduThQWIE2Tg54b2IMJInLLa3F8kFEQjk7KjF/Sm88GNsBsgzM+e0I5m44CoNBFh2NqFl2eSXm/XUcAPDa7VFo7+kiOJF1Y/kgIuGUCglz7ojGC6MjAQCLk3Pxr5VpqG80CE5GBDTqDXju50OobzRgWOd2uKsvl1tuFMsHEVmEpmfARGDe5B5QKiSsTSvBo8v38lkwJNwX23ORXlQBd2cHvDexO5dbjIDlg4gsyqQ+Qfhqal+4qpTYfuIM7l6civLKOtGxyE5llVbik00nAACzx0YjQM3lFmNg+SAiizM80hc/PjEQ3m4qZJZoMXFhCnJPV4mORXamQW/A8z+no15vwE1dfDGxd3vRkWwGywcRWaSYIE/8Mj0OHbxdUXSuFpMWpeJg4XnRsciOLE7OQUaxBh7ODpg7gcstxsTyQUQWq6OPG36ZHoeYIDXOVdfjviW7sfVYmehYZAeOntLiv1uallvmjIuGn4ez4ES2heWDiCyaTxsn/PD4QAzr3A61DXo8/s1+/LS3UHQssmEXl1sa9DJu7uqH8T253GJsLB9EZPHcnBzw5dS+mNg7CHqDjJd+ycCnW05AlnkvEDK+BYk5yCzRwtPVEe/c2Y3LLSbA8kFEVsFRqcC8yTFIiA8HAHy86Tj+vfYw9LwZGRlRZokGn229sNxyRzR83bncYgosH0RkNSRJwguju+DNcdGQJOD73YWY9t1+1NbrRUcjG1DfaMBzK9PRaJBxS7Q/7ugRKDqSzWL5ICKr82BsRyyc0hsqBwU2HSnDlC934Xx1vehYZOU+33oCx0or4eWmwttcbjEplg8iskq3dAvAd48OgIezAw4UVmDSohScPF8jOhZZqYyTGsxPygEAvDkuGj5tnAQnsm0sH0RktfqHemHV9DgEqJ2Rc7oaExak4EiJVnQssjK6Rj2e/zkdeoOMMd0DcHsMl1tMjeWDiKxaZz93rJ4Rh0g/d5RX6nD34lSkZJ8RHYusyKdbTiCrrBLebiq8OS5adBy7wPJBRFYvQO2CldNi0T/UC5W6Rkxdugfr0ktExyIrkF5UgYUXllveHt8N3lxuMQuWDyKyCWoXR3zzSH/c1t0fDXoZT/9wEF9uzxUdiyxYXYMez/2cDoMM3NEjELd2DxAdyW6wfBCRzXB2VOKze3vjobiOAIC3fz+Kd34/AgPvBUKX8cnmE8gur4JPGyfMuYPLLebE8kFENkWpkDB7bFe8fGsXAMCS7XmY9VMa6hsNgpORJTlQeB5fbGtabnn3zm5o66YSnMi+sHwQkc2RJAnThoXj47t6wEEhYV16CR5etgeVdQ2io5EFqGtourrFIAN39mqPUdH+oiPZHZYPIrJZE3oH4euH+sFNpcTO7LO4e/EulGvrRMciwT76Kwu5p6vh6+6E2WO7io5jl1g+iMimDe3cDj89GQufNiocOaXFhIUpyDldJToWCbK/4By+3JEHAJg7oTs8XbncIgLLBxHZvG7t1Vg9fRA6ervi5PlaTFyYgv0F50XHIjOrrdfj+Z8PQZaBib2DMCLKT3Qku2Xy8vHee+9BkiTMmjXL1LsiIrqiEG9X/DI9Dj2C1KioacCUL3dh85Ey0bHIjD7cmIW8M9Xw83DC61xuEcqk5WPv3r1YvHgxYmJiTLkbIqLr4t3GCT88MRDxke1Q12DAE9/uww97CkXHIjPYnXsWS1OallvemxgDtYuj4ET2zWTlo6qqClOmTMGSJUvQtm1bU+2GiKhFXFUOWPJgX9zVNwgGGXhldQb+s+k4ZJn3ArFVNfWNeGFV03LLXX2DEB/pKzqS3TNZ+UhISMCYMWMwcuTIq26n0+mg1WoveRERmZKDUoH3J8bgqZsiAAD/3XIC/29NBhr1vBeILfrgzywUnqtBgNoZr97O5RZLYJLy8eOPP+LAgQOYO3fuNbedO3cu1Gp18ys4ONgUkYiILiFJEp4bFYm3x3eDQgJ+2FOEad/tR229XnQ0MqLUnLNYlpIPAHh/Ygw8nLncYgmMXj6KiorwzDPPYMWKFXB2dr7m9q+88go0Gk3zq6ioyNiRiIiu6P6BHbDw/j5wclBg89Fy3PflLpyrrhcdi4ygWteIF1alAwDu7R+CoZ3bCU5EF0mykRc6165dizvvvBNKpbL5Pb1eD0mSoFAooNPpLvnZ32m1WqjVamg0Gnh4eBgzGhHRFe3LP4dHl++DprYBYT5uWP5IfwR7uYqORTfg1bUZ+G5XIdp7umDjs0PRxslBdCSb1pLvb6PPfIwYMQIZGRlIS0trfvXt2xdTpkxBWlraVYsHEZEofTt64ZfpsWjv6YLcM9WYsDAFmSUa0bGolXZmn8F3u5quZPpgUgyLh4Uxevlwd3dHt27dLnm5ubnB29sb3bp1M/buiIiMJsLXHb9Mj0MXf3ecrtTh7sW7sDP7jOhY1EKVdQ14cdUhAMD9A0MwKMJHcCL6O97hlIjof/irnbFyWiwGhnmhSteIh5buwa9pxaJjUQu8+8cxFFfUIqitC165NUp0HLoMs8xDJSUlmWM3RERG4eHsiOWP9Me/Vqbj90On8MyPaSjX6vD40DDR0egath0/3XzjuA8n9YAbl1ssEmc+iIguw8lBic/u6YVHBoUCAN754yjeWn8EBgNvRmaptHUNeOmXpuWWqbEdEBvuLTgRXQnLBxHRFSgUEl4f2xX/vq1p6v6rHXl4+seD0DXyXiCW6J31R3FKU4cQL1e8dGsX0XHoKlg+iIiu4fGhYfjk7p5wVEpYf+gUHvp6L7R1DaJj0f9IzCrHT/uKIEnAvMk94KricoslY/kgIroO43u1x9KH+sNNpURq7lnctSgVZdo60bEIgKamAS9fWG55OC4U/UO9BCeia2H5ICK6ToM7+eCnJ2PRzt0Jx0orMWFBCrLLK0XHsntvrj+CMq0OoT5ueGF0pOg4dB1YPoiIWqBbezVWT49DmI8biitqMXFhKvYXnBMdy25tOVqGXw6chCQBH06KgYuKN7K0BiwfREQtFOzlilXT49Az2BOa2gbct2Q3/sosFR3L7lTU1OOV1RkAgMcGh6JvRy63WAuWDyKiVvByU+GHxwdiRBdf6BoNmPbdfqzYXSA6ll2Z89sRlFfqENbODc+N4nKLNWH5ICJqJReVEosf6IN7+gXDIAP/XnMYH/2VBSM/r5MuY2NmKdYcLIbiwtUtzo5cbrEmLB9ERDfAQanA3And8cyITgCAz7Zm46VfDqFRbxCczHadr67Hv9ccBtB0GXTvkLaCE1FLsXwQEd0gSZLw7M2d8e6d3aGQgJX7TuKJb/ejpr5RdDSbNHtdJs5U6RDh2wbPjuwsOg61AssHEZGR3DcgBIsf6AtnRwW2HivHvUt242yVTnQsm7Ih4xTWpZdAqZDwEZdbrBbLBxGREd3c1Q8rHhsIT1dHpBdVYNKiVBSerREdyyacrdLh1bVNyy3ThoWhR7Cn2EDUaiwfRERG1qdDW6yaFof2ni7IO1ONCQtTcLhYIzqW1Xv910ycra5HpJ87nr5wjg1ZJ5YPIiITiPBtg9Uz4hAV4IEzVTrcvTgV246fFh3Laq0/VILfM05BqZAwb3IPODlwucWasXwQEZmIn4czVj45EIMivFFdr8cjy/ZizcGTomNZndOVOrx2YbklYXg4ugepBSeiG8XyQURkQu7Ojlj6UH/c0SMQjQYZz/6UjkXJObwXyHWSZRmvrs3A+ZoGdPF3x8ybuNxiC1g+iIhMTOWgwCd398TjQ0IBAO9tOIY5vx2B3sACci3r0kuwMbMMDgoJH93VAyoHfm3ZAh5FIiIzUCgk/HtMV7w6JgoAsCwlH0/9cAB1DXrBySxXeWUdZq/LBADMvCkC0YFcbrEVLB9ERGb02JAwfHpvLzgqJfyRUYqpX++BprZBdCyLI8sy/r3mMCpqGtA1wAMJ8RGiI5ERsXwQEZnZHT0Csfzh/mjj5IDdeedw16JUlGrqRMeyKGvTirHpSBkclU3LLY5Kfl3ZEh5NIiIB4iJ8sPLJWPi6OyGrrBITFuzE8bJK0bEsQpm2DrN/bVpuefqmTogK8BCciIyN5YOISJCugR5YPSMOYe3cUKKpw6SFKdibf050LKFkWcYrqzOgrWtE9/ZqTBseLjoSmQDLBxGRQEFtXfHLtDj0DvGEtq4RU77cjT8PnxIdS5hfDhRj67FyqJQKzJvM5RZbxaNKRCRYWzcVVjw2ECOj/FDfaMD0FQfwbWq+6Fhmd0pTizm/NS23zLq5EyL93QUnIlNh+SAisgAuKiUW3d8b9/YPgSwDr/2aiQ83HrObm5HJsoyXf8lAZV0jegR74okhYaIjkQmxfBARWQgHpQLv3tkN/7q5MwBgfmIOXlh1CA16g+BkprdyXxGSj5+GykGBjybHwIHLLTaNR5eIyIJIkoSnR3TCexO6Q6mQsGr/STz+zT5U6xpFRzOZ4opavL3+KADguZs7I8KXyy22juWDiMgC3dM/BF880AfOjgokZZ3GvUt24UyVTnQso2tabjmESl0jeoV44jEut9gFlg8iIgs1IsoPPzw+EG1dHXHopAYTF6ag4Gy16FhG9cOeImw/cQZODk1XtygVkuhIZAYsH0REFqxXSFv8Mj0OQW1dUHC2BhMWpODQyQrRsYyi6FwN3vn9CADghdGRCG/XRnAiMheWDyIiCxfWrg1Wz4hDdKAHzlbX454vdiEpq1x0rBtiMMh46ZdDqK7Xo2+Htnh4UKjoSGRGLB9ERFbA190ZPz4xEIMjfFBTr8djy/dh1f6TomO12oo9hUjJOQtnRwU+5HKL3WH5ICKyEu7Ojvj6oX4Y3zMQjQYZz/+cjvmJ2VZ3L5DCszWY+0fT1S0v3dIFoT5ughORubF8EBFZEZWDAh/f1RNPDm26KuTDjVmYvS4TeoN1FBCDQcYLq9JRU69H/1AvTI3tKDoSCcDyQURkZRQKCa/cFoXXb+8KSQK+SS3AzO8PoK5BLzraNX2Tmo/deefg4qjEh5NioOByi11i+SAislKPDA7FZ/f2gkqpwIbDpXjwqz3Q1DSIjnVF+Weq8f6fWQCAV27rgg7eXG6xVywfRERW7PaYQCx/pD/cnRywJ/8cJi9OQUlFrehY/3BxuaW2QY/YMG/cP6CD6EgkEMsHEZGViw33xsppsfDzcMLxsipMWJCCrNJK0bEusTQlH3vzz8NNpcQHXG6xeywfREQ2ICrAA6tnDEKEbxuUauswaVEKduWeFR0LAJB7ugof/HkMAPDKbVEI9nIVnIhEY/kgIrIR7T1dsGpaLPp2aIvKukY8+NUe/JFxSmgm/YVLgnWNBgyO8MGUASFC85BlYPkgIrIhnq4qfPfYAIzq6od6vQEJ3x/Asp15wvJ8vSMPBwor0MbJAe9N7A5J4nILsXwQEdkcZ0clFt7fB/cPDIEsA2/8dgTvbThm9puRZZdX4cO/mq5ueXVMFILacrmFmrB8EBHZIKVCwlvjuuH5UZ0BAIuSc/DcynQ06A1m2X+j3oDnfk5HfaMBQzu3w939gs2yX7IOLB9ERDZKkiTMvKkTPpgUA6VCwuqDxXhk2V5U6RpNvu8l2/OQXlQBdycHvDeByy10KZYPIiIbd1ffYHz5YF+4OCqx/cQZ3PvFLpyu1JlsfyfKKvGfTccBAK+N7YpATxeT7YusE8sHEZEdiO/iix+eGAgvNxUyijWYuDAFeWeqjb6f5uUWvQHxke0wuU+Q0fdB1o/lg4jITvQM9sTq6XEI8XJF4bkaTFyYgrSiCqPuY/G2XBw6qYG7swPmTojhcgtdFssHEZEd6ejjhl+mx6Fbew+cq67HvV/sQuKxcqP87mOlWnyyuWm55Y2x0fBXOxvl95LtYfkgIrIz7dyd8OMTsRjauR1qG/R47Jt9WLmv6IZ+Z4PecOFqGhkjo3wxoXd7I6UlW8TyQURkh9o4OeCrqX0xoXd76A0yXlx1CJ9tOdHqe4EsTMpBZokWahdHvHsnr26hq2P5ICKyU45KBT6a3APTh4cDAD7adByv/XoYekPLCkhmiQafbjkBAHhzXDR8PbjcQlfH8kFEZMckScJLt3TBnDuiIUnAd7sKMf27/ahr0F/X5+sbDXj+50NoNMgY1dUPd/QINHFisgUsH0REhKlxHTH/vt5QOSjw15Ey3P/lblTU1F/zc58nZuPoKS3aujriHS630HVi+SAiIgDAbd0D8O0j/eHu7IB9BecxaVEqiitqr7j94WINFiRmAwDeHNcN7dydzBWVrBzLBxERNRsQ5o1V0+Lg7+GM7PIqTFiwE0dPaf+xna5Rj+d/TkejQcZt3f1xe0yAgLRkrYxePubOnYt+/frB3d0dvr6+GD9+PLKysoy9GyIiMpFIf3esnhGHzn5tUKbV4a5FqUjNOXvJNp9tycax0kp4uanw5rhuXG6hFjF6+UhOTkZCQgJ27dqFTZs2oaGhAaNGjUJ1tfFv40tERKYR6OmCn5+MQ/+OXqjUNWLq13uw/lAJACC9qAILk3MAAG+N6wafNlxuoZaR5NZe1H2dTp8+DV9fXyQnJ2Po0KHX3F6r1UKtVkOj0cDDw8OU0YiI6BrqGvR49qc0bDhcCkkCXrm1C37edxInyqtwe0wAPr+vt+iIZCFa8v1t8nM+NBoNAMDLy+uyP9fpdNBqtZe8iIjIMjg7KvH5fb3xYGwHyDLw7h/HcKK8Cj5tmpZbiFrDpOXDYDBg1qxZGDRoELp1u/z/pHPnzoVarW5+BQcHmzISERG1kFIhYc4d0Xjxlsjm994e3x1ebiqBqciamXTZZfr06diwYQN27NiBoKDLP1ZZp9NBp9M1/1mr1SI4OJjLLkREFigl5wwq6xoxOtpfdBSyMC1ZdnEwVYiZM2di/fr12LZt2xWLBwA4OTnByYknKxERWYO4cB/REcgGGL18yLKMp556CmvWrEFSUhJCQ0ONvQsiIiKyYkYvHwkJCfj+++/x66+/wt3dHaWlpQAAtVoNFxcXY++OiIiIrIzRz/m40o1mli5dioceeuian+eltkRERNZH6DkfJr5tCBEREVk5PtuFiIiIzIrlg4iIiMyK5YOIiIjMiuWDiIiIzIrlg4iIiMyK5YOIiIjMiuWDiIiIzIrlg4iIiMyK5YOIiIjMymRPtW2ti3dI1Wq1gpMQERHR9br4vX09dzq3uPJRWVkJAAgODhachIiIiFqqsrISarX6qtsY/cFyN8pgMKCkpATu7u5XfEhda2m1WgQHB6OoqMgmH1pn6+MDbH+MHJ/1s/UxcnzWz1RjlGUZlZWVCAwMhEJx9bM6LG7mQ6FQICgoyKT78PDwsNn/qQDbHx9g+2Pk+KyfrY+R47N+phjjtWY8LuIJp0RERGRWLB9ERERkVnZVPpycnDB79mw4OTmJjmIStj4+wPbHyPFZP1sfI8dn/SxhjBZ3wikRERHZNrua+SAiIiLxWD6IiIjIrFg+iIiIyKxYPoiIiMisbKZ8bNu2DWPHjkVgYCAkScLatWuv+ZmkpCT07t0bTk5OiIiIwLJly0ye80a0dIxJSUmQJOkfr9LSUvMEbqG5c+eiX79+cHd3h6+vL8aPH4+srKxrfu7nn39Gly5d4OzsjO7du+OPP/4wQ9qWa834li1b9o/j5+zsbKbELbNw4ULExMQ037goNjYWGzZsuOpnrOXYXdTSMVrT8buc9957D5IkYdasWVfdztqO40XXMz5rO4ZvvPHGP/J26dLlqp8RcfxspnxUV1ejR48emD9//nVtn5eXhzFjxiA+Ph5paWmYNWsWHnvsMWzcuNHESVuvpWO8KCsrC6dOnWp++fr6mijhjUlOTkZCQgJ27dqFTZs2oaGhAaNGjUJ1dfUVP5OSkoJ7770Xjz76KA4ePIjx48dj/PjxOHz4sBmTX5/WjA9ougvh/x6/goICMyVumaCgILz33nvYv38/9u3bh5tuugnjxo1DZmbmZbe3pmN3UUvHCFjP8fu7vXv3YvHixYiJibnqdtZ4HIHrHx9gfccwOjr6krw7duy44rbCjp9sgwDIa9asueo2L774ohwdHX3Je3fffbc8evRoEyYznusZY2JiogxAPn/+vFkyGVt5ebkMQE5OTr7iNnfddZc8ZsyYS94bMGCA/OSTT5o63g27nvEtXbpUVqvV5gtlZG3btpW//PLLy/7Mmo/d/7raGK31+FVWVsqdOnWSN23aJA8bNkx+5plnrritNR7HlozP2o7h7Nmz5R49elz39qKOn83MfLRUamoqRo4cecl7o0ePRmpqqqBEptOzZ08EBATg5ptvxs6dO0XHuW4ajQYA4OXldcVtrPk4Xs/4AKCqqgodOnRAcHDwNf+VbSn0ej1+/PFHVFdXIzY29rLbWPOxA65vjIB1Hr+EhASMGTPmH8fncqzxOLZkfID1HcMTJ04gMDAQYWFhmDJlCgoLC6+4rajjZ3EPljOX0tJS+Pn5XfKen58ftFotamtr4eLiIiiZ8QQEBGDRokXo27cvdDodvvzySwwfPhy7d+9G7969Rce7KoPBgFmzZmHQoEHo1q3bFbe70nG01PNaLrre8UVGRuLrr79GTEwMNBoN5s2bh7i4OGRmZpr8AYytkZGRgdjYWNTV1aFNmzZYs2YNunbtetltrfXYtWSM1nb8AODHH3/EgQMHsHfv3uva3tqOY0vHZ23HcMCAAVi2bBkiIyNx6tQpzJkzB0OGDMHhw4fh7u7+j+1FHT+7LR/2IDIyEpGRkc1/jouLQ05ODv7zn//g22+/FZjs2hISEnD48OGrrlVas+sdX2xs7CX/qo6Li0NUVBQWL16Mt956y9QxWywyMhJpaWnQaDRYtWoVpk6diuTk5Ct+OVujlozR2o5fUVERnnnmGWzatMmiT6psrdaMz9qO4a233tr83zExMRgwYAA6dOiAlStX4tFHHxWY7FJ2Wz78/f1RVlZ2yXtlZWXw8PCwiVmPK+nfv7/Ff6HPnDkT69evx7Zt2675L4srHUd/f39TRrwhLRnf3zk6OqJXr17Izs42Ubobo1KpEBERAQDo06cP9u7di//+979YvHjxP7a1xmMHtGyMf2fpx2///v0oLy+/ZGZUr9dj27Zt+Pzzz6HT6aBUKi/5jDUdx9aM7+8s/Rj+naenJzp37nzFvKKOn92e8xEbG4stW7Zc8t6mTZuuunZrC9LS0hAQECA6xmXJsoyZM2dizZo12Lp1K0JDQ6/5GWs6jq0Z39/p9XpkZGRY7DH8O4PBAJ1Od9mfWdOxu5qrjfHvLP34jRgxAhkZGUhLS2t+9e3bF1OmTEFaWtplv5it6Ti2Znx/Z+nH8O+qqqqQk5NzxbzCjp9JT2c1o8rKSvngwYPywYMHZQDyxx9/LB88eFAuKCiQZVmWX375ZfmBBx5o3j43N1d2dXWVX3jhBfno0aPy/PnzZaVSKf/555+ihnBNLR3jf/7zH3nt2rXyiRMn5IyMDPmZZ56RFQqFvHnzZlFDuKrp06fLarVaTkpKkk+dOtX8qqmpad7mgQcekF9++eXmP+/cuVN2cHCQ582bJx89elSePXu27OjoKGdkZIgYwlW1Znxz5syRN27cKOfk5Mj79++X77nnHtnZ2VnOzMwUMYSrevnll+Xk5GQ5Ly9PPnTokPzyyy/LkiTJf/31lyzL1n3sLmrpGK3p+F3J368GsYXj+L+uNT5rO4bPPfecnJSUJOfl5ck7d+6UR44cKfv4+Mjl5eWyLFvO8bOZ8nHxstK/v6ZOnSrLsixPnTpVHjZs2D8+07NnT1mlUslhYWHy0qVLzZ67JVo6xvfff18ODw+XnZ2dZS8vL3n48OHy1q1bxYS/DpcbG4BLjsuwYcOax3vRypUr5c6dO8sqlUqOjo6Wf//9d/MGv06tGd+sWbPkkJAQWaVSyX5+fvJtt90mHzhwwPzhr8Mjjzwid+jQQVapVHK7du3kESNGNH8py7J1H7uLWjpGazp+V/L3L2dbOI7/61rjs7ZjePfdd8sBAQGySqWS27dvL999991ydnZ2888t5fhJsizLpp1bISIiIvo/dnvOBxEREYnB8kFERERmxfJBREREZsXyQURERGbF8kFERERmxfJBREREZsXyQURERGbF8kFERERmxfJBREREZsXyQURERGbF8kFERERmxfJBREREZvX/ASva4CFihT+DAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":["#그래프가 여러개일 때\n","figure = plt.figure()\n","axes = figure.add_subplot(111)\n","x = [1, 2, 3, 4, 5]\n","y1 = [ 2, 5, 8, 1, 2]\n","y2 = [1, 2, 3, 4, 5]\n","\n","axes.plot(x, y1, color = 'red', linewidth = '3.0', linestyle='dashed')\n","axes.plot(x, y2, color = 'black', marker = '.')\n","# axes.plot(x, y1, x, y2, marker = '.', linestyle='dashed')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"IYKxE_YtCS59","executionInfo":{"status":"ok","timestamp":1707032511390,"user_tz":-540,"elapsed":1083,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"c5003b3e-2277-4d7a-d542-57a9be8f0ab5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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56uvvmLq1KksXbqUBQsWUFNTw0UXXUR5efkpP2fJkiXccMMN3H777axevZpJkyYxadIk1q9f34qVN0xTjg/M2fG+e/727NnTShU3XufOnXn88cfJzc1l5cqVXHDBBVx++eVs2LDhpPsH0vmDxh8fBNb5+64VK1Ywc+ZMsrKyTrtfoJ3D4xp6fBB453DAgAEn1Lt48eJT7mvZ+TMCEGC8//77p93n17/+tTFgwIATtl133XXGxRdf3IKV+UZDju/LL780AOPIkSOtUpOvFRUVGYDx1VdfnXKfa6+91sjJyTlh28iRI4277rqrpctrtoYc3yuvvGI4HI7WK6oFtGvXznj55ZdP+logn7/jTnd8gXr+SktLjV69ehkLFiwwzjvvPOO+++475b6BeA4bc3yBdg4ffvhhY9CgQQ3e36rzFzAtFo317bffMn78+BO2XXzxxXz77bcWVdQyBg8eTFpaGhdeeCHffPON1eU0mNPpBCAxMfGU+wTyOWzI8QGUlZWRkZFBenr6Gf869icej4c333yT8vJyRo0addJ9Avn8NeT4IDDP39SpU8nJyfnBuTmZQDyHjTk+CLxzuG3bNjp27Ej37t2ZPHky+fn5p9zXqvPX6ouQtZYDBw7QoUOHE7Z16NABl8tFZWUlMTExFlXmG2lpabzwwgsMGzYMt9vNyy+/zPnnn8+yZcsYOnSo1eWdltfrZdq0aYwZM4aBAweecr9TnUN/HUdyXEOPr0+fPvzzn/8kKysLp9PJk08+yejRo9mwYUOLLtTXHHl5eYwaNYqqqiratGnD+++/T//+/U+6byCev8YcXyCevzfffJNVq1axYsWKBu0faOewsccXaOdw5MiRzJo1iz59+lBYWMgjjzzCOeecw/r164mPj//B/ladv6ANFsGuT58+9OnTp+756NGj2bFjB08//TSvvvqqhZWd2dSpU1m/fv1p+wYDWUOPb9SoUSf8NTx69Gj69evHzJkzefTRR1u6zCbp06cPa9aswel08u9//5spU6bw1VdfnfLiG2gac3yBdv4KCgq47777WLBggV8PUGyqphxfoJ3DCRMm1H2clZXFyJEjycjI4O233+b222+3sLITBW2wSE1N5eDBgydsO3jwIAkJCQHfWnEqI0aM8PuL9c9//nPmzp3LokWLzvgXwanOYWpqakuW2CyNOb7vi4iIYMiQIWzfvr2Fqmu+yMhIevbsCUB2djYrVqzg2WefZebMmT/YNxDPX2OO7/v8/fzl5uZSVFR0Qoumx+Nh0aJF/O1vf8PtdmO320/4nEA6h005vu/z93P4fW3btqV3796nrNeq8xe0YyxGjRrF559/fsK2BQsWnLa/NNCtWbOGtLQ0q8s4KcMw+PnPf87777/PF198Qbdu3c74OYF0DptyfN/n8XjIy8vz23N4Ml6vF7fbfdLXAun8ncrpju/7/P38jRs3jry8PNasWVP3GDZsGJMnT2bNmjUnvegG0jlsyvF9n7+fw+8rKytjx44dp6zXsvPXokNDfai0tNRYvXq1sXr1agMwnnrqKWP16tXGnj17DMMwjAcffNC46aab6vbfuXOnERsba/zqV78yNm3aZDz//POG3W43Pv74Y6sO4bQae3xPP/208cEHHxjbtm0z8vLyjPvuu88ICwszPvvsM6sO4bTuvvtuw+FwGAsXLjQKCwvrHhUVFXX73HTTTcaDDz5Y9/ybb74xwsPDjSeffNLYtGmT8fDDDxsRERFGXl6eFYdwWk05vkceecT45JNPjB07dhi5ubnG9ddfb0RHRxsbNmyw4hDO6MEHHzS++uorY9euXca6deuMBx980LDZbMann35qGEZgnz/DaPzxBdr5O5nv3zUR6Ofw+850fIF2Dn/5y18aCxcuNHbt2mV88803xvjx442kpCSjqKjIMAz/OX8BEyyO3175/ceUKVMMwzCMKVOmGOedd94PPmfw4MFGZGSk0b17d+OVV15p9bobqrHH98QTTxg9evQwoqOjjcTEROP88883vvjiC2uKb4CTHRtwwjk577zz6o73uLffftvo3bu3ERkZaQwYMMCYN29e6xbeQE05vmnTphldunQxIiMjjQ4dOhiXXnqpsWrVqtYvvoFuu+02IyMjw4iMjDSSk5ONcePG1V10DSOwz59hNP74Au38ncz3L7yBfg6/70zHF2jn8LrrrjPS0tKMyMhIo1OnTsZ1111nbN++ve51fzl/WjZdREREfCZox1iIiIhI61OwEBEREZ9RsBARERGfUbAQERERn1GwEBEREZ9RsBARERGfUbAQERERn1GwEBEREZ9RsBARERGfUbAQERERn1GwEBEREZ9RsBARERGf+f9Vx/WbUNKIzAAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##2) bar() : 막대그래프"],"metadata":{"id":"rhYdZ1VZE2rS"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","!sudo apt-get install -y fonts-nanum #나눔폰트 설치\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf\n","#설치 후 런타임->세션 다시시작 클릭\n","#현 코드셀 다시 실행\n","plt.rc('font', family = 'NanumBarunGothic')\n","# plt.rc('font', size = 12)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YLLxyd38GEGp","executionInfo":{"status":"ok","timestamp":1707034058399,"user_tz":-540,"elapsed":4134,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"fd209f9c-b05e-497d-803c-900942f1be0e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","fonts-nanum is already the newest version (20200506-1).\n","0 upgraded, 0 newly installed, 0 to remove and 32 not upgraded.\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 12 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n"]}]},{"cell_type":"code","source":["figure = plt.figure()\n","axes = figure.add_subplot(111)\n","\n","x = ['봄', '여름', '가을', '겨울']\n","y = [250, 100, 200, 500]\n","\n","axes.bar(x, y)\n","plt.xlabel(\"계절\")\n","plt.ylabel(\"매출액\")\n","plt.title(\"계절별 매출액\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"zmEs6MQCCS3E","executionInfo":{"status":"ok","timestamp":1707034180425,"user_tz":-540,"elapsed":1078,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"887fb202-5b08-4946-df34-5210428bc6d6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##+) 다중 막대그래프"],"metadata":{"id":"tIsFslZ1LoIf"}},{"cell_type":"code","source":["#여러개의 막대그래프\n","figure = plt.figure()\n","axes = figure.add_subplot(111)\n","\n","category = ['봄','여름', '가을', '겨울']\n","y1 = [250, 100, 230, 400]\n","y2 = [135, 190, 270, 300]\n","\n","#그래프 위치 설정\n","bar_width = 0.35\n","x = range(len(category))\n","\n","#두개의 막대그래프 그리기\n","axes.bar(x, y1, width = bar_width, label = \"신발\")\n","axes.bar([i + bar_width for i in x], y2, width = bar_width, label = \"점퍼\")\n","\n","plt.xticks([i+bar_width / 2 for i in x], category) #x축 레이블 설정\n","plt.legend(loc='upper left')\n","\n","plt.xlabel(\"계절\")\n","plt.ylabel(\"매출액\")\n","plt.title(\"계절별 매출액\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"yxU3GUibCSwv","executionInfo":{"status":"ok","timestamp":1707034890421,"user_tz":-540,"elapsed":899,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"86ec211c-493d-40d6-d298-d7e25716dbaf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##4) scatter() : 산포그래프"],"metadata":{"id":"XA2ZM6cUNuGs"}},{"cell_type":"code","source":["figure = plt.figure()\n","axes = figure.add_subplot(111)\n","\n","x = np.random.randn(50) #50개의 랜덤한 값을 생성\n","y = np.random.randn(50)\n","\n","#산포그래프\n","plt.scatter(x, y)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":434},"id":"2Nkmpi0_NvjZ","executionInfo":{"status":"ok","timestamp":1707035176400,"user_tz":-540,"elapsed":417,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"249efa34-f3f5-4b1d-b3d8-4730f06c4b87"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 5) pie() : 원형그래프"],"metadata":{"id":"V0NnKtSKOrkl"}},{"cell_type":"code","source":["figure = plt.figure()\n","axes = figure.add_subplot(111)\n","\n","labels = ['봄', '여름', '가을', '겨울']\n","ratio = [50, 30, 12, 28]    #100을 기준으로 각 값이 몇퍼센트를 차지하는지 알려줌\n","\n","axes.pie(ratio, labels = labels, autopct=\"%.2f%%\")\n","#autopct는 부채꼴 안에 표시될 숫자의 형태를 지정할 수 있는 옵션\n","#%.1f 소수점 한자리까지 출력\n","#%%는 %를 표시\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"LgunbifiNwBz","executionInfo":{"status":"ok","timestamp":1707035583112,"user_tz":-540,"elapsed":435,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"8c1b6002-14e3-45dd-8fd6-528c63eb53df"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["#여름조각 빼내기\n","figure = plt.figure()\n","axes = figure.add_subplot(111)\n","\n","labels = ['봄', '여름', '가을', '겨울']\n","ratio = [50, 30, 12, 28]\n","\n","explode = [0.01, 0.05, 0.01, 0.01]\n","\n","axes.pie(ratio, labels = labels, autopct=\"%.2f%%\", explode=explode,\n","         wedgeprops = {'linewidth': 2, 'edgecolor' :'black'})\n","#explode : 파이차트에서 각 조각이 원래 위치에서 얼마나 떨어져야하는지를 설정하는 매개변수\n","#입력한 값은 파이차트의 반지름에 대한 비율이다\n","#explode의 값이 클수록 해당 조각은 파이 차트의 중심에서 멀어지게 된다\n","\n","#wedgeprops : 파이차트에서 각 웹지의 속성을 설정하는 데 사용하는 매개변수\n","#각 웨지의 스타일 및 속성을 조정할 때 사용\n","#edgecolor : 테두리의 색성\n","#linewidth : 테두리의 굵기\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"d5ZQGkcZNv_h","executionInfo":{"status":"ok","timestamp":1707035928117,"user_tz":-540,"elapsed":509,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"b95367f8-26e4-456e-bba6-f0814663c424"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#+. 판다스를 이용한 그래프 출력"],"metadata":{"id":"9S9d1JpQR5RU"}},{"cell_type":"code","source":["#데이터 생성\n","data = pd.Series([1, 2, 3, 4, 5])\n","#pd.Series() 함수를 이용하여 길이가 5인 1차원 시리즈 생성\n","\n","# data\n","\n","#선그래프 그리기\n","data.plot()\n","#막대그래프 그리기\n","data.plot(kind = \"bar\")\n","\n","#kind 옵션으로 그래프 종류 설정\n","#line (default) : 선그래프\n","# bar : 수직막대그래프\n","# barh : 수평막대그래프\n","# hist : 히스토그램\n","# box : 박스플롯\n","# kde : 커널밀도그래프\n","# density : 밀도 그래프\n","# pie : 파이차트\n","# area : 면적그래프\n","# scatter : 산포그래프\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"iof9D6PvNv9P","executionInfo":{"status":"ok","timestamp":1707036370807,"user_tz":-540,"elapsed":943,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"bc923449-342d-4f7e-df90-d9688e55ab61"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["data = pd.Series(np.random.randn(1000))\n","\n","#히스토그램\n","# plt.hist(data, bins = 30)\n","data.plot(kind ='hist')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":470},"id":"rmWdh0SmNv6i","executionInfo":{"status":"ok","timestamp":1707036506154,"user_tz":-540,"elapsed":1043,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"6d698382-43fe-4024-8cc1-e0b8bb7a69fa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 8722 (\\N{MINUS SIGN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# 배열 개수\n","num_arrays = 5\n","\n","# 산포 그래프 그리기\n","for i in range(num_arrays):\n","    # 배열 크기 랜덤하게 결정\n","    size = np.random.randint(100, 1000)\n","\n","    # 배열 값 랜덤하게 결정\n","    x = np.random.rand(size)\n","    y = np.random.rand(size)\n","\n","    # 산포 그래프 그리기\n","    plt.scatter(x, y, color=np.random.rand(3,), marker=np.random.choice(['o', '+', 'x', '*', 's', 'd', '.']))\n","\n","# 타이틀, 축 레이블 설정\n","plt.title('Random Scatter Plot')\n","plt.xlabel('X Axis')\n","plt.ylabel('Y Axis')\n","\n","# 그래프 출력\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"tRK5NzCATnRG","executionInfo":{"status":"ok","timestamp":1707036549597,"user_tz":-540,"elapsed":820,"user":{"displayName":"김영선","userId":"04241965593884662211"}},"outputId":"bf8383b7-2ec7-47ba-884c-4ba4c67d7ecf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#iphone.csv\n","\n","#.read_csv('iphone.csv', encoding = 'cp949')\n","#.read_csv('iphone.csv', index_col = 0)\n","\n","#1. iPhone 14의 출시일, 메모리만 출력\n","\n","#2. iPhone x 한 행을 출력\n","\n","#3. Face ID를 지원하는 iPhone 모델의 개수\n","\n","#4. iOS 14 이상 버전을 지원하는 iPhone 모델\n","\n","#5.iphone 11 pro 까지의(포함) 출시일, 디스플레이 출력(새로운 데이터 프레임이용)\n"],"metadata":{"id":"7-aMJZkrT7o9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#시청률\n","#그래프 시각화까지 진행"],"metadata":{"id":"89eI7xrpUSsi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"bghgYBy6UUVb"},"execution_count":null,"outputs":[]}]}